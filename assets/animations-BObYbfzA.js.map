{"version":3,"file":"animations-BObYbfzA.js","sources":["../../node_modules/react/cjs/react-jsx-runtime.production.min.js","../../node_modules/react/jsx-runtime.js","../../node_modules/framer-motion/dist/es/context/LayoutGroupContext.mjs","../../node_modules/framer-motion/dist/es/utils/use-constant.mjs","../../node_modules/framer-motion/dist/es/context/PresenceContext.mjs","../../node_modules/framer-motion/dist/es/context/MotionConfigContext.mjs","../../node_modules/framer-motion/dist/es/components/AnimatePresence/PopChild.mjs","../../node_modules/framer-motion/dist/es/components/AnimatePresence/PresenceChild.mjs","../../node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","../../node_modules/framer-motion/dist/es/components/AnimatePresence/utils.mjs","../../node_modules/framer-motion/dist/es/utils/is-browser.mjs","../../node_modules/framer-motion/dist/es/utils/use-isomorphic-effect.mjs","../../node_modules/framer-motion/dist/es/components/AnimatePresence/index.mjs","../../node_modules/motion-utils/dist/es/noop.mjs","../../node_modules/motion-utils/dist/es/errors.mjs","../../node_modules/motion-utils/dist/es/memo.mjs","../../node_modules/motion-utils/dist/es/progress.mjs","../../node_modules/motion-utils/dist/es/time-conversion.mjs","../../node_modules/framer-motion/dist/es/utils/GlobalConfig.mjs","../../node_modules/framer-motion/dist/es/frameloop/batcher.mjs","../../node_modules/framer-motion/dist/es/frameloop/render-step.mjs","../../node_modules/framer-motion/dist/es/frameloop/frame.mjs","../../node_modules/framer-motion/dist/es/context/LazyContext.mjs","../../node_modules/framer-motion/dist/es/motion/features/definitions.mjs","../../node_modules/framer-motion/dist/es/motion/utils/valid-prop.mjs","../../node_modules/framer-motion/dist/es/render/dom/utils/filter-props.mjs","../../node_modules/framer-motion/dist/es/render/components/create-proxy.mjs","../../node_modules/framer-motion/dist/es/context/MotionContext/index.mjs","../../node_modules/framer-motion/dist/es/render/utils/is-variant-label.mjs","../../node_modules/framer-motion/dist/es/animation/utils/is-animation-controls.mjs","../../node_modules/framer-motion/dist/es/render/utils/variant-props.mjs","../../node_modules/framer-motion/dist/es/render/utils/is-controlling-variants.mjs","../../node_modules/framer-motion/dist/es/context/MotionContext/create.mjs","../../node_modules/framer-motion/dist/es/context/MotionContext/utils.mjs","../../node_modules/framer-motion/dist/es/motion/utils/symbol.mjs","../../node_modules/framer-motion/dist/es/utils/is-ref-object.mjs","../../node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs","../../node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs","../../node_modules/framer-motion/dist/es/animation/optimized-appear/data-id.mjs","../../node_modules/framer-motion/dist/es/frameloop/microtask.mjs","../../node_modules/framer-motion/dist/es/context/SwitchLayoutGroupContext.mjs","../../node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs","../../node_modules/framer-motion/dist/es/motion/index.mjs","../../node_modules/framer-motion/dist/es/motion/features/load-features.mjs","../../node_modules/framer-motion/dist/es/render/svg/lowercase-elements.mjs","../../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs","../../node_modules/framer-motion/dist/es/render/utils/resolve-variants.mjs","../../node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs","../../node_modules/framer-motion/dist/es/utils/resolve-value.mjs","../../node_modules/framer-motion/dist/es/value/utils/is-motion-value.mjs","../../node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.mjs","../../node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs","../../node_modules/framer-motion/dist/es/render/html/utils/keys-transform.mjs","../../node_modules/framer-motion/dist/es/render/dom/utils/is-css-variable.mjs","../../node_modules/framer-motion/dist/es/render/dom/value-types/get-as-type.mjs","../../node_modules/framer-motion/dist/es/utils/clamp.mjs","../../node_modules/framer-motion/dist/es/value/types/numbers/index.mjs","../../node_modules/framer-motion/dist/es/value/types/numbers/units.mjs","../../node_modules/framer-motion/dist/es/render/dom/value-types/number-browser.mjs","../../node_modules/framer-motion/dist/es/render/dom/value-types/transform.mjs","../../node_modules/framer-motion/dist/es/render/dom/value-types/type-int.mjs","../../node_modules/framer-motion/dist/es/render/dom/value-types/number.mjs","../../node_modules/framer-motion/dist/es/render/html/utils/build-transform.mjs","../../node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs","../../node_modules/framer-motion/dist/es/render/svg/utils/path.mjs","../../node_modules/framer-motion/dist/es/render/svg/utils/transform-origin.mjs","../../node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.mjs","../../node_modules/framer-motion/dist/es/render/html/utils/create-render-state.mjs","../../node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.mjs","../../node_modules/framer-motion/dist/es/render/svg/utils/is-svg-tag.mjs","../../node_modules/framer-motion/dist/es/render/html/utils/render.mjs","../../node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs","../../node_modules/framer-motion/dist/es/render/svg/utils/render.mjs","../../node_modules/framer-motion/dist/es/projection/styles/scale-correction.mjs","../../node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs","../../node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs","../../node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs","../../node_modules/framer-motion/dist/es/render/svg/config-motion.mjs","../../node_modules/framer-motion/dist/es/render/html/config-motion.mjs","../../node_modules/framer-motion/dist/es/render/html/use-props.mjs","../../node_modules/framer-motion/dist/es/render/svg/use-props.mjs","../../node_modules/framer-motion/dist/es/render/dom/use-render.mjs","../../node_modules/framer-motion/dist/es/render/components/create-factory.mjs","../../node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","../../node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","../../node_modules/motion-dom/dist/es/utils/supports/scroll-timeline.mjs","../../node_modules/motion-dom/dist/es/animation/controls/BaseGroup.mjs","../../node_modules/motion-dom/dist/es/animation/controls/Group.mjs","../../node_modules/motion-dom/dist/es/animation/utils/get-value-transition.mjs","../../node_modules/motion-dom/dist/es/animation/generators/utils/calc-duration.mjs","../../node_modules/motion-dom/dist/es/animation/generators/utils/is-generator.mjs","../../node_modules/motion-dom/dist/es/animation/waapi/utils/attach-timeline.mjs","../../node_modules/motion-dom/dist/es/utils/is-bezier-definition.mjs","../../node_modules/motion-dom/dist/es/utils/supports/flags.mjs","../../node_modules/motion-dom/dist/es/utils/supports/memo.mjs","../../node_modules/motion-dom/dist/es/utils/supports/linear-easing.mjs","../../node_modules/motion-dom/dist/es/animation/waapi/utils/linear.mjs","../../node_modules/motion-dom/dist/es/animation/waapi/utils/easing.mjs","../../node_modules/motion-dom/dist/es/gestures/drag/state/is-active.mjs","../../node_modules/motion-dom/dist/es/gestures/utils/setup.mjs","../../node_modules/motion-dom/dist/es/utils/resolve-elements.mjs","../../node_modules/motion-dom/dist/es/gestures/hover.mjs","../../node_modules/motion-dom/dist/es/gestures/utils/is-node-or-child.mjs","../../node_modules/motion-dom/dist/es/gestures/utils/is-primary-pointer.mjs","../../node_modules/motion-dom/dist/es/gestures/press/utils/is-keyboard-accessible.mjs","../../node_modules/motion-dom/dist/es/gestures/press/utils/state.mjs","../../node_modules/motion-dom/dist/es/gestures/press/utils/keyboard.mjs","../../node_modules/motion-dom/dist/es/gestures/press/index.mjs","../../node_modules/framer-motion/dist/es/render/html/utils/keys-position.mjs","../../node_modules/framer-motion/dist/es/frameloop/sync-time.mjs","../../node_modules/framer-motion/dist/es/utils/array.mjs","../../node_modules/framer-motion/dist/es/utils/subscription-manager.mjs","../../node_modules/framer-motion/dist/es/utils/velocity-per-second.mjs","../../node_modules/framer-motion/dist/es/value/index.mjs","../../node_modules/framer-motion/dist/es/render/utils/setters.mjs","../../node_modules/framer-motion/dist/es/value/use-will-change/add-will-change.mjs","../../node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","../../node_modules/framer-motion/dist/es/animation/optimized-appear/get-appear-id.mjs","../../node_modules/framer-motion/dist/es/easing/cubic-bezier.mjs","../../node_modules/framer-motion/dist/es/easing/modifiers/mirror.mjs","../../node_modules/framer-motion/dist/es/easing/modifiers/reverse.mjs","../../node_modules/framer-motion/dist/es/easing/back.mjs","../../node_modules/framer-motion/dist/es/easing/anticipate.mjs","../../node_modules/framer-motion/dist/es/easing/circ.mjs","../../node_modules/framer-motion/dist/es/utils/is-zero-value-string.mjs","../../node_modules/framer-motion/dist/es/animation/utils/is-none.mjs","../../node_modules/framer-motion/dist/es/value/types/utils/sanitize.mjs","../../node_modules/framer-motion/dist/es/value/types/utils/float-regex.mjs","../../node_modules/framer-motion/dist/es/value/types/utils/single-color-regex.mjs","../../node_modules/framer-motion/dist/es/value/types/color/utils.mjs","../../node_modules/framer-motion/dist/es/value/types/utils/is-nullish.mjs","../../node_modules/framer-motion/dist/es/value/types/color/rgba.mjs","../../node_modules/framer-motion/dist/es/value/types/color/hex.mjs","../../node_modules/framer-motion/dist/es/value/types/color/hsla.mjs","../../node_modules/framer-motion/dist/es/value/types/color/index.mjs","../../node_modules/framer-motion/dist/es/value/types/utils/color-regex.mjs","../../node_modules/framer-motion/dist/es/value/types/complex/index.mjs","../../node_modules/framer-motion/dist/es/value/types/complex/filter.mjs","../../node_modules/framer-motion/dist/es/render/dom/value-types/defaults.mjs","../../node_modules/framer-motion/dist/es/render/dom/value-types/animatable-none.mjs","../../node_modules/framer-motion/dist/es/render/html/utils/make-none-animatable.mjs","../../node_modules/framer-motion/dist/es/render/dom/utils/unit-conversion.mjs","../../node_modules/framer-motion/dist/es/render/utils/KeyframesResolver.mjs","../../node_modules/framer-motion/dist/es/utils/is-numerical-string.mjs","../../node_modules/framer-motion/dist/es/render/dom/utils/css-variables-conversion.mjs","../../node_modules/framer-motion/dist/es/render/dom/value-types/test.mjs","../../node_modules/framer-motion/dist/es/render/dom/value-types/dimensions.mjs","../../node_modules/framer-motion/dist/es/render/dom/value-types/type-auto.mjs","../../node_modules/framer-motion/dist/es/render/dom/DOMKeyframesResolver.mjs","../../node_modules/framer-motion/dist/es/animation/utils/is-animatable.mjs","../../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/get-final-keyframe.mjs","../../node_modules/framer-motion/dist/es/animation/animators/BaseAnimation.mjs","../../node_modules/framer-motion/dist/es/animation/animators/utils/can-animate.mjs","../../node_modules/framer-motion/dist/es/utils/mix/number.mjs","../../node_modules/framer-motion/dist/es/utils/hsla-to-rgba.mjs","../../node_modules/framer-motion/dist/es/utils/mix/immediate.mjs","../../node_modules/framer-motion/dist/es/utils/mix/color.mjs","../../node_modules/framer-motion/dist/es/utils/pipe.mjs","../../node_modules/framer-motion/dist/es/utils/mix/visibility.mjs","../../node_modules/framer-motion/dist/es/utils/mix/complex.mjs","../../node_modules/framer-motion/dist/es/utils/mix/index.mjs","../../node_modules/framer-motion/dist/es/animation/generators/utils/velocity.mjs","../../node_modules/framer-motion/dist/es/animation/generators/spring/defaults.mjs","../../node_modules/framer-motion/dist/es/animation/generators/spring/find.mjs","../../node_modules/framer-motion/dist/es/animation/generators/spring/index.mjs","../../node_modules/framer-motion/dist/es/animation/generators/inertia.mjs","../../node_modules/framer-motion/dist/es/easing/ease.mjs","../../node_modules/framer-motion/dist/es/easing/utils/map.mjs","../../node_modules/framer-motion/dist/es/utils/interpolate.mjs","../../node_modules/framer-motion/dist/es/utils/offsets/default.mjs","../../node_modules/framer-motion/dist/es/utils/offsets/fill.mjs","../../node_modules/framer-motion/dist/es/animation/generators/keyframes.mjs","../../node_modules/framer-motion/dist/es/easing/utils/is-easing-array.mjs","../../node_modules/framer-motion/dist/es/utils/offsets/time.mjs","../../node_modules/framer-motion/dist/es/animation/animators/drivers/driver-frameloop.mjs","../../node_modules/framer-motion/dist/es/animation/animators/MainThreadAnimation.mjs","../../node_modules/framer-motion/dist/es/animation/animators/utils/accelerated-values.mjs","../../node_modules/framer-motion/dist/es/animation/animators/waapi/index.mjs","../../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/supports-waapi.mjs","../../node_modules/framer-motion/dist/es/animation/animators/AcceleratedAnimation.mjs","../../node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","../../node_modules/framer-motion/dist/es/animation/interfaces/motion-value.mjs","../../node_modules/framer-motion/dist/es/animation/utils/is-transition-defined.mjs","../../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-target.mjs","../../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-variant.mjs","../../node_modules/framer-motion/dist/es/render/utils/get-variant-context.mjs","../../node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","../../node_modules/framer-motion/dist/es/animation/interfaces/visual-element.mjs","../../node_modules/framer-motion/dist/es/motion/features/Feature.mjs","../../node_modules/framer-motion/dist/es/motion/features/animation/exit.mjs","../../node_modules/framer-motion/dist/es/motion/features/animations.mjs","../../node_modules/framer-motion/dist/es/motion/features/animation/index.mjs","../../node_modules/framer-motion/dist/es/events/add-dom-event.mjs","../../node_modules/framer-motion/dist/es/events/event-info.mjs","../../node_modules/framer-motion/dist/es/events/add-pointer-event.mjs","../../node_modules/framer-motion/dist/es/utils/distance.mjs","../../node_modules/framer-motion/dist/es/gestures/pan/PanSession.mjs","../../node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","../../node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","../../node_modules/framer-motion/dist/es/projection/geometry/models.mjs","../../node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","../../node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","../../node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","../../node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","../../node_modules/framer-motion/dist/es/projection/utils/measure.mjs","../../node_modules/framer-motion/dist/es/utils/get-context-window.mjs","../../node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","../../node_modules/motion-dom/dist/es/gestures/drag/state/set-active.mjs","../../node_modules/framer-motion/dist/es/gestures/pan/index.mjs","../../node_modules/framer-motion/dist/es/projection/node/state.mjs","../../node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","../../node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","../../node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","../../node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","../../node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","../../node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","../../node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","../../node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","../../node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","../../node_modules/framer-motion/dist/es/projection/shared/stack.mjs","../../node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","../../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-element.mjs","../../node_modules/framer-motion/dist/es/utils/delay.mjs","../../node_modules/framer-motion/dist/es/animation/animate/single-value.mjs","../../node_modules/framer-motion/dist/es/projection/styles/transform.mjs","../../node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","../../node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","../../node_modules/framer-motion/dist/es/motion/features/drag.mjs","../../node_modules/framer-motion/dist/es/gestures/drag/index.mjs","../../node_modules/framer-motion/dist/es/gestures/hover.mjs","../../node_modules/framer-motion/dist/es/gestures/press.mjs","../../node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","../../node_modules/framer-motion/dist/es/motion/features/viewport/index.mjs","../../node_modules/framer-motion/dist/es/motion/features/gestures.mjs","../../node_modules/framer-motion/dist/es/gestures/focus.mjs","../../node_modules/framer-motion/dist/es/motion/features/layout.mjs","../../node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","../../node_modules/framer-motion/dist/es/render/dom/value-types/find.mjs","../../node_modules/framer-motion/dist/es/render/store.mjs","../../node_modules/framer-motion/dist/es/render/VisualElement.mjs","../../node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","../../node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","../../node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","../../node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","../../node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","../../node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","../../node_modules/framer-motion/dist/es/render/components/motion/proxy.mjs","../../node_modules/framer-motion/dist/es/render/components/motion/create.mjs"],"sourcesContent":["/**\n * @license React\n * react-jsx-runtime.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var f=require(\"react\"),k=Symbol.for(\"react.element\"),l=Symbol.for(\"react.fragment\"),m=Object.prototype.hasOwnProperty,n=f.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,p={key:!0,ref:!0,__self:!0,__source:!0};\nfunction q(c,a,g){var b,d={},e=null,h=null;void 0!==g&&(e=\"\"+g);void 0!==a.key&&(e=\"\"+a.key);void 0!==a.ref&&(h=a.ref);for(b in a)m.call(a,b)&&!p.hasOwnProperty(b)&&(d[b]=a[b]);if(c&&c.defaultProps)for(b in a=c.defaultProps,a)void 0===d[b]&&(d[b]=a[b]);return{$$typeof:k,type:c,key:e,ref:h,props:d,_owner:n.current}}exports.Fragment=l;exports.jsx=q;exports.jsxs=q;\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-jsx-runtime.production.min.js');\n} else {\n  module.exports = require('./cjs/react-jsx-runtime.development.js');\n}\n","\"use client\";\nimport { createContext } from 'react';\n\nconst LayoutGroupContext = createContext({});\n\nexport { LayoutGroupContext };\n","import { useRef } from 'react';\n\n/**\n * Creates a constant value over the lifecycle of a component.\n *\n * Even if `useMemo` is provided an empty array as its final argument, it doesn't offer\n * a guarantee that it won't re-run for performance reasons later on. By using `useConstant`\n * you can ensure that initialisers don't execute twice or more.\n */\nfunction useConstant(init) {\n    const ref = useRef(null);\n    if (ref.current === null) {\n        ref.current = init();\n    }\n    return ref.current;\n}\n\nexport { useConstant };\n","\"use client\";\nimport { createContext } from 'react';\n\n/**\n * @public\n */\nconst PresenceContext = createContext(null);\n\nexport { PresenceContext };\n","\"use client\";\nimport { createContext } from 'react';\n\n/**\n * @public\n */\nconst MotionConfigContext = createContext({\n    transformPagePoint: (p) => p,\n    isStatic: false,\n    reducedMotion: \"never\",\n});\n\nexport { MotionConfigContext };\n","\"use client\";\nimport { jsx } from 'react/jsx-runtime';\nimport * as React from 'react';\nimport { useId, useRef, useContext, useInsertionEffect } from 'react';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\n\n/**\n * Measurement functionality has to be within a separate component\n * to leverage snapshot lifecycle.\n */\nclass PopChildMeasure extends React.Component {\n    getSnapshotBeforeUpdate(prevProps) {\n        const element = this.props.childRef.current;\n        if (element && prevProps.isPresent && !this.props.isPresent) {\n            const size = this.props.sizeRef.current;\n            size.height = element.offsetHeight || 0;\n            size.width = element.offsetWidth || 0;\n            size.top = element.offsetTop;\n            size.left = element.offsetLeft;\n        }\n        return null;\n    }\n    /**\n     * Required with getSnapshotBeforeUpdate to stop React complaining.\n     */\n    componentDidUpdate() { }\n    render() {\n        return this.props.children;\n    }\n}\nfunction PopChild({ children, isPresent }) {\n    const id = useId();\n    const ref = useRef(null);\n    const size = useRef({\n        width: 0,\n        height: 0,\n        top: 0,\n        left: 0,\n    });\n    const { nonce } = useContext(MotionConfigContext);\n    /**\n     * We create and inject a style block so we can apply this explicit\n     * sizing in a non-destructive manner by just deleting the style block.\n     *\n     * We can't apply size via render as the measurement happens\n     * in getSnapshotBeforeUpdate (post-render), likewise if we apply the\n     * styles directly on the DOM node, we might be overwriting\n     * styles set via the style prop.\n     */\n    useInsertionEffect(() => {\n        const { width, height, top, left } = size.current;\n        if (isPresent || !ref.current || !width || !height)\n            return;\n        ref.current.dataset.motionPopId = id;\n        const style = document.createElement(\"style\");\n        if (nonce)\n            style.nonce = nonce;\n        document.head.appendChild(style);\n        if (style.sheet) {\n            style.sheet.insertRule(`\n          [data-motion-pop-id=\"${id}\"] {\n            position: absolute !important;\n            width: ${width}px !important;\n            height: ${height}px !important;\n            top: ${top}px !important;\n            left: ${left}px !important;\n          }\n        `);\n        }\n        return () => {\n            document.head.removeChild(style);\n        };\n    }, [isPresent]);\n    return (jsx(PopChildMeasure, { isPresent: isPresent, childRef: ref, sizeRef: size, children: React.cloneElement(children, { ref }) }));\n}\n\nexport { PopChild };\n","\"use client\";\nimport { jsx } from 'react/jsx-runtime';\nimport * as React from 'react';\nimport { useId, useCallback, useMemo } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { PopChild } from './PopChild.mjs';\n\nconst PresenceChild = ({ children, initial, isPresent, onExitComplete, custom, presenceAffectsLayout, mode, }) => {\n    const presenceChildren = useConstant(newChildrenMap);\n    const id = useId();\n    const memoizedOnExitComplete = useCallback((childId) => {\n        presenceChildren.set(childId, true);\n        for (const isComplete of presenceChildren.values()) {\n            if (!isComplete)\n                return; // can stop searching when any is incomplete\n        }\n        onExitComplete && onExitComplete();\n    }, [presenceChildren, onExitComplete]);\n    const context = useMemo(() => ({\n        id,\n        initial,\n        isPresent,\n        custom,\n        onExitComplete: memoizedOnExitComplete,\n        register: (childId) => {\n            presenceChildren.set(childId, false);\n            return () => presenceChildren.delete(childId);\n        },\n    }), \n    /**\n     * If the presence of a child affects the layout of the components around it,\n     * we want to make a new context value to ensure they get re-rendered\n     * so they can detect that layout change.\n     */\n    presenceAffectsLayout\n        ? [Math.random(), memoizedOnExitComplete]\n        : [isPresent, memoizedOnExitComplete]);\n    useMemo(() => {\n        presenceChildren.forEach((_, key) => presenceChildren.set(key, false));\n    }, [isPresent]);\n    /**\n     * If there's no `motion` components to fire exit animations, we want to remove this\n     * component immediately.\n     */\n    React.useEffect(() => {\n        !isPresent &&\n            !presenceChildren.size &&\n            onExitComplete &&\n            onExitComplete();\n    }, [isPresent]);\n    if (mode === \"popLayout\") {\n        children = jsx(PopChild, { isPresent: isPresent, children: children });\n    }\n    return (jsx(PresenceContext.Provider, { value: context, children: children }));\n};\nfunction newChildrenMap() {\n    return new Map();\n}\n\nexport { PresenceChild };\n","import { useContext, useId, useEffect, useCallback } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence(subscribe = true) {\n    const context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    const id = useId();\n    useEffect(() => {\n        if (subscribe)\n            register(id);\n    }, [subscribe]);\n    const safeToRemove = useCallback(() => subscribe && onExitComplete && onExitComplete(id), [id, onExitComplete, subscribe]);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n","import { Children, isValidElement } from 'react';\n\nconst getChildKey = (child) => child.key || \"\";\nfunction onlyElements(children) {\n    const filtered = [];\n    // We use forEach here instead of map as map mutates the component key by preprending `.$`\n    Children.forEach(children, (child) => {\n        if (isValidElement(child))\n            filtered.push(child);\n    });\n    return filtered;\n}\n\nexport { getChildKey, onlyElements };\n","const isBrowser = typeof window !== \"undefined\";\n\nexport { isBrowser };\n","import { useLayoutEffect, useEffect } from 'react';\nimport { isBrowser } from './is-browser.mjs';\n\nconst useIsomorphicLayoutEffect = isBrowser ? useLayoutEffect : useEffect;\n\nexport { useIsomorphicLayoutEffect };\n","\"use client\";\nimport { jsx, Fragment } from 'react/jsx-runtime';\nimport { useMemo, useRef, useState, useContext } from 'react';\nimport { LayoutGroupContext } from '../../context/LayoutGroupContext.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { PresenceChild } from './PresenceChild.mjs';\nimport { usePresence } from './use-presence.mjs';\nimport { onlyElements, getChildKey } from './utils.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\n\n/**\n * `AnimatePresence` enables the animation of components that have been removed from the tree.\n *\n * When adding/removing more than a single child, every child **must** be given a unique `key` prop.\n *\n * Any `motion` components that have an `exit` property defined will animate out when removed from\n * the tree.\n *\n * ```jsx\n * import { motion, AnimatePresence } from 'framer-motion'\n *\n * export const Items = ({ items }) => (\n *   <AnimatePresence>\n *     {items.map(item => (\n *       <motion.div\n *         key={item.id}\n *         initial={{ opacity: 0 }}\n *         animate={{ opacity: 1 }}\n *         exit={{ opacity: 0 }}\n *       />\n *     ))}\n *   </AnimatePresence>\n * )\n * ```\n *\n * You can sequence exit animations throughout a tree using variants.\n *\n * If a child contains multiple `motion` components with `exit` props, it will only unmount the child\n * once all `motion` components have finished animating out. Likewise, any components using\n * `usePresence` all need to call `safeToRemove`.\n *\n * @public\n */\nconst AnimatePresence = ({ children, custom, initial = true, onExitComplete, presenceAffectsLayout = true, mode = \"sync\", propagate = false, }) => {\n    const [isParentPresent, safeToRemove] = usePresence(propagate);\n    /**\n     * Filter any children that aren't ReactElements. We can only track components\n     * between renders with a props.key.\n     */\n    const presentChildren = useMemo(() => onlyElements(children), [children]);\n    /**\n     * Track the keys of the currently rendered children. This is used to\n     * determine which children are exiting.\n     */\n    const presentKeys = propagate && !isParentPresent ? [] : presentChildren.map(getChildKey);\n    /**\n     * If `initial={false}` we only want to pass this to components in the first render.\n     */\n    const isInitialRender = useRef(true);\n    /**\n     * A ref containing the currently present children. When all exit animations\n     * are complete, we use this to re-render the component with the latest children\n     * *committed* rather than the latest children *rendered*.\n     */\n    const pendingPresentChildren = useRef(presentChildren);\n    /**\n     * Track which exiting children have finished animating out.\n     */\n    const exitComplete = useConstant(() => new Map());\n    /**\n     * Save children to render as React state. To ensure this component is concurrent-safe,\n     * we check for exiting children via an effect.\n     */\n    const [diffedChildren, setDiffedChildren] = useState(presentChildren);\n    const [renderedChildren, setRenderedChildren] = useState(presentChildren);\n    useIsomorphicLayoutEffect(() => {\n        isInitialRender.current = false;\n        pendingPresentChildren.current = presentChildren;\n        /**\n         * Update complete status of exiting children.\n         */\n        for (let i = 0; i < renderedChildren.length; i++) {\n            const key = getChildKey(renderedChildren[i]);\n            if (!presentKeys.includes(key)) {\n                if (exitComplete.get(key) !== true) {\n                    exitComplete.set(key, false);\n                }\n            }\n            else {\n                exitComplete.delete(key);\n            }\n        }\n    }, [renderedChildren, presentKeys.length, presentKeys.join(\"-\")]);\n    const exitingChildren = [];\n    if (presentChildren !== diffedChildren) {\n        let nextChildren = [...presentChildren];\n        /**\n         * Loop through all the currently rendered components and decide which\n         * are exiting.\n         */\n        for (let i = 0; i < renderedChildren.length; i++) {\n            const child = renderedChildren[i];\n            const key = getChildKey(child);\n            if (!presentKeys.includes(key)) {\n                nextChildren.splice(i, 0, child);\n                exitingChildren.push(child);\n            }\n        }\n        /**\n         * If we're in \"wait\" mode, and we have exiting children, we want to\n         * only render these until they've all exited.\n         */\n        if (mode === \"wait\" && exitingChildren.length) {\n            nextChildren = exitingChildren;\n        }\n        setRenderedChildren(onlyElements(nextChildren));\n        setDiffedChildren(presentChildren);\n        /**\n         * Early return to ensure once we've set state with the latest diffed\n         * children, we can immediately re-render.\n         */\n        return;\n    }\n    if (process.env.NODE_ENV !== \"production\" &&\n        mode === \"wait\" &&\n        renderedChildren.length > 1) {\n        console.warn(`You're attempting to animate multiple children within AnimatePresence, but its mode is set to \"wait\". This will lead to odd visual behaviour.`);\n    }\n    /**\n     * If we've been provided a forceRender function by the LayoutGroupContext,\n     * we can use it to force a re-render amongst all surrounding components once\n     * all components have finished animating out.\n     */\n    const { forceRender } = useContext(LayoutGroupContext);\n    return (jsx(Fragment, { children: renderedChildren.map((child) => {\n            const key = getChildKey(child);\n            const isPresent = propagate && !isParentPresent\n                ? false\n                : presentChildren === renderedChildren ||\n                    presentKeys.includes(key);\n            const onExit = () => {\n                if (exitComplete.has(key)) {\n                    exitComplete.set(key, true);\n                }\n                else {\n                    return;\n                }\n                let isEveryExitComplete = true;\n                exitComplete.forEach((isExitComplete) => {\n                    if (!isExitComplete)\n                        isEveryExitComplete = false;\n                });\n                if (isEveryExitComplete) {\n                    forceRender === null || forceRender === void 0 ? void 0 : forceRender();\n                    setRenderedChildren(pendingPresentChildren.current);\n                    propagate && (safeToRemove === null || safeToRemove === void 0 ? void 0 : safeToRemove());\n                    onExitComplete && onExitComplete();\n                }\n            };\n            return (jsx(PresenceChild, { isPresent: isPresent, initial: !isInitialRender.current || initial\n                    ? undefined\n                    : false, custom: isPresent ? undefined : custom, presenceAffectsLayout: presenceAffectsLayout, mode: mode, onExitComplete: isPresent ? undefined : onExit, children: child }, key));\n        }) }));\n};\n\nexport { AnimatePresence };\n","/*#__NO_SIDE_EFFECTS__*/\nconst noop = (any) => any;\n\nexport { noop };\n","import { noop } from './noop.mjs';\n\nlet warning = noop;\nlet invariant = noop;\nif (process.env.NODE_ENV !== \"production\") {\n    warning = (check, message) => {\n        if (!check && typeof console !== \"undefined\") {\n            console.warn(message);\n        }\n    };\n    invariant = (check, message) => {\n        if (!check) {\n            throw new Error(message);\n        }\n    };\n}\n\nexport { invariant, warning };\n","/*#__NO_SIDE_EFFECTS__*/\nfunction memo(callback) {\n    let result;\n    return () => {\n        if (result === undefined)\n            result = callback();\n        return result;\n    };\n}\n\nexport { memo };\n","/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\n/*#__NO_SIDE_EFFECTS__*/\nconst progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\n/*#__NO_SIDE_EFFECTS__*/\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\n/*#__NO_SIDE_EFFECTS__*/\nconst millisecondsToSeconds = (milliseconds) => milliseconds / 1000;\n\nexport { millisecondsToSeconds, secondsToMilliseconds };\n","const MotionGlobalConfig = {\n    skipAnimations: false,\n    useManualTiming: false,\n};\n\nexport { MotionGlobalConfig };\n","import { MotionGlobalConfig } from '../utils/GlobalConfig.mjs';\nimport { createRenderStep } from './render-step.mjs';\n\nconst stepsOrder = [\n    \"read\", // Read\n    \"resolveKeyframes\", // Write/Read/Write/Read\n    \"update\", // Compute\n    \"preRender\", // Compute\n    \"render\", // Write\n    \"postRender\", // Compute\n];\nconst maxElapsed = 40;\nfunction createRenderBatcher(scheduleNextBatch, allowKeepAlive) {\n    let runNextFrame = false;\n    let useDefaultElapsed = true;\n    const state = {\n        delta: 0.0,\n        timestamp: 0.0,\n        isProcessing: false,\n    };\n    const flagRunNextFrame = () => (runNextFrame = true);\n    const steps = stepsOrder.reduce((acc, key) => {\n        acc[key] = createRenderStep(flagRunNextFrame);\n        return acc;\n    }, {});\n    const { read, resolveKeyframes, update, preRender, render, postRender } = steps;\n    const processBatch = () => {\n        const timestamp = MotionGlobalConfig.useManualTiming\n            ? state.timestamp\n            : performance.now();\n        runNextFrame = false;\n        state.delta = useDefaultElapsed\n            ? 1000 / 60\n            : Math.max(Math.min(timestamp - state.timestamp, maxElapsed), 1);\n        state.timestamp = timestamp;\n        state.isProcessing = true;\n        // Unrolled render loop for better per-frame performance\n        read.process(state);\n        resolveKeyframes.process(state);\n        update.process(state);\n        preRender.process(state);\n        render.process(state);\n        postRender.process(state);\n        state.isProcessing = false;\n        if (runNextFrame && allowKeepAlive) {\n            useDefaultElapsed = false;\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const wake = () => {\n        runNextFrame = true;\n        useDefaultElapsed = true;\n        if (!state.isProcessing) {\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const schedule = stepsOrder.reduce((acc, key) => {\n        const step = steps[key];\n        acc[key] = (process, keepAlive = false, immediate = false) => {\n            if (!runNextFrame)\n                wake();\n            return step.schedule(process, keepAlive, immediate);\n        };\n        return acc;\n    }, {});\n    const cancel = (process) => {\n        for (let i = 0; i < stepsOrder.length; i++) {\n            steps[stepsOrder[i]].cancel(process);\n        }\n    };\n    return { schedule, cancel, state, steps };\n}\n\nexport { createRenderBatcher, stepsOrder };\n","function createRenderStep(runNextFrame) {\n    /**\n     * We create and reuse two queues, one to queue jobs for the current frame\n     * and one for the next. We reuse to avoid triggering GC after x frames.\n     */\n    let thisFrame = new Set();\n    let nextFrame = new Set();\n    /**\n     * Track whether we're currently processing jobs in this step. This way\n     * we can decide whether to schedule new jobs for this frame or next.\n     */\n    let isProcessing = false;\n    let flushNextFrame = false;\n    /**\n     * A set of processes which were marked keepAlive when scheduled.\n     */\n    const toKeepAlive = new WeakSet();\n    let latestFrameData = {\n        delta: 0.0,\n        timestamp: 0.0,\n        isProcessing: false,\n    };\n    function triggerCallback(callback) {\n        if (toKeepAlive.has(callback)) {\n            step.schedule(callback);\n            runNextFrame();\n        }\n        callback(latestFrameData);\n    }\n    const step = {\n        /**\n         * Schedule a process to run on the next frame.\n         */\n        schedule: (callback, keepAlive = false, immediate = false) => {\n            const addToCurrentFrame = immediate && isProcessing;\n            const queue = addToCurrentFrame ? thisFrame : nextFrame;\n            if (keepAlive)\n                toKeepAlive.add(callback);\n            if (!queue.has(callback))\n                queue.add(callback);\n            return callback;\n        },\n        /**\n         * Cancel the provided callback from running on the next frame.\n         */\n        cancel: (callback) => {\n            nextFrame.delete(callback);\n            toKeepAlive.delete(callback);\n        },\n        /**\n         * Execute all schedule callbacks.\n         */\n        process: (frameData) => {\n            latestFrameData = frameData;\n            /**\n             * If we're already processing we've probably been triggered by a flushSync\n             * inside an existing process. Instead of executing, mark flushNextFrame\n             * as true and ensure we flush the following frame at the end of this one.\n             */\n            if (isProcessing) {\n                flushNextFrame = true;\n                return;\n            }\n            isProcessing = true;\n            [thisFrame, nextFrame] = [nextFrame, thisFrame];\n            // Execute this frame\n            thisFrame.forEach(triggerCallback);\n            // Clear the frame so no callbacks remain. This is to avoid\n            // memory leaks should this render step not run for a while.\n            thisFrame.clear();\n            isProcessing = false;\n            if (flushNextFrame) {\n                flushNextFrame = false;\n                step.process(frameData);\n            }\n        },\n    };\n    return step;\n}\n\nexport { createRenderStep };\n","import { noop } from 'motion-utils';\nimport { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: frame, cancel: cancelFrame, state: frameData, steps: frameSteps, } = createRenderBatcher(typeof requestAnimationFrame !== \"undefined\" ? requestAnimationFrame : noop, true);\n\nexport { cancelFrame, frame, frameData, frameSteps };\n","\"use client\";\nimport { createContext } from 'react';\n\nconst LazyContext = createContext({ strict: false });\n\nexport { LazyContext };\n","const featureProps = {\n    animation: [\n        \"animate\",\n        \"variants\",\n        \"whileHover\",\n        \"whileTap\",\n        \"exit\",\n        \"whileInView\",\n        \"whileFocus\",\n        \"whileDrag\",\n    ],\n    exit: [\"exit\"],\n    drag: [\"drag\", \"dragControls\"],\n    focus: [\"whileFocus\"],\n    hover: [\"whileHover\", \"onHoverStart\", \"onHoverEnd\"],\n    tap: [\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"],\n    pan: [\"onPan\", \"onPanStart\", \"onPanSessionStart\", \"onPanEnd\"],\n    inView: [\"whileInView\", \"onViewportEnter\", \"onViewportLeave\"],\n    layout: [\"layout\", \"layoutId\"],\n};\nconst featureDefinitions = {};\nfor (const key in featureProps) {\n    featureDefinitions[key] = {\n        isEnabled: (props) => featureProps[key].some((name) => !!props[name]),\n    };\n}\n\nexport { featureDefinitions };\n","/**\n * A list of all valid MotionProps.\n *\n * @privateRemarks\n * This doesn't throw if a `MotionProp` name is missing - it should.\n */\nconst validMotionProps = new Set([\n    \"animate\",\n    \"exit\",\n    \"variants\",\n    \"initial\",\n    \"style\",\n    \"values\",\n    \"variants\",\n    \"transition\",\n    \"transformTemplate\",\n    \"custom\",\n    \"inherit\",\n    \"onBeforeLayoutMeasure\",\n    \"onAnimationStart\",\n    \"onAnimationComplete\",\n    \"onUpdate\",\n    \"onDragStart\",\n    \"onDrag\",\n    \"onDragEnd\",\n    \"onMeasureDragConstraints\",\n    \"onDirectionLock\",\n    \"onDragTransitionEnd\",\n    \"_dragX\",\n    \"_dragY\",\n    \"onHoverStart\",\n    \"onHoverEnd\",\n    \"onViewportEnter\",\n    \"onViewportLeave\",\n    \"globalTapTarget\",\n    \"ignoreStrict\",\n    \"viewport\",\n]);\n/**\n * Check whether a prop name is a valid `MotionProp` key.\n *\n * @param key - Name of the property to check\n * @returns `true` is key is a valid `MotionProp`.\n *\n * @public\n */\nfunction isValidMotionProp(key) {\n    return (key.startsWith(\"while\") ||\n        (key.startsWith(\"drag\") && key !== \"draggable\") ||\n        key.startsWith(\"layout\") ||\n        key.startsWith(\"onTap\") ||\n        key.startsWith(\"onPan\") ||\n        key.startsWith(\"onLayout\") ||\n        validMotionProps.has(key));\n}\n\nexport { isValidMotionProp };\n","import { isValidMotionProp } from '../../../motion/utils/valid-prop.mjs';\n\nlet shouldForward = (key) => !isValidMotionProp(key);\nfunction loadExternalIsValidProp(isValidProp) {\n    if (!isValidProp)\n        return;\n    // Explicitly filter our events\n    shouldForward = (key) => key.startsWith(\"on\") ? !isValidMotionProp(key) : isValidProp(key);\n}\n/**\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\n * of these should be passed to the underlying DOM node.\n *\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\n *\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\n * actually required.\n */\ntry {\n    /**\n     * We attempt to import this package but require won't be defined in esm environments, in that case\n     * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed\n     * in favour of explicit injection.\n     */\n    loadExternalIsValidProp(require(\"@emotion/is-prop-valid\").default);\n}\ncatch (_a) {\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}\nfunction filterProps(props, isDom, forwardMotionProps) {\n    const filteredProps = {};\n    for (const key in props) {\n        /**\n         * values is considered a valid prop by Emotion, so if it's present\n         * this will be rendered out to the DOM unless explicitly filtered.\n         *\n         * We check the type as it could be used with the `feColorMatrix`\n         * element, which we support.\n         */\n        if (key === \"values\" && typeof props.values === \"object\")\n            continue;\n        if (shouldForward(key) ||\n            (forwardMotionProps === true && isValidMotionProp(key)) ||\n            (!isDom && !isValidMotionProp(key)) ||\n            // If trying to use native HTML drag events, forward drag listeners\n            (props[\"draggable\"] &&\n                key.startsWith(\"onDrag\"))) {\n            filteredProps[key] =\n                props[key];\n        }\n    }\n    return filteredProps;\n}\n\nexport { filterProps, loadExternalIsValidProp };\n","import { warnOnce } from '../../utils/warn-once.mjs';\n\nfunction createDOMMotionComponentProxy(componentFactory) {\n    if (typeof Proxy === \"undefined\") {\n        return componentFactory;\n    }\n    /**\n     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.\n     * Rather than generating them anew every render.\n     */\n    const componentCache = new Map();\n    const deprecatedFactoryFunction = (...args) => {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, \"motion() is deprecated. Use motion.create() instead.\");\n        }\n        return componentFactory(...args);\n    };\n    return new Proxy(deprecatedFactoryFunction, {\n        /**\n         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\n         * The prop name is passed through as `key` and we can use that to generate a `motion`\n         * DOM component with that name.\n         */\n        get: (_target, key) => {\n            if (key === \"create\")\n                return componentFactory;\n            /**\n             * If this element doesn't exist in the component cache, create it and cache.\n             */\n            if (!componentCache.has(key)) {\n                componentCache.set(key, componentFactory(key));\n            }\n            return componentCache.get(key);\n        },\n    });\n}\n\nexport { createDOMMotionComponentProxy };\n","\"use client\";\nimport { createContext } from 'react';\n\nconst MotionContext = createContext({});\n\nexport { MotionContext };\n","/**\n * Decides if the supplied variable is variant label\n */\nfunction isVariantLabel(v) {\n    return typeof v === \"string\" || Array.isArray(v);\n}\n\nexport { isVariantLabel };\n","function isAnimationControls(v) {\n    return (v !== null &&\n        typeof v === \"object\" &&\n        typeof v.start === \"function\");\n}\n\nexport { isAnimationControls };\n","const variantPriorityOrder = [\n    \"animate\",\n    \"whileInView\",\n    \"whileFocus\",\n    \"whileHover\",\n    \"whileTap\",\n    \"whileDrag\",\n    \"exit\",\n];\nconst variantProps = [\"initial\", ...variantPriorityOrder];\n\nexport { variantPriorityOrder, variantProps };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nfunction isControllingVariants(props) {\n    return (isAnimationControls(props.animate) ||\n        variantProps.some((name) => isVariantLabel(props[name])));\n}\nfunction isVariantNode(props) {\n    return Boolean(isControllingVariants(props) || props.variants);\n}\n\nexport { isControllingVariants, isVariantNode };\n","import { useContext, useMemo } from 'react';\nimport { MotionContext } from './index.mjs';\nimport { getCurrentTreeVariants } from './utils.mjs';\n\nfunction useCreateMotionContext(props) {\n    const { initial, animate } = getCurrentTreeVariants(props, useContext(MotionContext));\n    return useMemo(() => ({ initial, animate }), [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);\n}\nfunction variantLabelsAsDependency(prop) {\n    return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n\nexport { useCreateMotionContext };\n","import { isVariantLabel } from '../../render/utils/is-variant-label.mjs';\nimport { isControllingVariants } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction getCurrentTreeVariants(props, context) {\n    if (isControllingVariants(props)) {\n        const { initial, animate } = props;\n        return {\n            initial: initial === false || isVariantLabel(initial)\n                ? initial\n                : undefined,\n            animate: isVariantLabel(animate) ? animate : undefined,\n        };\n    }\n    return props.inherit !== false ? context : {};\n}\n\nexport { getCurrentTreeVariants };\n","const motionComponentSymbol = Symbol.for(\"motionComponentSymbol\");\n\nexport { motionComponentSymbol };\n","function isRefObject(ref) {\n    return (ref &&\n        typeof ref === \"object\" &&\n        Object.prototype.hasOwnProperty.call(ref, \"current\"));\n}\n\nexport { isRefObject };\n","import { useCallback } from 'react';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\n\n/**\n * Creates a ref function that, when called, hydrates the provided\n * external ref and VisualElement.\n */\nfunction useMotionRef(visualState, visualElement, externalRef) {\n    return useCallback((instance) => {\n        if (instance) {\n            visualState.onMount && visualState.onMount(instance);\n        }\n        if (visualElement) {\n            if (instance) {\n                visualElement.mount(instance);\n            }\n            else {\n                visualElement.unmount();\n            }\n        }\n        if (externalRef) {\n            if (typeof externalRef === \"function\") {\n                externalRef(instance);\n            }\n            else if (isRefObject(externalRef)) {\n                externalRef.current = instance;\n            }\n        }\n    }, \n    /**\n     * Only pass a new ref callback to React if we've received a visual element\n     * factory. Otherwise we'll be mounting/remounting every time externalRef\n     * or other dependencies change.\n     */\n    [visualElement]);\n}\n\nexport { useMotionRef };\n","/**\n * Convert camelCase to dash-case properties.\n */\nconst camelToDash = (str) => str.replace(/([a-z])([A-Z])/gu, \"$1-$2\").toLowerCase();\n\nexport { camelToDash };\n","import { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\n\nconst optimizedAppearDataId = \"framerAppearId\";\nconst optimizedAppearDataAttribute = \"data-\" + camelToDash(optimizedAppearDataId);\n\nexport { optimizedAppearDataAttribute, optimizedAppearDataId };\n","import { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: microtask, cancel: cancelMicrotask } = createRenderBatcher(queueMicrotask, false);\n\nexport { cancelMicrotask, microtask };\n","\"use client\";\nimport { createContext } from 'react';\n\n/**\n * Internal, exported only for usage in Framer\n */\nconst SwitchLayoutGroupContext = createContext({});\n\nexport { SwitchLayoutGroupContext };\n","import { useContext, useRef, useInsertionEffect, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\nimport { optimizedAppearDataAttribute } from '../../animation/optimized-appear/data-id.mjs';\nimport { microtask } from '../../frameloop/microtask.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { SwitchLayoutGroupContext } from '../../context/SwitchLayoutGroupContext.mjs';\n\nfunction useVisualElement(Component, visualState, props, createVisualElement, ProjectionNodeConstructor) {\n    var _a, _b;\n    const { visualElement: parent } = useContext(MotionContext);\n    const lazyContext = useContext(LazyContext);\n    const presenceContext = useContext(PresenceContext);\n    const reducedMotionConfig = useContext(MotionConfigContext).reducedMotion;\n    const visualElementRef = useRef(null);\n    /**\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n     */\n    createVisualElement = createVisualElement || lazyContext.renderer;\n    if (!visualElementRef.current && createVisualElement) {\n        visualElementRef.current = createVisualElement(Component, {\n            visualState,\n            parent,\n            props,\n            presenceContext,\n            blockInitialAnimation: presenceContext\n                ? presenceContext.initial === false\n                : false,\n            reducedMotionConfig,\n        });\n    }\n    const visualElement = visualElementRef.current;\n    /**\n     * Load Motion gesture and animation features. These are rendered as renderless\n     * components so each feature can optionally make use of React lifecycle methods.\n     */\n    const initialLayoutGroupConfig = useContext(SwitchLayoutGroupContext);\n    if (visualElement &&\n        !visualElement.projection &&\n        ProjectionNodeConstructor &&\n        (visualElement.type === \"html\" || visualElement.type === \"svg\")) {\n        createProjectionNode(visualElementRef.current, props, ProjectionNodeConstructor, initialLayoutGroupConfig);\n    }\n    const isMounted = useRef(false);\n    useInsertionEffect(() => {\n        /**\n         * Check the component has already mounted before calling\n         * `update` unnecessarily. This ensures we skip the initial update.\n         */\n        if (visualElement && isMounted.current) {\n            visualElement.update(props, presenceContext);\n        }\n    });\n    /**\n     * Cache this value as we want to know whether HandoffAppearAnimations\n     * was present on initial render - it will be deleted after this.\n     */\n    const optimisedAppearId = props[optimizedAppearDataAttribute];\n    const wantsHandoff = useRef(Boolean(optimisedAppearId) &&\n        !((_a = window.MotionHandoffIsComplete) === null || _a === void 0 ? void 0 : _a.call(window, optimisedAppearId)) &&\n        ((_b = window.MotionHasOptimisedAnimation) === null || _b === void 0 ? void 0 : _b.call(window, optimisedAppearId)));\n    useIsomorphicLayoutEffect(() => {\n        if (!visualElement)\n            return;\n        isMounted.current = true;\n        window.MotionIsMounted = true;\n        visualElement.updateFeatures();\n        microtask.render(visualElement.render);\n        /**\n         * Ideally this function would always run in a useEffect.\n         *\n         * However, if we have optimised appear animations to handoff from,\n         * it needs to happen synchronously to ensure there's no flash of\n         * incorrect styles in the event of a hydration error.\n         *\n         * So if we detect a situtation where optimised appear animations\n         * are running, we use useLayoutEffect to trigger animations.\n         */\n        if (wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n    });\n    useEffect(() => {\n        if (!visualElement)\n            return;\n        if (!wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n        if (wantsHandoff.current) {\n            // This ensures all future calls to animateChanges() in this component will run in useEffect\n            queueMicrotask(() => {\n                var _a;\n                (_a = window.MotionHandoffMarkAsComplete) === null || _a === void 0 ? void 0 : _a.call(window, optimisedAppearId);\n            });\n            wantsHandoff.current = false;\n        }\n    });\n    return visualElement;\n}\nfunction createProjectionNode(visualElement, props, ProjectionNodeConstructor, initialPromotionConfig) {\n    const { layoutId, layout, drag, dragConstraints, layoutScroll, layoutRoot, } = props;\n    visualElement.projection = new ProjectionNodeConstructor(visualElement.latestValues, props[\"data-framer-portal-id\"]\n        ? undefined\n        : getClosestProjectingNode(visualElement.parent));\n    visualElement.projection.setOptions({\n        layoutId,\n        layout,\n        alwaysMeasureLayout: Boolean(drag) || (dragConstraints && isRefObject(dragConstraints)),\n        visualElement,\n        /**\n         * TODO: Update options in an effect. This could be tricky as it'll be too late\n         * to update by the time layout animations run.\n         * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n         * ensuring it gets called if there's no potential layout animations.\n         *\n         */\n        animationType: typeof layout === \"string\" ? layout : \"both\",\n        initialPromotionConfig,\n        layoutScroll,\n        layoutRoot,\n    });\n}\nfunction getClosestProjectingNode(visualElement) {\n    if (!visualElement)\n        return undefined;\n    return visualElement.options.allowProjection !== false\n        ? visualElement.projection\n        : getClosestProjectingNode(visualElement.parent);\n}\n\nexport { useVisualElement };\n","\"use client\";\nimport { jsxs, jsx } from 'react/jsx-runtime';\nimport { warning, invariant } from 'motion-utils';\nimport { forwardRef, useContext } from 'react';\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\nimport { LazyContext } from '../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../context/MotionContext/index.mjs';\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\nimport { isBrowser } from '../utils/is-browser.mjs';\nimport { featureDefinitions } from './features/definitions.mjs';\nimport { loadFeatures } from './features/load-features.mjs';\nimport { motionComponentSymbol } from './utils/symbol.mjs';\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\nimport { useVisualElement } from './utils/use-visual-element.mjs';\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\nfunction createRendererMotionComponent({ preloadedFeatures, createVisualElement, useRender, useVisualState, Component, }) {\n    var _a, _b;\n    preloadedFeatures && loadFeatures(preloadedFeatures);\n    function MotionComponent(props, externalRef) {\n        /**\n         * If we need to measure the element we load this functionality in a\n         * separate class component in order to gain access to getSnapshotBeforeUpdate.\n         */\n        let MeasureLayout;\n        const configAndProps = {\n            ...useContext(MotionConfigContext),\n            ...props,\n            layoutId: useLayoutId(props),\n        };\n        const { isStatic } = configAndProps;\n        const context = useCreateMotionContext(props);\n        const visualState = useVisualState(props, isStatic);\n        if (!isStatic && isBrowser) {\n            useStrictMode(configAndProps, preloadedFeatures);\n            const layoutProjection = getProjectionFunctionality(configAndProps);\n            MeasureLayout = layoutProjection.MeasureLayout;\n            /**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */\n            context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement, layoutProjection.ProjectionNode);\n        }\n        /**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */\n        return (jsxs(MotionContext.Provider, { value: context, children: [MeasureLayout && context.visualElement ? (jsx(MeasureLayout, { visualElement: context.visualElement, ...configAndProps })) : null, useRender(Component, props, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, context.visualElement)] }));\n    }\n    MotionComponent.displayName = `motion.${typeof Component === \"string\"\n        ? Component\n        : `create(${(_b = (_a = Component.displayName) !== null && _a !== void 0 ? _a : Component.name) !== null && _b !== void 0 ? _b : \"\"})`}`;\n    const ForwardRefMotionComponent = forwardRef(MotionComponent);\n    ForwardRefMotionComponent[motionComponentSymbol] = Component;\n    return ForwardRefMotionComponent;\n}\nfunction useLayoutId({ layoutId }) {\n    const layoutGroupId = useContext(LayoutGroupContext).id;\n    return layoutGroupId && layoutId !== undefined\n        ? layoutGroupId + \"-\" + layoutId\n        : layoutId;\n}\nfunction useStrictMode(configAndProps, preloadedFeatures) {\n    const isStrict = useContext(LazyContext).strict;\n    /**\n     * If we're in development mode, check to make sure we're not rendering a motion component\n     * as a child of LazyMotion, as this will break the file-size benefits of using it.\n     */\n    if (process.env.NODE_ENV !== \"production\" &&\n        preloadedFeatures &&\n        isStrict) {\n        const strictMessage = \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\";\n        configAndProps.ignoreStrict\n            ? warning(false, strictMessage)\n            : invariant(false, strictMessage);\n    }\n}\nfunction getProjectionFunctionality(props) {\n    const { drag, layout } = featureDefinitions;\n    if (!drag && !layout)\n        return {};\n    const combined = { ...drag, ...layout };\n    return {\n        MeasureLayout: (drag === null || drag === void 0 ? void 0 : drag.isEnabled(props)) || (layout === null || layout === void 0 ? void 0 : layout.isEnabled(props))\n            ? combined.MeasureLayout\n            : undefined,\n        ProjectionNode: combined.ProjectionNode,\n    };\n}\n\nexport { createRendererMotionComponent };\n","import { featureDefinitions } from './definitions.mjs';\n\nfunction loadFeatures(features) {\n    for (const key in features) {\n        featureDefinitions[key] = {\n            ...featureDefinitions[key],\n            ...features[key],\n        };\n    }\n}\n\nexport { loadFeatures };\n","/**\n * We keep these listed separately as we use the lowercase tag names as part\n * of the runtime bundle to detect SVG components\n */\nconst lowercaseSVGElements = [\n    \"animate\",\n    \"circle\",\n    \"defs\",\n    \"desc\",\n    \"ellipse\",\n    \"g\",\n    \"image\",\n    \"line\",\n    \"filter\",\n    \"marker\",\n    \"mask\",\n    \"metadata\",\n    \"path\",\n    \"pattern\",\n    \"polygon\",\n    \"polyline\",\n    \"rect\",\n    \"stop\",\n    \"switch\",\n    \"symbol\",\n    \"svg\",\n    \"text\",\n    \"tspan\",\n    \"use\",\n    \"view\",\n];\n\nexport { lowercaseSVGElements };\n","import { lowercaseSVGElements } from '../../svg/lowercase-elements.mjs';\n\nfunction isSVGComponent(Component) {\n    if (\n    /**\n     * If it's not a string, it's a custom React component. Currently we only support\n     * HTML custom React components.\n     */\n    typeof Component !== \"string\" ||\n        /**\n         * If it contains a dash, the element is a custom HTML webcomponent.\n         */\n        Component.includes(\"-\")) {\n        return false;\n    }\n    else if (\n    /**\n     * If it's in our list of lowercase SVG tags, it's an SVG component\n     */\n    lowercaseSVGElements.indexOf(Component) > -1 ||\n        /**\n         * If it contains a capital letter, it's an SVG component\n         */\n        /[A-Z]/u.test(Component)) {\n        return true;\n    }\n    return false;\n}\n\nexport { isSVGComponent };\n","function getValueState(visualElement) {\n    const state = [{}, {}];\n    visualElement === null || visualElement === void 0 ? void 0 : visualElement.values.forEach((value, key) => {\n        state[0][key] = value.get();\n        state[1][key] = value.getVelocity();\n    });\n    return state;\n}\nfunction resolveVariantFromProps(props, definition, custom, visualElement) {\n    /**\n     * If the variant definition is a function, resolve.\n     */\n    if (typeof definition === \"function\") {\n        const [current, velocity] = getValueState(visualElement);\n        definition = definition(custom !== undefined ? custom : props.custom, current, velocity);\n    }\n    /**\n     * If the variant definition is a variant label, or\n     * the function returned a variant label, resolve.\n     */\n    if (typeof definition === \"string\") {\n        definition = props.variants && props.variants[definition];\n    }\n    /**\n     * At this point we've resolved both functions and variant labels,\n     * but the resolved variant label might itself have been a function.\n     * If so, resolve. This can only have returned a valid target object.\n     */\n    if (typeof definition === \"function\") {\n        const [current, velocity] = getValueState(visualElement);\n        definition = definition(custom !== undefined ? custom : props.custom, current, velocity);\n    }\n    return definition;\n}\n\nexport { resolveVariantFromProps };\n","const isKeyframesTarget = (v) => {\n    return Array.isArray(v);\n};\n\nexport { isKeyframesTarget };\n","import { isKeyframesTarget } from '../animation/utils/is-keyframes-target.mjs';\n\nconst isCustomValue = (v) => {\n    return Boolean(v && typeof v === \"object\" && v.mix && v.toValue);\n};\nconst resolveFinalValueInKeyframes = (v) => {\n    // TODO maybe throw if v.length - 1 is placeholder token?\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n};\n\nexport { isCustomValue, resolveFinalValueInKeyframes };\n","const isMotionValue = (value) => Boolean(value && value.getVelocity);\n\nexport { isMotionValue };\n","import { isCustomValue } from '../../utils/resolve-value.mjs';\nimport { isMotionValue } from './is-motion-value.mjs';\n\n/**\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\n *\n * TODO: Remove and move to library\n */\nfunction resolveMotionValue(value) {\n    const unwrappedValue = isMotionValue(value) ? value.get() : value;\n    return isCustomValue(unwrappedValue)\n        ? unwrappedValue.toValue()\n        : unwrappedValue;\n}\n\nexport { resolveMotionValue };\n","import { useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { isControllingVariants, isVariantNode } from '../../render/utils/is-controlling-variants.mjs';\nimport { resolveVariantFromProps } from '../../render/utils/resolve-variants.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\n\nfunction makeState({ scrapeMotionValuesFromProps, createRenderState, onUpdate, }, props, context, presenceContext) {\n    const state = {\n        latestValues: makeLatestValues(props, context, presenceContext, scrapeMotionValuesFromProps),\n        renderState: createRenderState(),\n    };\n    if (onUpdate) {\n        /**\n         * onMount works without the VisualElement because it could be\n         * called before the VisualElement payload has been hydrated.\n         * (e.g. if someone is using m components <m.circle />)\n         */\n        state.onMount = (instance) => onUpdate({ props, current: instance, ...state });\n        state.onUpdate = (visualElement) => onUpdate(visualElement);\n    }\n    return state;\n}\nconst makeUseVisualState = (config) => (props, isStatic) => {\n    const context = useContext(MotionContext);\n    const presenceContext = useContext(PresenceContext);\n    const make = () => makeState(config, props, context, presenceContext);\n    return isStatic ? make() : useConstant(make);\n};\nfunction makeLatestValues(props, context, presenceContext, scrapeMotionValues) {\n    const values = {};\n    const motionValues = scrapeMotionValues(props, {});\n    for (const key in motionValues) {\n        values[key] = resolveMotionValue(motionValues[key]);\n    }\n    let { initial, animate } = props;\n    const isControllingVariants$1 = isControllingVariants(props);\n    const isVariantNode$1 = isVariantNode(props);\n    if (context &&\n        isVariantNode$1 &&\n        !isControllingVariants$1 &&\n        props.inherit !== false) {\n        if (initial === undefined)\n            initial = context.initial;\n        if (animate === undefined)\n            animate = context.animate;\n    }\n    let isInitialAnimationBlocked = presenceContext\n        ? presenceContext.initial === false\n        : false;\n    isInitialAnimationBlocked = isInitialAnimationBlocked || initial === false;\n    const variantToSet = isInitialAnimationBlocked ? animate : initial;\n    if (variantToSet &&\n        typeof variantToSet !== \"boolean\" &&\n        !isAnimationControls(variantToSet)) {\n        const list = Array.isArray(variantToSet) ? variantToSet : [variantToSet];\n        for (let i = 0; i < list.length; i++) {\n            const resolved = resolveVariantFromProps(props, list[i]);\n            if (resolved) {\n                const { transitionEnd, transition, ...target } = resolved;\n                for (const key in target) {\n                    let valueTarget = target[key];\n                    if (Array.isArray(valueTarget)) {\n                        /**\n                         * Take final keyframe if the initial animation is blocked because\n                         * we want to initialise at the end of that blocked animation.\n                         */\n                        const index = isInitialAnimationBlocked\n                            ? valueTarget.length - 1\n                            : 0;\n                        valueTarget = valueTarget[index];\n                    }\n                    if (valueTarget !== null) {\n                        values[key] = valueTarget;\n                    }\n                }\n                for (const key in transitionEnd) {\n                    values[key] = transitionEnd[key];\n                }\n            }\n        }\n    }\n    return values;\n}\n\nexport { makeUseVisualState };\n","/**\n * Generate a list of every possible transform key.\n */\nconst transformPropOrder = [\n    \"transformPerspective\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"translateX\",\n    \"translateY\",\n    \"translateZ\",\n    \"scale\",\n    \"scaleX\",\n    \"scaleY\",\n    \"rotate\",\n    \"rotateX\",\n    \"rotateY\",\n    \"rotateZ\",\n    \"skew\",\n    \"skewX\",\n    \"skewY\",\n];\n/**\n * A quick lookup for transform props.\n */\nconst transformProps = new Set(transformPropOrder);\n\nexport { transformPropOrder, transformProps };\n","const checkStringStartsWith = (token) => (key) => typeof key === \"string\" && key.startsWith(token);\nconst isCSSVariableName = \n/*@__PURE__*/ checkStringStartsWith(\"--\");\nconst startsAsVariableToken = \n/*@__PURE__*/ checkStringStartsWith(\"var(--\");\nconst isCSSVariableToken = (value) => {\n    const startsWithToken = startsAsVariableToken(value);\n    if (!startsWithToken)\n        return false;\n    // Ensure any comments are stripped from the value as this can harm performance of the regex.\n    return singleCssVariableRegex.test(value.split(\"/*\")[0].trim());\n};\nconst singleCssVariableRegex = /var\\(--(?:[\\w-]+\\s*|[\\w-]+\\s*,(?:\\s*[^)(\\s]|\\s*\\((?:[^)(]|\\([^)(]*\\))*\\))+\\s*)\\)$/iu;\n\nexport { isCSSVariableName, isCSSVariableToken };\n","/**\n * Provided a value and a ValueType, returns the value as that value type.\n */\nconst getValueAsType = (value, type) => {\n    return type && typeof value === \"number\"\n        ? type.transform(value)\n        : value;\n};\n\nexport { getValueAsType };\n","const clamp = (min, max, v) => {\n    if (v > max)\n        return max;\n    if (v < min)\n        return min;\n    return v;\n};\n\nexport { clamp };\n","import { clamp } from '../../../utils/clamp.mjs';\n\nconst number = {\n    test: (v) => typeof v === \"number\",\n    parse: parseFloat,\n    transform: (v) => v,\n};\nconst alpha = {\n    ...number,\n    transform: (v) => clamp(0, 1, v),\n};\nconst scale = {\n    ...number,\n    default: 1,\n};\n\nexport { alpha, number, scale };\n","const createUnitType = (unit) => ({\n    test: (v) => typeof v === \"string\" && v.endsWith(unit) && v.split(\" \").length === 1,\n    parse: parseFloat,\n    transform: (v) => `${v}${unit}`,\n});\nconst degrees = /*@__PURE__*/ createUnitType(\"deg\");\nconst percent = /*@__PURE__*/ createUnitType(\"%\");\nconst px = /*@__PURE__*/ createUnitType(\"px\");\nconst vh = /*@__PURE__*/ createUnitType(\"vh\");\nconst vw = /*@__PURE__*/ createUnitType(\"vw\");\nconst progressPercentage = {\n    ...percent,\n    parse: (v) => percent.parse(v) / 100,\n    transform: (v) => percent.transform(v * 100),\n};\n\nexport { degrees, percent, progressPercentage, px, vh, vw };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst browserNumberValueTypes = {\n    // Border props\n    borderWidth: px,\n    borderTopWidth: px,\n    borderRightWidth: px,\n    borderBottomWidth: px,\n    borderLeftWidth: px,\n    borderRadius: px,\n    radius: px,\n    borderTopLeftRadius: px,\n    borderTopRightRadius: px,\n    borderBottomRightRadius: px,\n    borderBottomLeftRadius: px,\n    // Positioning props\n    width: px,\n    maxWidth: px,\n    height: px,\n    maxHeight: px,\n    top: px,\n    right: px,\n    bottom: px,\n    left: px,\n    // Spacing props\n    padding: px,\n    paddingTop: px,\n    paddingRight: px,\n    paddingBottom: px,\n    paddingLeft: px,\n    margin: px,\n    marginTop: px,\n    marginRight: px,\n    marginBottom: px,\n    marginLeft: px,\n    // Misc\n    backgroundPositionX: px,\n    backgroundPositionY: px,\n};\n\nexport { browserNumberValueTypes };\n","import { scale, alpha } from '../../../value/types/numbers/index.mjs';\nimport { degrees, px, progressPercentage } from '../../../value/types/numbers/units.mjs';\n\nconst transformValueTypes = {\n    rotate: degrees,\n    rotateX: degrees,\n    rotateY: degrees,\n    rotateZ: degrees,\n    scale,\n    scaleX: scale,\n    scaleY: scale,\n    scaleZ: scale,\n    skew: degrees,\n    skewX: degrees,\n    skewY: degrees,\n    distance: px,\n    translateX: px,\n    translateY: px,\n    translateZ: px,\n    x: px,\n    y: px,\n    z: px,\n    perspective: px,\n    transformPerspective: px,\n    opacity: alpha,\n    originX: progressPercentage,\n    originY: progressPercentage,\n    originZ: px,\n};\n\nexport { transformValueTypes };\n","import { number } from '../../../value/types/numbers/index.mjs';\n\nconst int = {\n    ...number,\n    transform: Math.round,\n};\n\nexport { int };\n","import { alpha } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\nimport { browserNumberValueTypes } from './number-browser.mjs';\nimport { transformValueTypes } from './transform.mjs';\nimport { int } from './type-int.mjs';\n\nconst numberValueTypes = {\n    ...browserNumberValueTypes,\n    ...transformValueTypes,\n    zIndex: int,\n    size: px,\n    // SVG\n    fillOpacity: alpha,\n    strokeOpacity: alpha,\n    numOctaves: int,\n};\n\nexport { numberValueTypes };\n","import { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\nimport { transformPropOrder } from './keys-transform.mjs';\n\nconst translateAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n    transformPerspective: \"perspective\",\n};\nconst numTransforms = transformPropOrder.length;\n/**\n * Build a CSS transform style from individual x/y/scale etc properties.\n *\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\n * providing a transformTemplate function.\n */\nfunction buildTransform(latestValues, transform, transformTemplate) {\n    // The transform string we're going to build into.\n    let transformString = \"\";\n    let transformIsDefault = true;\n    /**\n     * Loop over all possible transforms in order, adding the ones that\n     * are present to the transform string.\n     */\n    for (let i = 0; i < numTransforms; i++) {\n        const key = transformPropOrder[i];\n        const value = latestValues[key];\n        if (value === undefined)\n            continue;\n        let valueIsDefault = true;\n        if (typeof value === \"number\") {\n            valueIsDefault = value === (key.startsWith(\"scale\") ? 1 : 0);\n        }\n        else {\n            valueIsDefault = parseFloat(value) === 0;\n        }\n        if (!valueIsDefault || transformTemplate) {\n            const valueAsType = getValueAsType(value, numberValueTypes[key]);\n            if (!valueIsDefault) {\n                transformIsDefault = false;\n                const transformName = translateAlias[key] || key;\n                transformString += `${transformName}(${valueAsType}) `;\n            }\n            if (transformTemplate) {\n                transform[key] = valueAsType;\n            }\n        }\n    }\n    transformString = transformString.trim();\n    // If we have a custom `transform` template, pass our transform values and\n    // generated transformString to that before returning\n    if (transformTemplate) {\n        transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\n    }\n    else if (transformIsDefault) {\n        transformString = \"none\";\n    }\n    return transformString;\n}\n\nexport { buildTransform };\n","import { isCSSVariableName } from '../../dom/utils/is-css-variable.mjs';\nimport { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\nimport { buildTransform } from './build-transform.mjs';\nimport { transformProps } from './keys-transform.mjs';\n\nfunction buildHTMLStyles(state, latestValues, transformTemplate) {\n    const { style, vars, transformOrigin } = state;\n    // Track whether we encounter any transform or transformOrigin values.\n    let hasTransform = false;\n    let hasTransformOrigin = false;\n    /**\n     * Loop over all our latest animated values and decide whether to handle them\n     * as a style or CSS variable.\n     *\n     * Transforms and transform origins are kept separately for further processing.\n     */\n    for (const key in latestValues) {\n        const value = latestValues[key];\n        if (transformProps.has(key)) {\n            // If this is a transform, flag to enable further transform processing\n            hasTransform = true;\n            continue;\n        }\n        else if (isCSSVariableName(key)) {\n            vars[key] = value;\n            continue;\n        }\n        else {\n            // Convert the value to its default value type, ie 0 -> \"0px\"\n            const valueAsType = getValueAsType(value, numberValueTypes[key]);\n            if (key.startsWith(\"origin\")) {\n                // If this is a transform origin, flag and enable further transform-origin processing\n                hasTransformOrigin = true;\n                transformOrigin[key] =\n                    valueAsType;\n            }\n            else {\n                style[key] = valueAsType;\n            }\n        }\n    }\n    if (!latestValues.transform) {\n        if (hasTransform || transformTemplate) {\n            style.transform = buildTransform(latestValues, state.transform, transformTemplate);\n        }\n        else if (style.transform) {\n            /**\n             * If we have previously created a transform but currently don't have any,\n             * reset transform style to none.\n             */\n            style.transform = \"none\";\n        }\n    }\n    /**\n     * Build a transformOrigin style. Uses the same defaults as the browser for\n     * undefined origins.\n     */\n    if (hasTransformOrigin) {\n        const { originX = \"50%\", originY = \"50%\", originZ = 0, } = transformOrigin;\n        style.transformOrigin = `${originX} ${originY} ${originZ}`;\n    }\n}\n\nexport { buildHTMLStyles };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\",\n};\nconst camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\",\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {\n    // Normalise path length by setting SVG attribute pathLength to 1\n    attrs.pathLength = 1;\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    const keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = px.transform(-offset);\n    // Build the dash array\n    const pathLength = px.transform(length);\n    const pathSpacing = px.transform(spacing);\n    attrs[keys.array] = `${pathLength} ${pathSpacing}`;\n}\n\nexport { buildSVGPath };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nfunction calcOrigin(origin, offset, size) {\n    return typeof origin === \"string\"\n        ? origin\n        : px.transform(offset + size * origin);\n}\n/**\n * The SVG transform origin defaults are different to CSS and is less intuitive,\n * so we use the measured dimensions of the SVG to reconcile these.\n */\nfunction calcSVGTransformOrigin(dimensions, originX, originY) {\n    const pxOriginX = calcOrigin(originX, dimensions.x, dimensions.width);\n    const pxOriginY = calcOrigin(originY, dimensions.y, dimensions.height);\n    return `${pxOriginX} ${pxOriginY}`;\n}\n\nexport { calcSVGTransformOrigin };\n","import { buildHTMLStyles } from '../../html/utils/build-styles.mjs';\nimport { buildSVGPath } from './path.mjs';\nimport { calcSVGTransformOrigin } from './transform-origin.mjs';\n\n/**\n * Build SVG visual attrbutes, like cx and style.transform\n */\nfunction buildSVGAttrs(state, { attrX, attrY, attrScale, originX, originY, pathLength, pathSpacing = 1, pathOffset = 0, \n// This is object creation, which we try to avoid per-frame.\n...latest }, isSVGTag, transformTemplate) {\n    buildHTMLStyles(state, latest, transformTemplate);\n    /**\n     * For svg tags we just want to make sure viewBox is animatable and treat all the styles\n     * as normal HTML tags.\n     */\n    if (isSVGTag) {\n        if (state.style.viewBox) {\n            state.attrs.viewBox = state.style.viewBox;\n        }\n        return;\n    }\n    state.attrs = state.style;\n    state.style = {};\n    const { attrs, style, dimensions } = state;\n    /**\n     * However, we apply transforms as CSS transforms. So if we detect a transform we take it from attrs\n     * and copy it into style.\n     */\n    if (attrs.transform) {\n        if (dimensions)\n            style.transform = attrs.transform;\n        delete attrs.transform;\n    }\n    // Parse transformOrigin\n    if (dimensions &&\n        (originX !== undefined || originY !== undefined || style.transform)) {\n        style.transformOrigin = calcSVGTransformOrigin(dimensions, originX !== undefined ? originX : 0.5, originY !== undefined ? originY : 0.5);\n    }\n    // Render attrX/attrY/attrScale as attributes\n    if (attrX !== undefined)\n        attrs.x = attrX;\n    if (attrY !== undefined)\n        attrs.y = attrY;\n    if (attrScale !== undefined)\n        attrs.scale = attrScale;\n    // Build SVG path if one has been defined\n    if (pathLength !== undefined) {\n        buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);\n    }\n}\n\nexport { buildSVGAttrs };\n","const createHtmlRenderState = () => ({\n    style: {},\n    transform: {},\n    transformOrigin: {},\n    vars: {},\n});\n\nexport { createHtmlRenderState };\n","import { createHtmlRenderState } from '../../html/utils/create-render-state.mjs';\n\nconst createSvgRenderState = () => ({\n    ...createHtmlRenderState(),\n    attrs: {},\n});\n\nexport { createSvgRenderState };\n","const isSVGTag = (tag) => typeof tag === \"string\" && tag.toLowerCase() === \"svg\";\n\nexport { isSVGTag };\n","function renderHTML(element, { style, vars }, styleProp, projection) {\n    Object.assign(element.style, style, projection && projection.getProjectionStyles(styleProp));\n    // Loop over any CSS variables and assign those.\n    for (const key in vars) {\n        element.style.setProperty(key, vars[key]);\n    }\n}\n\nexport { renderHTML };\n","/**\n * A set of attribute names that are always read/written as camel case.\n */\nconst camelCaseAttributes = new Set([\n    \"baseFrequency\",\n    \"diffuseConstant\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerWidth\",\n    \"numOctaves\",\n    \"targetX\",\n    \"targetY\",\n    \"surfaceScale\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"stdDeviation\",\n    \"tableValues\",\n    \"viewBox\",\n    \"gradientTransform\",\n    \"pathLength\",\n    \"startOffset\",\n    \"textLength\",\n    \"lengthAdjust\",\n]);\n\nexport { camelCaseAttributes };\n","import { camelToDash } from '../../dom/utils/camel-to-dash.mjs';\nimport { renderHTML } from '../../html/utils/render.mjs';\nimport { camelCaseAttributes } from './camel-case-attrs.mjs';\n\nfunction renderSVG(element, renderState, _styleProp, projection) {\n    renderHTML(element, renderState, undefined, projection);\n    for (const key in renderState.attrs) {\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n    }\n}\n\nexport { renderSVG };\n","const scaleCorrectors = {};\nfunction addScaleCorrector(correctors) {\n    Object.assign(scaleCorrectors, correctors);\n}\n\nexport { addScaleCorrector, scaleCorrectors };\n","import { scaleCorrectors } from '../../projection/styles/scale-correction.mjs';\nimport { transformProps } from '../../render/html/utils/keys-transform.mjs';\n\nfunction isForcedMotionValue(key, { layout, layoutId }) {\n    return (transformProps.has(key) ||\n        key.startsWith(\"origin\") ||\n        ((layout || layoutId !== undefined) &&\n            (!!scaleCorrectors[key] || key === \"opacity\")));\n}\n\nexport { isForcedMotionValue };\n","import { isForcedMotionValue } from '../../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n    var _a;\n    const { style } = props;\n    const newValues = {};\n    for (const key in style) {\n        if (isMotionValue(style[key]) ||\n            (prevProps.style &&\n                isMotionValue(prevProps.style[key])) ||\n            isForcedMotionValue(key, props) ||\n            ((_a = visualElement === null || visualElement === void 0 ? void 0 : visualElement.getValue(key)) === null || _a === void 0 ? void 0 : _a.liveStyle) !== undefined) {\n            newValues[key] = style[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\nimport { transformPropOrder } from '../../html/utils/keys-transform.mjs';\nimport { scrapeMotionValuesFromProps as scrapeMotionValuesFromProps$1 } from '../../html/utils/scrape-motion-values.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n    const newValues = scrapeMotionValuesFromProps$1(props, prevProps, visualElement);\n    for (const key in props) {\n        if (isMotionValue(props[key]) ||\n            isMotionValue(prevProps[key])) {\n            const targetKey = transformPropOrder.indexOf(key) !== -1\n                ? \"attr\" + key.charAt(0).toUpperCase() + key.substring(1)\n                : key;\n            newValues[targetKey] = props[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { frame } from '../../frameloop/frame.mjs';\nimport { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { transformProps } from '../html/utils/keys-transform.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\n\nfunction updateSVGDimensions(instance, renderState) {\n    try {\n        renderState.dimensions =\n            typeof instance.getBBox === \"function\"\n                ? instance.getBBox()\n                : instance.getBoundingClientRect();\n    }\n    catch (e) {\n        // Most likely trying to measure an unrendered element under Firefox\n        renderState.dimensions = {\n            x: 0,\n            y: 0,\n            width: 0,\n            height: 0,\n        };\n    }\n}\nconst layoutProps = [\"x\", \"y\", \"width\", \"height\", \"cx\", \"cy\", \"r\"];\nconst svgMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n        createRenderState: createSvgRenderState,\n        onUpdate: ({ props, prevProps, current, renderState, latestValues, }) => {\n            if (!current)\n                return;\n            let hasTransform = !!props.drag;\n            if (!hasTransform) {\n                for (const key in latestValues) {\n                    if (transformProps.has(key)) {\n                        hasTransform = true;\n                        break;\n                    }\n                }\n            }\n            if (!hasTransform)\n                return;\n            let needsMeasure = !prevProps;\n            if (prevProps) {\n                /**\n                 * Check the layout props for changes, if any are found we need to\n                 * measure the element again.\n                 */\n                for (let i = 0; i < layoutProps.length; i++) {\n                    const key = layoutProps[i];\n                    if (props[key] !==\n                        prevProps[key]) {\n                        needsMeasure = true;\n                    }\n                }\n            }\n            if (!needsMeasure)\n                return;\n            frame.read(() => {\n                updateSVGDimensions(current, renderState);\n                frame.render(() => {\n                    buildSVGAttrs(renderState, latestValues, isSVGTag(current.tagName), props.transformTemplate);\n                    renderSVG(current, renderState);\n                });\n            });\n        },\n    }),\n};\n\nexport { svgMotionConfig };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nconst htmlMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps,\n        createRenderState: createHtmlRenderState,\n    }),\n};\n\nexport { htmlMotionConfig };\n","import { useMemo } from 'react';\nimport { isForcedMotionValue } from '../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nfunction copyRawValuesOnly(target, source, props) {\n    for (const key in source) {\n        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\n            target[key] = source[key];\n        }\n    }\n}\nfunction useInitialMotionValues({ transformTemplate }, visualState) {\n    return useMemo(() => {\n        const state = createHtmlRenderState();\n        buildHTMLStyles(state, visualState, transformTemplate);\n        return Object.assign({}, state.vars, state.style);\n    }, [visualState]);\n}\nfunction useStyle(props, visualState) {\n    const styleProp = props.style || {};\n    const style = {};\n    /**\n     * Copy non-Motion Values straight into style\n     */\n    copyRawValuesOnly(style, styleProp, props);\n    Object.assign(style, useInitialMotionValues(props, visualState));\n    return style;\n}\nfunction useHTMLProps(props, visualState) {\n    // The `any` isn't ideal but it is the type of createElement props argument\n    const htmlProps = {};\n    const style = useStyle(props, visualState);\n    if (props.drag && props.dragListener !== false) {\n        // Disable the ghost element when a user drags\n        htmlProps.draggable = false;\n        // Disable text selection\n        style.userSelect =\n            style.WebkitUserSelect =\n                style.WebkitTouchCallout =\n                    \"none\";\n        // Disable scrolling on the draggable direction\n        style.touchAction =\n            props.drag === true\n                ? \"none\"\n                : `pan-${props.drag === \"x\" ? \"y\" : \"x\"}`;\n    }\n    if (props.tabIndex === undefined &&\n        (props.onTap || props.onTapStart || props.whileTap)) {\n        htmlProps.tabIndex = 0;\n    }\n    htmlProps.style = style;\n    return htmlProps;\n}\n\nexport { copyRawValuesOnly, useHTMLProps };\n","import { useMemo } from 'react';\nimport { copyRawValuesOnly } from '../html/use-props.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nfunction useSVGProps(props, visualState, _isStatic, Component) {\n    const visualProps = useMemo(() => {\n        const state = createSvgRenderState();\n        buildSVGAttrs(state, visualState, isSVGTag(Component), props.transformTemplate);\n        return {\n            ...state.attrs,\n            style: { ...state.style },\n        };\n    }, [visualState]);\n    if (props.style) {\n        const rawStyles = {};\n        copyRawValuesOnly(rawStyles, props.style, props);\n        visualProps.style = { ...rawStyles, ...visualProps.style };\n    }\n    return visualProps;\n}\n\nexport { useSVGProps };\n","import { Fragment, useMemo, createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.mjs';\nimport { filterProps } from './utils/filter-props.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\nimport { useSVGProps } from '../svg/use-props.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction createUseRender(forwardMotionProps = false) {\n    const useRender = (Component, props, ref, { latestValues }, isStatic) => {\n        const useVisualProps = isSVGComponent(Component)\n            ? useSVGProps\n            : useHTMLProps;\n        const visualProps = useVisualProps(props, latestValues, isStatic, Component);\n        const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n        const elementProps = Component !== Fragment\n            ? { ...filteredProps, ...visualProps, ref }\n            : {};\n        /**\n         * If component has been handed a motion value as its child,\n         * memoise its initial value and render that. Subsequent updates\n         * will be handled by the onChange handler\n         */\n        const { children } = props;\n        const renderedChildren = useMemo(() => (isMotionValue(children) ? children.get() : children), [children]);\n        return createElement(Component, {\n            ...elementProps,\n            children: renderedChildren,\n        });\n    };\n    return useRender;\n}\n\nexport { createUseRender };\n","import { createRendererMotionComponent } from '../../motion/index.mjs';\nimport { isSVGComponent } from '../dom/utils/is-svg-component.mjs';\nimport { svgMotionConfig } from '../svg/config-motion.mjs';\nimport { htmlMotionConfig } from '../html/config-motion.mjs';\nimport { createUseRender } from '../dom/use-render.mjs';\n\nfunction createMotionComponentFactory(preloadedFeatures, createVisualElement) {\n    return function createMotionComponent(Component, { forwardMotionProps } = { forwardMotionProps: false }) {\n        const baseConfig = isSVGComponent(Component)\n            ? svgMotionConfig\n            : htmlMotionConfig;\n        const config = {\n            ...baseConfig,\n            preloadedFeatures,\n            useRender: createUseRender(forwardMotionProps),\n            createVisualElement,\n            Component,\n        };\n        return createRendererMotionComponent(config);\n    };\n}\n\nexport { createMotionComponentFactory };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, visualElement);\n}\n\nexport { resolveVariant };\n","import { memo } from 'motion-utils';\n\nconst supportsScrollTimeline = memo(() => window.ScrollTimeline !== undefined);\n\nexport { supportsScrollTimeline };\n","import { supportsScrollTimeline } from '../../utils/supports/scroll-timeline.mjs';\n\nclass BaseGroupPlaybackControls {\n    constructor(animations) {\n        // Bound to accomodate common `return animation.stop` pattern\n        this.stop = () => this.runAll(\"stop\");\n        this.animations = animations.filter(Boolean);\n    }\n    get finished() {\n        // Support for new finished Promise and legacy thennable API\n        return Promise.all(this.animations.map((animation) => \"finished\" in animation ? animation.finished : animation));\n    }\n    /**\n     * TODO: Filter out cancelled or stopped animations before returning\n     */\n    getAll(propName) {\n        return this.animations[0][propName];\n    }\n    setAll(propName, newValue) {\n        for (let i = 0; i < this.animations.length; i++) {\n            this.animations[i][propName] = newValue;\n        }\n    }\n    attachTimeline(timeline, fallback) {\n        const subscriptions = this.animations.map((animation) => {\n            if (supportsScrollTimeline() && animation.attachTimeline) {\n                return animation.attachTimeline(timeline);\n            }\n            else if (typeof fallback === \"function\") {\n                return fallback(animation);\n            }\n        });\n        return () => {\n            subscriptions.forEach((cancel, i) => {\n                cancel && cancel();\n                this.animations[i].stop();\n            });\n        };\n    }\n    get time() {\n        return this.getAll(\"time\");\n    }\n    set time(time) {\n        this.setAll(\"time\", time);\n    }\n    get speed() {\n        return this.getAll(\"speed\");\n    }\n    set speed(speed) {\n        this.setAll(\"speed\", speed);\n    }\n    get startTime() {\n        return this.getAll(\"startTime\");\n    }\n    get duration() {\n        let max = 0;\n        for (let i = 0; i < this.animations.length; i++) {\n            max = Math.max(max, this.animations[i].duration);\n        }\n        return max;\n    }\n    runAll(methodName) {\n        this.animations.forEach((controls) => controls[methodName]());\n    }\n    flatten() {\n        this.runAll(\"flatten\");\n    }\n    play() {\n        this.runAll(\"play\");\n    }\n    pause() {\n        this.runAll(\"pause\");\n    }\n    cancel() {\n        this.runAll(\"cancel\");\n    }\n    complete() {\n        this.runAll(\"complete\");\n    }\n}\n\nexport { BaseGroupPlaybackControls };\n","import { BaseGroupPlaybackControls } from './BaseGroup.mjs';\n\n/**\n * TODO: This is a temporary class to support the legacy\n * thennable API\n */\nclass GroupPlaybackControls extends BaseGroupPlaybackControls {\n    then(onResolve, onReject) {\n        return Promise.all(this.animations).then(onResolve).catch(onReject);\n    }\n}\n\nexport { GroupPlaybackControls };\n","function getValueTransition(transition, key) {\n    return transition\n        ? transition[key] ||\n            transition[\"default\"] ||\n            transition\n        : undefined;\n}\n\nexport { getValueTransition };\n","/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxGeneratorDuration = 20000;\nfunction calcGeneratorDuration(generator) {\n    let duration = 0;\n    const timeStep = 50;\n    let state = generator.next(duration);\n    while (!state.done && duration < maxGeneratorDuration) {\n        duration += timeStep;\n        state = generator.next(duration);\n    }\n    return duration >= maxGeneratorDuration ? Infinity : duration;\n}\n\nexport { calcGeneratorDuration, maxGeneratorDuration };\n","function isGenerator(type) {\n    return typeof type === \"function\";\n}\n\nexport { isGenerator };\n","function attachTimeline(animation, timeline) {\n    animation.timeline = timeline;\n    animation.onfinish = null;\n}\n\nexport { attachTimeline };\n","const isBezierDefinition = (easing) => Array.isArray(easing) && typeof easing[0] === \"number\";\n\nexport { isBezierDefinition };\n","/**\n * Add the ability for test suites to manually set support flags\n * to better test more environments.\n */\nconst supportsFlags = {\n    linearEasing: undefined,\n};\n\nexport { supportsFlags };\n","import { memo } from 'motion-utils';\nimport { supportsFlags } from './flags.mjs';\n\nfunction memoSupports(callback, supportsFlag) {\n    const memoized = memo(callback);\n    return () => { var _a; return (_a = supportsFlags[supportsFlag]) !== null && _a !== void 0 ? _a : memoized(); };\n}\n\nexport { memoSupports };\n","import { memoSupports } from './memo.mjs';\n\nconst supportsLinearEasing = /*@__PURE__*/ memoSupports(() => {\n    try {\n        document\n            .createElement(\"div\")\n            .animate({ opacity: 0 }, { easing: \"linear(0, 1)\" });\n    }\n    catch (e) {\n        return false;\n    }\n    return true;\n}, \"linearEasing\");\n\nexport { supportsLinearEasing };\n","import { progress } from 'motion-utils';\n\nconst generateLinearEasing = (easing, duration, // as milliseconds\nresolution = 10 // as milliseconds\n) => {\n    let points = \"\";\n    const numPoints = Math.max(Math.round(duration / resolution), 2);\n    for (let i = 0; i < numPoints; i++) {\n        points += easing(progress(0, numPoints - 1, i)) + \", \";\n    }\n    return `linear(${points.substring(0, points.length - 2)})`;\n};\n\nexport { generateLinearEasing };\n","import { isBezierDefinition } from '../../../utils/is-bezier-definition.mjs';\nimport { supportsLinearEasing } from '../../../utils/supports/linear-easing.mjs';\nimport { generateLinearEasing } from './linear.mjs';\n\nfunction isWaapiSupportedEasing(easing) {\n    return Boolean((typeof easing === \"function\" && supportsLinearEasing()) ||\n        !easing ||\n        (typeof easing === \"string\" &&\n            (easing in supportedWaapiEasing || supportsLinearEasing())) ||\n        isBezierDefinition(easing) ||\n        (Array.isArray(easing) && easing.every(isWaapiSupportedEasing)));\n}\nconst cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\nconst supportedWaapiEasing = {\n    linear: \"linear\",\n    ease: \"ease\",\n    easeIn: \"ease-in\",\n    easeOut: \"ease-out\",\n    easeInOut: \"ease-in-out\",\n    circIn: /*@__PURE__*/ cubicBezierAsString([0, 0.65, 0.55, 1]),\n    circOut: /*@__PURE__*/ cubicBezierAsString([0.55, 0, 1, 0.45]),\n    backIn: /*@__PURE__*/ cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n    backOut: /*@__PURE__*/ cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\n};\nfunction mapEasingToNativeEasing(easing, duration) {\n    if (!easing) {\n        return undefined;\n    }\n    else if (typeof easing === \"function\" && supportsLinearEasing()) {\n        return generateLinearEasing(easing, duration);\n    }\n    else if (isBezierDefinition(easing)) {\n        return cubicBezierAsString(easing);\n    }\n    else if (Array.isArray(easing)) {\n        return easing.map((segmentEasing) => mapEasingToNativeEasing(segmentEasing, duration) ||\n            supportedWaapiEasing.easeOut);\n    }\n    else {\n        return supportedWaapiEasing[easing];\n    }\n}\n\nexport { cubicBezierAsString, isWaapiSupportedEasing, mapEasingToNativeEasing, supportedWaapiEasing };\n","const isDragging = {\n    x: false,\n    y: false,\n};\nfunction isDragActive() {\n    return isDragging.x || isDragging.y;\n}\n\nexport { isDragActive, isDragging };\n","import { resolveElements } from '../../utils/resolve-elements.mjs';\n\nfunction setupGesture(elementOrSelector, options) {\n    const elements = resolveElements(elementOrSelector);\n    const gestureAbortController = new AbortController();\n    const eventOptions = {\n        passive: true,\n        ...options,\n        signal: gestureAbortController.signal,\n    };\n    const cancel = () => gestureAbortController.abort();\n    return [elements, eventOptions, cancel];\n}\n\nexport { setupGesture };\n","function resolveElements(elementOrSelector, scope, selectorCache) {\n    var _a;\n    if (elementOrSelector instanceof Element) {\n        return [elementOrSelector];\n    }\n    else if (typeof elementOrSelector === \"string\") {\n        let root = document;\n        if (scope) {\n            // TODO: Refactor to utils package\n            // invariant(\n            //     Boolean(scope.current),\n            //     \"Scope provided, but no element detected.\"\n            // )\n            root = scope.current;\n        }\n        const elements = (_a = selectorCache === null || selectorCache === void 0 ? void 0 : selectorCache[elementOrSelector]) !== null && _a !== void 0 ? _a : root.querySelectorAll(elementOrSelector);\n        return elements ? Array.from(elements) : [];\n    }\n    return Array.from(elementOrSelector);\n}\n\nexport { resolveElements };\n","import { isDragActive } from './drag/state/is-active.mjs';\nimport { setupGesture } from './utils/setup.mjs';\n\n/**\n * Filter out events that are not pointer events, or are triggering\n * while a Motion gesture is active.\n */\nfunction filterEvents(callback) {\n    return (event) => {\n        if (event.pointerType === \"touch\" || isDragActive())\n            return;\n        callback(event);\n    };\n}\n/**\n * Create a hover gesture. hover() is different to .addEventListener(\"pointerenter\")\n * in that it has an easier syntax, filters out polyfilled touch events, interoperates\n * with drag gestures, and automatically removes the \"pointerennd\" event listener when the hover ends.\n *\n * @public\n */\nfunction hover(elementOrSelector, onHoverStart, options = {}) {\n    const [elements, eventOptions, cancel] = setupGesture(elementOrSelector, options);\n    const onPointerEnter = filterEvents((enterEvent) => {\n        const { target } = enterEvent;\n        const onHoverEnd = onHoverStart(enterEvent);\n        if (typeof onHoverEnd !== \"function\" || !target)\n            return;\n        const onPointerLeave = filterEvents((leaveEvent) => {\n            onHoverEnd(leaveEvent);\n            target.removeEventListener(\"pointerleave\", onPointerLeave);\n        });\n        target.addEventListener(\"pointerleave\", onPointerLeave, eventOptions);\n    });\n    elements.forEach((element) => {\n        element.addEventListener(\"pointerenter\", onPointerEnter, eventOptions);\n    });\n    return cancel;\n}\n\nexport { hover };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","const isPrimaryPointer = (event) => {\n    if (event.pointerType === \"mouse\") {\n        return typeof event.button !== \"number\" || event.button <= 0;\n    }\n    else {\n        /**\n         * isPrimary is true for all mice buttons, whereas every touch point\n         * is regarded as its own input. So subsequent concurrent touch points\n         * will be false.\n         *\n         * Specifically match against false here as incomplete versions of\n         * PointerEvents in very old browser might have it set as undefined.\n         */\n        return event.isPrimary !== false;\n    }\n};\n\nexport { isPrimaryPointer };\n","const focusableElements = new Set([\n    \"BUTTON\",\n    \"INPUT\",\n    \"SELECT\",\n    \"TEXTAREA\",\n    \"A\",\n]);\nfunction isElementKeyboardAccessible(element) {\n    return (focusableElements.has(element.tagName) ||\n        element.tabIndex !== -1);\n}\n\nexport { isElementKeyboardAccessible };\n","const isPressing = new WeakSet();\n\nexport { isPressing };\n","import { isPressing } from './state.mjs';\n\n/**\n * Filter out events that are not \"Enter\" keys.\n */\nfunction filterEvents(callback) {\n    return (event) => {\n        if (event.key !== \"Enter\")\n            return;\n        callback(event);\n    };\n}\nfunction firePointerEvent(target, type) {\n    target.dispatchEvent(new PointerEvent(\"pointer\" + type, { isPrimary: true, bubbles: true }));\n}\nconst enableKeyboardPress = (focusEvent, eventOptions) => {\n    const element = focusEvent.currentTarget;\n    if (!element)\n        return;\n    const handleKeydown = filterEvents(() => {\n        if (isPressing.has(element))\n            return;\n        firePointerEvent(element, \"down\");\n        const handleKeyup = filterEvents(() => {\n            firePointerEvent(element, \"up\");\n        });\n        const handleBlur = () => firePointerEvent(element, \"cancel\");\n        element.addEventListener(\"keyup\", handleKeyup, eventOptions);\n        element.addEventListener(\"blur\", handleBlur, eventOptions);\n    });\n    element.addEventListener(\"keydown\", handleKeydown, eventOptions);\n    /**\n     * Add an event listener that fires on blur to remove the keydown events.\n     */\n    element.addEventListener(\"blur\", () => element.removeEventListener(\"keydown\", handleKeydown), eventOptions);\n};\n\nexport { enableKeyboardPress };\n","import { isDragActive } from '../drag/state/is-active.mjs';\nimport { isNodeOrChild } from '../utils/is-node-or-child.mjs';\nimport { isPrimaryPointer } from '../utils/is-primary-pointer.mjs';\nimport { setupGesture } from '../utils/setup.mjs';\nimport { isElementKeyboardAccessible } from './utils/is-keyboard-accessible.mjs';\nimport { enableKeyboardPress } from './utils/keyboard.mjs';\nimport { isPressing } from './utils/state.mjs';\n\n/**\n * Filter out events that are not primary pointer events, or are triggering\n * while a Motion gesture is active.\n */\nfunction isValidPressEvent(event) {\n    return isPrimaryPointer(event) && !isDragActive();\n}\n/**\n * Create a press gesture.\n *\n * Press is different to `\"pointerdown\"`, `\"pointerup\"` in that it\n * automatically filters out secondary pointer events like right\n * click and multitouch.\n *\n * It also adds accessibility support for keyboards, where\n * an element with a press gesture will receive focus and\n *  trigger on Enter `\"keydown\"` and `\"keyup\"` events.\n *\n * This is different to a browser's `\"click\"` event, which does\n * respond to keyboards but only for the `\"click\"` itself, rather\n * than the press start and end/cancel. The element also needs\n * to be focusable for this to work, whereas a press gesture will\n * make an element focusable by default.\n *\n * @public\n */\nfunction press(elementOrSelector, onPressStart, options = {}) {\n    const [elements, eventOptions, cancelEvents] = setupGesture(elementOrSelector, options);\n    const startPress = (startEvent) => {\n        const element = startEvent.currentTarget;\n        if (!isValidPressEvent(startEvent) || isPressing.has(element))\n            return;\n        isPressing.add(element);\n        const onPressEnd = onPressStart(startEvent);\n        const onPointerEnd = (endEvent, success) => {\n            window.removeEventListener(\"pointerup\", onPointerUp);\n            window.removeEventListener(\"pointercancel\", onPointerCancel);\n            if (!isValidPressEvent(endEvent) || !isPressing.has(element)) {\n                return;\n            }\n            isPressing.delete(element);\n            if (typeof onPressEnd === \"function\") {\n                onPressEnd(endEvent, { success });\n            }\n        };\n        const onPointerUp = (upEvent) => {\n            onPointerEnd(upEvent, options.useGlobalTarget ||\n                isNodeOrChild(element, upEvent.target));\n        };\n        const onPointerCancel = (cancelEvent) => {\n            onPointerEnd(cancelEvent, false);\n        };\n        window.addEventListener(\"pointerup\", onPointerUp, eventOptions);\n        window.addEventListener(\"pointercancel\", onPointerCancel, eventOptions);\n    };\n    elements.forEach((element) => {\n        if (!isElementKeyboardAccessible(element) &&\n            element.getAttribute(\"tabindex\") === null) {\n            element.tabIndex = 0;\n        }\n        const target = options.useGlobalTarget ? window : element;\n        target.addEventListener(\"pointerdown\", startPress, eventOptions);\n        element.addEventListener(\"focus\", (event) => enableKeyboardPress(event, eventOptions), eventOptions);\n    });\n    return cancelEvents;\n}\n\nexport { press };\n","import { transformPropOrder } from './keys-transform.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    ...transformPropOrder,\n]);\n\nexport { positionalKeys };\n","import { MotionGlobalConfig } from '../utils/GlobalConfig.mjs';\nimport { frameData } from './frame.mjs';\n\nlet now;\nfunction clearTime() {\n    now = undefined;\n}\n/**\n * An eventloop-synchronous alternative to performance.now().\n *\n * Ensures that time measurements remain consistent within a synchronous context.\n * Usually calling performance.now() twice within the same synchronous context\n * will return different values which isn't useful for animations when we're usually\n * trying to sync animations to the same frame.\n */\nconst time = {\n    now: () => {\n        if (now === undefined) {\n            time.set(frameData.isProcessing || MotionGlobalConfig.useManualTiming\n                ? frameData.timestamp\n                : performance.now());\n        }\n        return now;\n    },\n    set: (newTime) => {\n        now = newTime;\n        queueMicrotask(clearTime);\n    },\n};\n\nexport { time };\n","function addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nexport { addUniqueItem, moveItem, removeItem };\n","import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n","/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n","import { time } from '../frameloop/sync-time.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { velocityPerSecond } from '../utils/velocity-per-second.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\n/**\n * Maximum time between the value of two frames, beyond which we\n * assume the velocity has since been 0.\n */\nconst MAX_VELOCITY_DELTA = 30;\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\nconst collectMotionValues = {\n    current: undefined,\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     *\n     * @internal\n     */\n    constructor(init, options = {}) {\n        /**\n         * This will be replaced by the build step with the latest version number.\n         * When MotionValues are provided to motion components, warn if versions are mixed.\n         */\n        this.version = \"11.18.2\";\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = null;\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        this.updateAndNotify = (v, render = true) => {\n            const currentTime = time.now();\n            /**\n             * If we're updating the value during another frame or eventloop\n             * than the previous frame, then the we set the previous frame value\n             * to current.\n             */\n            if (this.updatedAt !== currentTime) {\n                this.setPrevFrameValue();\n            }\n            this.prev = this.current;\n            this.setCurrent(v);\n            // Update update subscribers\n            if (this.current !== this.prev && this.events.change) {\n                this.events.change.notify(this.current);\n            }\n            // Update render subscribers\n            if (render && this.events.renderRequest) {\n                this.events.renderRequest.notify(this.current);\n            }\n        };\n        this.hasAnimated = false;\n        this.setCurrent(init);\n        this.owner = options.owner;\n    }\n    setCurrent(current) {\n        this.current = current;\n        this.updatedAt = time.now();\n        if (this.canTrackVelocity === null && current !== undefined) {\n            this.canTrackVelocity = isFloat(this.current);\n        }\n    }\n    setPrevFrameValue(prevFrameValue = this.current) {\n        this.prevFrameValue = prevFrameValue;\n        this.prevUpdatedAt = this.updatedAt;\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.on(\"change\", updateOpacity)\n     *     const unsubscribeY = y.on(\"change\", updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @deprecated\n     */\n    onChange(subscription) {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, `value.onChange(callback) is deprecated. Switch to value.on(\"change\", callback).`);\n        }\n        return this.on(\"change\", subscription);\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        const unsubscribe = this.events[eventName].add(callback);\n        if (eventName === \"change\") {\n            return () => {\n                unsubscribe();\n                /**\n                 * If we have no more change listeners by the start\n                 * of the next frame, stop active animations.\n                 */\n                frame.read(() => {\n                    if (!this.events.change.getSize()) {\n                        this.stop();\n                    }\n                });\n            };\n        }\n        return unsubscribe;\n    }\n    clearListeners() {\n        for (const eventManagers in this.events) {\n            this.events[eventManagers].clear();\n        }\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     *\n     * @internal\n     */\n    attach(passiveEffect, stopPassiveEffect) {\n        this.passiveEffect = passiveEffect;\n        this.stopPassiveEffect = stopPassiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v, render = true) {\n        if (!render || !this.passiveEffect) {\n            this.updateAndNotify(v, render);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    setWithVelocity(prev, current, delta) {\n        this.set(current);\n        this.prev = undefined;\n        this.prevFrameValue = prev;\n        this.prevUpdatedAt = this.updatedAt - delta;\n    }\n    /**\n     * Set the state of the `MotionValue`, stopping any active animations,\n     * effects, and resets velocity to `0`.\n     */\n    jump(v, endAnimation = true) {\n        this.updateAndNotify(v);\n        this.prev = v;\n        this.prevUpdatedAt = this.prevFrameValue = undefined;\n        endAnimation && this.stop();\n        if (this.stopPassiveEffect)\n            this.stopPassiveEffect();\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        if (collectMotionValues.current) {\n            collectMotionValues.current.push(this);\n        }\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        const currentTime = time.now();\n        if (!this.canTrackVelocity ||\n            this.prevFrameValue === undefined ||\n            currentTime - this.updatedAt > MAX_VELOCITY_DELTA) {\n            return 0;\n        }\n        const delta = Math.min(this.updatedAt - this.prevUpdatedAt, MAX_VELOCITY_DELTA);\n        // Casts because of parseFloat's poor typing\n        return velocityPerSecond(parseFloat(this.current) -\n            parseFloat(this.prevFrameValue), delta);\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     *\n     * @internal\n     */\n    start(startAnimation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.animation = startAnimation(resolve);\n            if (this.events.animationStart) {\n                this.events.animationStart.notify();\n            }\n        }).then(() => {\n            if (this.events.animationComplete) {\n                this.events.animationComplete.notify();\n            }\n            this.clearAnimation();\n        });\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.animation) {\n            this.animation.stop();\n            if (this.events.animationCancel) {\n                this.events.animationCancel.notify();\n            }\n        }\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.animation;\n    }\n    clearAnimation() {\n        delete this.animation;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.clearListeners();\n        this.stop();\n        if (this.stopPassiveEffect) {\n            this.stopPassiveEffect();\n        }\n    }\n}\nfunction motionValue(init, options) {\n    return new MotionValue(init, options);\n}\n\nexport { MotionValue, collectMotionValues, motionValue };\n","import { resolveFinalValueInKeyframes } from '../../utils/resolve-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved || {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\n\nexport { setTarget };\n","import { isWillChangeMotionValue } from './is.mjs';\n\nfunction addValueToWillChange(visualElement, key) {\n    const willChange = visualElement.getValue(\"willChange\");\n    /**\n     * It could be that a user has set willChange to a regular MotionValue,\n     * in which case we can't add the value to it.\n     */\n    if (isWillChangeMotionValue(willChange)) {\n        return willChange.add(key);\n    }\n}\n\nexport { addValueToWillChange };\n","import { isMotionValue } from '../utils/is-motion-value.mjs';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","import { optimizedAppearDataAttribute } from './data-id.mjs';\n\nfunction getOptimisedAppearId(visualElement) {\n    return visualElement.props[optimizedAppearDataAttribute];\n}\n\nexport { getOptimisedAppearId };\n","import { noop } from 'motion-utils';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticiably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","import { cubicBezier } from './cubic-bezier.mjs';\nimport { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst backOut = /*@__PURE__*/ cubicBezier(0.33, 1.53, 0.69, 0.99);\nconst backIn = /*@__PURE__*/ reverseEasing(backOut);\nconst backInOut = /*@__PURE__*/ mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut };\n","import { backIn } from './back.mjs';\n\nconst anticipate = (p) => (p *= 2) < 1 ? 0.5 * backIn(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n\nexport { anticipate };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circIn);\n\nexport { circIn, circInOut, circOut };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/u.test(v);\n\nexport { isZeroValueString };\n","import { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\n\nfunction isNone(value) {\n    if (typeof value === \"number\") {\n        return value === 0;\n    }\n    else if (value !== null) {\n        return value === \"none\" || value === \"0\" || isZeroValueString(value);\n    }\n    else {\n        return true;\n    }\n}\n\nexport { isNone };\n","// If this number is a decimal, make it just five decimal places\n// to avoid exponents\nconst sanitize = (v) => Math.round(v * 100000) / 100000;\n\nexport { sanitize };\n","const floatRegex = /-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/gu;\n\nexport { floatRegex };\n","const singleColorRegex = /^(?:#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\))$/iu;\n\nexport { singleColorRegex };\n","import { floatRegex } from '../utils/float-regex.mjs';\nimport { isNullish } from '../utils/is-nullish.mjs';\nimport { singleColorRegex } from '../utils/single-color-regex.mjs';\n\n/**\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\n * but false if a number or multiple colors\n */\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((typeof v === \"string\" &&\n        singleColorRegex.test(v) &&\n        v.startsWith(type)) ||\n        (testProp &&\n            !isNullish(v) &&\n            Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (typeof v !== \"string\")\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","function isNullish(v) {\n    return v == null;\n}\n\nexport { isNullish };\n","import { clamp } from '../../../utils/clamp.mjs';\nimport { alpha, number } from '../numbers/index.mjs';\nimport { sanitize } from '../utils/sanitize.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = (v) => clamp(0, 255, v);\nconst rgbUnit = {\n    ...number,\n    transform: (v) => Math.round(clampRgbUnit(v)),\n};\nconst rgba = {\n    test: /*@__PURE__*/ isColorString(\"rgb\", \"red\"),\n    parse: /*@__PURE__*/ splitColor(\"red\", \"green\", \"blue\"),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => \"rgba(\" +\n        rgbUnit.transform(red) +\n        \", \" +\n        rgbUnit.transform(green) +\n        \", \" +\n        rgbUnit.transform(blue) +\n        \", \" +\n        sanitize(alpha.transform(alpha$1)) +\n        \")\",\n};\n\nexport { rgbUnit, rgba };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = \"\";\n    let g = \"\";\n    let b = \"\";\n    let a = \"\";\n    // If we have 6 characters, ie #FF0000\n    if (v.length > 5) {\n        r = v.substring(1, 3);\n        g = v.substring(3, 5);\n        b = v.substring(5, 7);\n        a = v.substring(7, 9);\n        // Or we have 3 characters, ie #F00\n    }\n    else {\n        r = v.substring(1, 2);\n        g = v.substring(2, 3);\n        b = v.substring(3, 4);\n        a = v.substring(4, 5);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: /*@__PURE__*/ isColorString(\"#\"),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils/sanitize.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: /*@__PURE__*/ isColorString(\"hsl\", \"hue\"),\n    parse: /*@__PURE__*/ splitColor(\"hue\", \"saturation\", \"lightness\"),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return (\"hsla(\" +\n            Math.round(hue) +\n            \", \" +\n            percent.transform(sanitize(saturation)) +\n            \", \" +\n            percent.transform(sanitize(lightness)) +\n            \", \" +\n            sanitize(alpha.transform(alpha$1)) +\n            \")\");\n    },\n};\n\nexport { hsla };\n","import { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return typeof v === \"string\"\n            ? v\n            : v.hasOwnProperty(\"red\")\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n};\n\nexport { color };\n","const colorRegex = /(?:#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\))/giu;\n\nexport { colorRegex };\n","import { color } from '../color/index.mjs';\nimport { colorRegex } from '../utils/color-regex.mjs';\nimport { floatRegex } from '../utils/float-regex.mjs';\nimport { sanitize } from '../utils/sanitize.mjs';\n\nfunction test(v) {\n    var _a, _b;\n    return (isNaN(v) &&\n        typeof v === \"string\" &&\n        (((_a = v.match(floatRegex)) === null || _a === void 0 ? void 0 : _a.length) || 0) +\n            (((_b = v.match(colorRegex)) === null || _b === void 0 ? void 0 : _b.length) || 0) >\n            0);\n}\nconst NUMBER_TOKEN = \"number\";\nconst COLOR_TOKEN = \"color\";\nconst VAR_TOKEN = \"var\";\nconst VAR_FUNCTION_TOKEN = \"var(\";\nconst SPLIT_TOKEN = \"${}\";\n// this regex consists of the `singleCssVariableRegex|rgbHSLValueRegex|digitRegex`\nconst complexRegex = /var\\s*\\(\\s*--(?:[\\w-]+\\s*|[\\w-]+\\s*,(?:\\s*[^)(\\s]|\\s*\\((?:[^)(]|\\([^)(]*\\))*\\))+\\s*)\\)|#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\)|-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/giu;\nfunction analyseComplexValue(value) {\n    const originalValue = value.toString();\n    const values = [];\n    const indexes = {\n        color: [],\n        number: [],\n        var: [],\n    };\n    const types = [];\n    let i = 0;\n    const tokenised = originalValue.replace(complexRegex, (parsedValue) => {\n        if (color.test(parsedValue)) {\n            indexes.color.push(i);\n            types.push(COLOR_TOKEN);\n            values.push(color.parse(parsedValue));\n        }\n        else if (parsedValue.startsWith(VAR_FUNCTION_TOKEN)) {\n            indexes.var.push(i);\n            types.push(VAR_TOKEN);\n            values.push(parsedValue);\n        }\n        else {\n            indexes.number.push(i);\n            types.push(NUMBER_TOKEN);\n            values.push(parseFloat(parsedValue));\n        }\n        ++i;\n        return SPLIT_TOKEN;\n    });\n    const split = tokenised.split(SPLIT_TOKEN);\n    return { values, split, indexes, types };\n}\nfunction parseComplexValue(v) {\n    return analyseComplexValue(v).values;\n}\nfunction createTransformer(source) {\n    const { split, types } = analyseComplexValue(source);\n    const numSections = split.length;\n    return (v) => {\n        let output = \"\";\n        for (let i = 0; i < numSections; i++) {\n            output += split[i];\n            if (v[i] !== undefined) {\n                const type = types[i];\n                if (type === NUMBER_TOKEN) {\n                    output += sanitize(v[i]);\n                }\n                else if (type === COLOR_TOKEN) {\n                    output += color.transform(v[i]);\n                }\n                else {\n                    output += v[i];\n                }\n            }\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === \"number\" ? 0 : v;\nfunction getAnimatableNone(v) {\n    const parsed = parseComplexValue(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = {\n    test,\n    parse: parseComplexValue,\n    createTransformer,\n    getAnimatableNone,\n};\n\nexport { analyseComplexValue, complex };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils/float-regex.mjs';\n\n/**\n * Properties that should default to 1 or 100%\n */\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\")\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst functionRegex = /\\b([a-z-]*)\\(.*?\\)/gu;\nconst filter = {\n    ...complex,\n    getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n    },\n};\n\nexport { filter };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","import { complex } from '../../../value/types/complex/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { getDefaultValueType } from './defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return defaultValueType.getAnimatableNone\n        ? defaultValueType.getAnimatableNone(value)\n        : undefined;\n}\n\nexport { getAnimatableNone };\n","import { analyseComplexValue } from '../../../value/types/complex/index.mjs';\nimport { getAnimatableNone } from '../../dom/value-types/animatable-none.mjs';\n\n/**\n * If we encounter keyframes like \"none\" or \"0\" and we also have keyframes like\n * \"#fff\" or \"200px 200px\" we want to find a keyframe to serve as a template for\n * the \"none\" keyframes. In this case \"#fff\" or \"200px 200px\" - then these get turned into\n * zero equivalents, i.e. \"#fff0\" or \"0px 0px\".\n */\nconst invalidTemplates = new Set([\"auto\", \"none\", \"0\"]);\nfunction makeNoneKeyframesAnimatable(unresolvedKeyframes, noneKeyframeIndexes, name) {\n    let i = 0;\n    let animatableTemplate = undefined;\n    while (i < unresolvedKeyframes.length && !animatableTemplate) {\n        const keyframe = unresolvedKeyframes[i];\n        if (typeof keyframe === \"string\" &&\n            !invalidTemplates.has(keyframe) &&\n            analyseComplexValue(keyframe).values.length) {\n            animatableTemplate = unresolvedKeyframes[i];\n        }\n        i++;\n    }\n    if (animatableTemplate && name) {\n        for (const noneIndex of noneKeyframeIndexes) {\n            unresolvedKeyframes[noneIndex] = getAnimatableNone(name, animatableTemplate);\n        }\n    }\n}\n\nexport { makeNoneKeyframesAnimatable };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\nimport { transformPropOrder } from '../../html/utils/keys-transform.mjs';\n\nconst isNumOrPxType = (v) => v === number || v === px;\nconst getPosFromMatrix = (matrix, pos) => parseFloat(matrix.split(\", \")[pos]);\nconst getTranslateFromMatrix = (pos2, pos3) => (_bbox, { transform }) => {\n    if (transform === \"none\" || !transform)\n        return 0;\n    const matrix3d = transform.match(/^matrix3d\\((.+)\\)$/u);\n    if (matrix3d) {\n        return getPosFromMatrix(matrix3d[1], pos3);\n    }\n    else {\n        const matrix = transform.match(/^matrix\\((.+)\\)$/u);\n        if (matrix) {\n            return getPosFromMatrix(matrix[1], pos2);\n        }\n        else {\n            return 0;\n        }\n    }\n};\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: getTranslateFromMatrix(4, 13),\n    y: getTranslateFromMatrix(5, 14),\n};\n// Alias translate longform names\npositionalValues.translateX = positionalValues.x;\npositionalValues.translateY = positionalValues.y;\n\nexport { isNumOrPxType, positionalValues, removeNonTranslationalTransform };\n","import { removeNonTranslationalTransform } from '../dom/utils/unit-conversion.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst toResolve = new Set();\nlet isScheduled = false;\nlet anyNeedsMeasurement = false;\nfunction measureAllKeyframes() {\n    if (anyNeedsMeasurement) {\n        const resolversToMeasure = Array.from(toResolve).filter((resolver) => resolver.needsMeasurement);\n        const elementsToMeasure = new Set(resolversToMeasure.map((resolver) => resolver.element));\n        const transformsToRestore = new Map();\n        /**\n         * Write pass\n         * If we're measuring elements we want to remove bounding box-changing transforms.\n         */\n        elementsToMeasure.forEach((element) => {\n            const removedTransforms = removeNonTranslationalTransform(element);\n            if (!removedTransforms.length)\n                return;\n            transformsToRestore.set(element, removedTransforms);\n            element.render();\n        });\n        // Read\n        resolversToMeasure.forEach((resolver) => resolver.measureInitialState());\n        // Write\n        elementsToMeasure.forEach((element) => {\n            element.render();\n            const restore = transformsToRestore.get(element);\n            if (restore) {\n                restore.forEach(([key, value]) => {\n                    var _a;\n                    (_a = element.getValue(key)) === null || _a === void 0 ? void 0 : _a.set(value);\n                });\n            }\n        });\n        // Read\n        resolversToMeasure.forEach((resolver) => resolver.measureEndState());\n        // Write\n        resolversToMeasure.forEach((resolver) => {\n            if (resolver.suspendedScrollY !== undefined) {\n                window.scrollTo(0, resolver.suspendedScrollY);\n            }\n        });\n    }\n    anyNeedsMeasurement = false;\n    isScheduled = false;\n    toResolve.forEach((resolver) => resolver.complete());\n    toResolve.clear();\n}\nfunction readAllKeyframes() {\n    toResolve.forEach((resolver) => {\n        resolver.readKeyframes();\n        if (resolver.needsMeasurement) {\n            anyNeedsMeasurement = true;\n        }\n    });\n}\nfunction flushKeyframeResolvers() {\n    readAllKeyframes();\n    measureAllKeyframes();\n}\nclass KeyframeResolver {\n    constructor(unresolvedKeyframes, onComplete, name, motionValue, element, isAsync = false) {\n        /**\n         * Track whether this resolver has completed. Once complete, it never\n         * needs to attempt keyframe resolution again.\n         */\n        this.isComplete = false;\n        /**\n         * Track whether this resolver is async. If it is, it'll be added to the\n         * resolver queue and flushed in the next frame. Resolvers that aren't going\n         * to trigger read/write thrashing don't need to be async.\n         */\n        this.isAsync = false;\n        /**\n         * Track whether this resolver needs to perform a measurement\n         * to resolve its keyframes.\n         */\n        this.needsMeasurement = false;\n        /**\n         * Track whether this resolver is currently scheduled to resolve\n         * to allow it to be cancelled and resumed externally.\n         */\n        this.isScheduled = false;\n        this.unresolvedKeyframes = [...unresolvedKeyframes];\n        this.onComplete = onComplete;\n        this.name = name;\n        this.motionValue = motionValue;\n        this.element = element;\n        this.isAsync = isAsync;\n    }\n    scheduleResolve() {\n        this.isScheduled = true;\n        if (this.isAsync) {\n            toResolve.add(this);\n            if (!isScheduled) {\n                isScheduled = true;\n                frame.read(readAllKeyframes);\n                frame.resolveKeyframes(measureAllKeyframes);\n            }\n        }\n        else {\n            this.readKeyframes();\n            this.complete();\n        }\n    }\n    readKeyframes() {\n        const { unresolvedKeyframes, name, element, motionValue } = this;\n        /**\n         * If a keyframe is null, we hydrate it either by reading it from\n         * the instance, or propagating from previous keyframes.\n         */\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            if (unresolvedKeyframes[i] === null) {\n                /**\n                 * If the first keyframe is null, we need to find its value by sampling the element\n                 */\n                if (i === 0) {\n                    const currentValue = motionValue === null || motionValue === void 0 ? void 0 : motionValue.get();\n                    const finalKeyframe = unresolvedKeyframes[unresolvedKeyframes.length - 1];\n                    if (currentValue !== undefined) {\n                        unresolvedKeyframes[0] = currentValue;\n                    }\n                    else if (element && name) {\n                        const valueAsRead = element.readValue(name, finalKeyframe);\n                        if (valueAsRead !== undefined && valueAsRead !== null) {\n                            unresolvedKeyframes[0] = valueAsRead;\n                        }\n                    }\n                    if (unresolvedKeyframes[0] === undefined) {\n                        unresolvedKeyframes[0] = finalKeyframe;\n                    }\n                    if (motionValue && currentValue === undefined) {\n                        motionValue.set(unresolvedKeyframes[0]);\n                    }\n                }\n                else {\n                    unresolvedKeyframes[i] = unresolvedKeyframes[i - 1];\n                }\n            }\n        }\n    }\n    setFinalKeyframe() { }\n    measureInitialState() { }\n    renderEndStyles() { }\n    measureEndState() { }\n    complete() {\n        this.isComplete = true;\n        this.onComplete(this.unresolvedKeyframes, this.finalKeyframe);\n        toResolve.delete(this);\n    }\n    cancel() {\n        if (!this.isComplete) {\n            this.isScheduled = false;\n            toResolve.delete(this);\n        }\n    }\n    resume() {\n        if (!this.isComplete)\n            this.scheduleResolve();\n    }\n}\n\nexport { KeyframeResolver, flushKeyframeResolvers };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)$/u.test(v);\n\nexport { isNumericalString };\n","import { invariant } from 'motion-utils';\nimport { isNumericalString } from '../../../utils/is-numerical-string.mjs';\nimport { isCSSVariableToken } from './is-css-variable.mjs';\n\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst splitCSSVariableRegex = \n// eslint-disable-next-line redos-detector/no-unsafe-regex -- false positive, as it can match a lot of words\n/^var\\(--(?:([\\w-]+)|([\\w-]+), ?([a-zA-Z\\d ()%#.,-]+))\\)/u;\nfunction parseCSSVariable(current) {\n    const match = splitCSSVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token1, token2, fallback] = match;\n    return [`--${token1 !== null && token1 !== void 0 ? token1 : token2}`, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        const trimmed = resolved.trim();\n        return isNumericalString(trimmed) ? parseFloat(trimmed) : trimmed;\n    }\n    return isCSSVariableToken(fallback)\n        ? getVariableValue(fallback, element, depth + 1)\n        : fallback;\n}\n\nexport { getVariableValue, parseCSSVariable };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px, percent, degrees, vw, vh } from '../../../value/types/numbers/units.mjs';\nimport { testValueType } from './test.mjs';\nimport { auto } from './type-auto.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","import { isNone } from '../../animation/utils/is-none.mjs';\nimport { positionalKeys } from '../html/utils/keys-position.mjs';\nimport { makeNoneKeyframesAnimatable } from '../html/utils/make-none-animatable.mjs';\nimport { KeyframeResolver } from '../utils/KeyframesResolver.mjs';\nimport { getVariableValue } from './utils/css-variables-conversion.mjs';\nimport { isCSSVariableToken } from './utils/is-css-variable.mjs';\nimport { isNumOrPxType, positionalValues } from './utils/unit-conversion.mjs';\nimport { findDimensionValueType } from './value-types/dimensions.mjs';\n\nclass DOMKeyframesResolver extends KeyframeResolver {\n    constructor(unresolvedKeyframes, onComplete, name, motionValue, element) {\n        super(unresolvedKeyframes, onComplete, name, motionValue, element, true);\n    }\n    readKeyframes() {\n        const { unresolvedKeyframes, element, name } = this;\n        if (!element || !element.current)\n            return;\n        super.readKeyframes();\n        /**\n         * If any keyframe is a CSS variable, we need to find its value by sampling the element\n         */\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            let keyframe = unresolvedKeyframes[i];\n            if (typeof keyframe === \"string\") {\n                keyframe = keyframe.trim();\n                if (isCSSVariableToken(keyframe)) {\n                    const resolved = getVariableValue(keyframe, element.current);\n                    if (resolved !== undefined) {\n                        unresolvedKeyframes[i] = resolved;\n                    }\n                    if (i === unresolvedKeyframes.length - 1) {\n                        this.finalKeyframe = keyframe;\n                    }\n                }\n            }\n        }\n        /**\n         * Resolve \"none\" values. We do this potentially twice - once before and once after measuring keyframes.\n         * This could be seen as inefficient but it's a trade-off to avoid measurements in more situations, which\n         * have a far bigger performance impact.\n         */\n        this.resolveNoneKeyframes();\n        /**\n         * Check to see if unit type has changed. If so schedule jobs that will\n         * temporarily set styles to the destination keyframes.\n         * Skip if we have more than two keyframes or this isn't a positional value.\n         * TODO: We can throw if there are multiple keyframes and the value type changes.\n         */\n        if (!positionalKeys.has(name) || unresolvedKeyframes.length !== 2) {\n            return;\n        }\n        const [origin, target] = unresolvedKeyframes;\n        const originType = findDimensionValueType(origin);\n        const targetType = findDimensionValueType(target);\n        /**\n         * Either we don't recognise these value types or we can animate between them.\n         */\n        if (originType === targetType)\n            return;\n        /**\n         * If both values are numbers or pixels, we can animate between them by\n         * converting them to numbers.\n         */\n        if (isNumOrPxType(originType) && isNumOrPxType(targetType)) {\n            for (let i = 0; i < unresolvedKeyframes.length; i++) {\n                const value = unresolvedKeyframes[i];\n                if (typeof value === \"string\") {\n                    unresolvedKeyframes[i] = parseFloat(value);\n                }\n            }\n        }\n        else {\n            /**\n             * Else, the only way to resolve this is by measuring the element.\n             */\n            this.needsMeasurement = true;\n        }\n    }\n    resolveNoneKeyframes() {\n        const { unresolvedKeyframes, name } = this;\n        const noneKeyframeIndexes = [];\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            if (isNone(unresolvedKeyframes[i])) {\n                noneKeyframeIndexes.push(i);\n            }\n        }\n        if (noneKeyframeIndexes.length) {\n            makeNoneKeyframesAnimatable(unresolvedKeyframes, noneKeyframeIndexes, name);\n        }\n    }\n    measureInitialState() {\n        const { element, unresolvedKeyframes, name } = this;\n        if (!element || !element.current)\n            return;\n        if (name === \"height\") {\n            this.suspendedScrollY = window.pageYOffset;\n        }\n        this.measuredOrigin = positionalValues[name](element.measureViewportBox(), window.getComputedStyle(element.current));\n        unresolvedKeyframes[0] = this.measuredOrigin;\n        // Set final key frame to measure after next render\n        const measureKeyframe = unresolvedKeyframes[unresolvedKeyframes.length - 1];\n        if (measureKeyframe !== undefined) {\n            element.getValue(name, measureKeyframe).jump(measureKeyframe, false);\n        }\n    }\n    measureEndState() {\n        var _a;\n        const { element, name, unresolvedKeyframes } = this;\n        if (!element || !element.current)\n            return;\n        const value = element.getValue(name);\n        value && value.jump(this.measuredOrigin, false);\n        const finalKeyframeIndex = unresolvedKeyframes.length - 1;\n        const finalKeyframe = unresolvedKeyframes[finalKeyframeIndex];\n        unresolvedKeyframes[finalKeyframeIndex] = positionalValues[name](element.measureViewportBox(), window.getComputedStyle(element.current));\n        if (finalKeyframe !== null && this.finalKeyframe === undefined) {\n            this.finalKeyframe = finalKeyframe;\n        }\n        // If we removed transform values, reapply them before the next render\n        if ((_a = this.removedTransforms) === null || _a === void 0 ? void 0 : _a.length) {\n            this.removedTransforms.forEach(([unsetTransformName, unsetTransformValue]) => {\n                element\n                    .getValue(unsetTransformName)\n                    .set(unsetTransformValue);\n            });\n        }\n        this.resolveNoneKeyframes();\n    }\n}\n\nexport { DOMKeyframesResolver };\n","import { complex } from '../../value/types/complex/index.mjs';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (value, name) => {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (name === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        (complex.test(value) || value === \"0\") && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","const isNotNull = (value) => value !== null;\nfunction getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }, finalKeyframe) {\n    const resolvedKeyframes = keyframes.filter(isNotNull);\n    const index = repeat && repeatType !== \"loop\" && repeat % 2 === 1\n        ? 0\n        : resolvedKeyframes.length - 1;\n    return !index || finalKeyframe === undefined\n        ? resolvedKeyframes[index]\n        : finalKeyframe;\n}\n\nexport { getFinalKeyframe };\n","import { time } from '../../frameloop/sync-time.mjs';\nimport { flushKeyframeResolvers } from '../../render/utils/KeyframesResolver.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { canAnimate } from './utils/can-animate.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\n\n/**\n * Maximum time allowed between an animation being created and it being\n * resolved for us to use the latter as the start time.\n *\n * This is to ensure that while we prefer to \"start\" an animation as soon\n * as it's triggered, we also want to avoid a visual jump if there's a big delay\n * between these two moments.\n */\nconst MAX_RESOLVE_DELAY = 40;\nclass BaseAnimation {\n    constructor({ autoplay = true, delay = 0, type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType = \"loop\", ...options }) {\n        // Track whether the animation has been stopped. Stopped animations won't restart.\n        this.isStopped = false;\n        this.hasAttemptedResolve = false;\n        this.createdAt = time.now();\n        this.options = {\n            autoplay,\n            delay,\n            type,\n            repeat,\n            repeatDelay,\n            repeatType,\n            ...options,\n        };\n        this.updateFinishedPromise();\n    }\n    /**\n     * This method uses the createdAt and resolvedAt to calculate the\n     * animation startTime. *Ideally*, we would use the createdAt time as t=0\n     * as the following frame would then be the first frame of the animation in\n     * progress, which would feel snappier.\n     *\n     * However, if there's a delay (main thread work) between the creation of\n     * the animation and the first commited frame, we prefer to use resolvedAt\n     * to avoid a sudden jump into the animation.\n     */\n    calcStartTime() {\n        if (!this.resolvedAt)\n            return this.createdAt;\n        return this.resolvedAt - this.createdAt > MAX_RESOLVE_DELAY\n            ? this.resolvedAt\n            : this.createdAt;\n    }\n    /**\n     * A getter for resolved data. If keyframes are not yet resolved, accessing\n     * this.resolved will synchronously flush all pending keyframe resolvers.\n     * This is a deoptimisation, but at its worst still batches read/writes.\n     */\n    get resolved() {\n        if (!this._resolved && !this.hasAttemptedResolve) {\n            flushKeyframeResolvers();\n        }\n        return this._resolved;\n    }\n    /**\n     * A method to be called when the keyframes resolver completes. This method\n     * will check if its possible to run the animation and, if not, skip it.\n     * Otherwise, it will call initPlayback on the implementing class.\n     */\n    onKeyframesResolved(keyframes, finalKeyframe) {\n        this.resolvedAt = time.now();\n        this.hasAttemptedResolve = true;\n        const { name, type, velocity, delay, onComplete, onUpdate, isGenerator, } = this.options;\n        /**\n         * If we can't animate this value with the resolved keyframes\n         * then we should complete it immediately.\n         */\n        if (!isGenerator && !canAnimate(keyframes, name, type, velocity)) {\n            // Finish immediately\n            if (instantAnimationState.current || !delay) {\n                onUpdate &&\n                    onUpdate(getFinalKeyframe(keyframes, this.options, finalKeyframe));\n                onComplete && onComplete();\n                this.resolveFinishedPromise();\n                return;\n            }\n            // Finish after a delay\n            else {\n                this.options.duration = 0;\n            }\n        }\n        const resolvedAnimation = this.initPlayback(keyframes, finalKeyframe);\n        if (resolvedAnimation === false)\n            return;\n        this._resolved = {\n            keyframes,\n            finalKeyframe,\n            ...resolvedAnimation,\n        };\n        this.onPostResolved();\n    }\n    onPostResolved() { }\n    /**\n     * Allows the returned animation to be awaited or promise-chained. Currently\n     * resolves when the animation finishes at all but in a future update could/should\n     * reject if its cancels.\n     */\n    then(resolve, reject) {\n        return this.currentFinishedPromise.then(resolve, reject);\n    }\n    flatten() {\n        this.options.type = \"keyframes\";\n        this.options.ease = \"linear\";\n    }\n    updateFinishedPromise() {\n        this.currentFinishedPromise = new Promise((resolve) => {\n            this.resolveFinishedPromise = resolve;\n        });\n    }\n}\n\nexport { BaseAnimation };\n","import { isGenerator } from 'motion-dom';\nimport { warning } from 'motion-utils';\nimport { isAnimatable } from '../../utils/is-animatable.mjs';\n\nfunction hasKeyframesChanged(keyframes) {\n    const current = keyframes[0];\n    if (keyframes.length === 1)\n        return true;\n    for (let i = 0; i < keyframes.length; i++) {\n        if (keyframes[i] !== current)\n            return true;\n    }\n}\nfunction canAnimate(keyframes, name, type, velocity) {\n    /**\n     * Check if we're able to animate between the start and end keyframes,\n     * and throw a warning if we're attempting to animate between one that's\n     * animatable and another that isn't.\n     */\n    const originKeyframe = keyframes[0];\n    if (originKeyframe === null)\n        return false;\n    /**\n     * These aren't traditionally animatable but we do support them.\n     * In future we could look into making this more generic or replacing\n     * this function with mix() === mixImmediate\n     */\n    if (name === \"display\" || name === \"visibility\")\n        return true;\n    const targetKeyframe = keyframes[keyframes.length - 1];\n    const isOriginAnimatable = isAnimatable(originKeyframe, name);\n    const isTargetAnimatable = isAnimatable(targetKeyframe, name);\n    warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${name} from \"${originKeyframe}\" to \"${targetKeyframe}\". ${originKeyframe} is not an animatable value - to enable this animation set ${originKeyframe} to a value animatable to ${targetKeyframe} via the \\`style\\` property.`);\n    // Always skip if any of these are true\n    if (!isOriginAnimatable || !isTargetAnimatable) {\n        return false;\n    }\n    return (hasKeyframesChanged(keyframes) ||\n        ((type === \"spring\" || isGenerator(type)) && velocity));\n}\n\nexport { canAnimate };\n","/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mixNumber = (from, to, progress) => {\n    return from + (to - from) * progress;\n};\n\nexport { mixNumber };\n","// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","function mixImmediate(a, b) {\n    return (p) => (p > 0 ? b : a);\n}\n\nexport { mixImmediate };\n","import { mixNumber } from './number.mjs';\nimport { warning } from 'motion-utils';\nimport { hslaToRgba } from '../hsla-to-rgba.mjs';\nimport { hex } from '../../value/types/color/hex.mjs';\nimport { rgba } from '../../value/types/color/rgba.mjs';\nimport { hsla } from '../../value/types/color/hsla.mjs';\nimport { mixImmediate } from './immediate.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    const expo = v * (to * to - fromExpo) + fromExpo;\n    return expo < 0 ? 0 : Math.sqrt(expo);\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    warning(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`);\n    if (!Boolean(type))\n        return false;\n    let model = type.parse(color);\n    if (type === hsla) {\n        // TODO Remove this cast - needed since Motion's stricter typing\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    if (!fromRGBA || !toRGBA) {\n        return mixImmediate(from, to);\n    }\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mixNumber(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","const invisibleValues = new Set([\"none\", \"hidden\"]);\n/**\n * Returns a function that, when provided a progress value between 0 and 1,\n * will return the \"none\" or \"hidden\" string only when the progress is that of\n * the origin or target.\n */\nfunction mixVisibility(origin, target) {\n    if (invisibleValues.has(origin)) {\n        return (p) => (p <= 0 ? origin : target);\n    }\n    else {\n        return (p) => (p >= 1 ? target : origin);\n    }\n}\n\nexport { invisibleValues, mixVisibility };\n","import { mixNumber as mixNumber$1 } from './number.mjs';\nimport { mixColor } from './color.mjs';\nimport { pipe } from '../pipe.mjs';\nimport { warning } from 'motion-utils';\nimport { color } from '../../value/types/color/index.mjs';\nimport { complex, analyseComplexValue } from '../../value/types/complex/index.mjs';\nimport { isCSSVariableToken } from '../../render/dom/utils/is-css-variable.mjs';\nimport { invisibleValues, mixVisibility } from './visibility.mjs';\nimport { mixImmediate } from './immediate.mjs';\n\nfunction mixNumber(a, b) {\n    return (p) => mixNumber$1(a, b, p);\n}\nfunction getMixer(a) {\n    if (typeof a === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof a === \"string\") {\n        return isCSSVariableToken(a)\n            ? mixImmediate\n            : color.test(a)\n                ? mixColor\n                : mixComplex;\n    }\n    else if (Array.isArray(a)) {\n        return mixArray;\n    }\n    else if (typeof a === \"object\") {\n        return color.test(a) ? mixColor : mixObject;\n    }\n    return mixImmediate;\n}\nfunction mixArray(a, b) {\n    const output = [...a];\n    const numValues = output.length;\n    const blendValue = a.map((v, i) => getMixer(v)(v, b[i]));\n    return (p) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](p);\n        }\n        return output;\n    };\n}\nfunction mixObject(a, b) {\n    const output = { ...a, ...b };\n    const blendValue = {};\n    for (const key in output) {\n        if (a[key] !== undefined && b[key] !== undefined) {\n            blendValue[key] = getMixer(a[key])(a[key], b[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n}\nfunction matchOrder(origin, target) {\n    var _a;\n    const orderedOrigin = [];\n    const pointers = { color: 0, var: 0, number: 0 };\n    for (let i = 0; i < target.values.length; i++) {\n        const type = target.types[i];\n        const originIndex = origin.indexes[type][pointers[type]];\n        const originValue = (_a = origin.values[originIndex]) !== null && _a !== void 0 ? _a : 0;\n        orderedOrigin[i] = originValue;\n        pointers[type]++;\n    }\n    return orderedOrigin;\n}\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyseComplexValue(origin);\n    const targetStats = analyseComplexValue(target);\n    const canInterpolate = originStats.indexes.var.length === targetStats.indexes.var.length &&\n        originStats.indexes.color.length === targetStats.indexes.color.length &&\n        originStats.indexes.number.length >= targetStats.indexes.number.length;\n    if (canInterpolate) {\n        if ((invisibleValues.has(origin) &&\n            !targetStats.values.length) ||\n            (invisibleValues.has(target) &&\n                !originStats.values.length)) {\n            return mixVisibility(origin, target);\n        }\n        return pipe(mixArray(matchOrder(originStats, targetStats), targetStats.values), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\n        return mixImmediate(origin, target);\n    }\n};\n\nexport { getMixer, mixArray, mixComplex, mixObject };\n","import { getMixer } from './complex.mjs';\nimport { mixNumber } from './number.mjs';\n\nfunction mix(from, to, p) {\n    if (typeof from === \"number\" &&\n        typeof to === \"number\" &&\n        typeof p === \"number\") {\n        return mixNumber(from, to, p);\n    }\n    const mixer = getMixer(from);\n    return mixer(from, to);\n}\n\nexport { mix };\n","import { velocityPerSecond } from '../../../utils/velocity-per-second.mjs';\n\nconst velocitySampleDuration = 5; // ms\nfunction calcGeneratorVelocity(resolveValue, t, current) {\n    const prevT = Math.max(t - velocitySampleDuration, 0);\n    return velocityPerSecond(current - resolveValue(prevT), t - prevT);\n}\n\nexport { calcGeneratorVelocity };\n","const springDefaults = {\n    // Default spring physics\n    stiffness: 100,\n    damping: 10,\n    mass: 1.0,\n    velocity: 0.0,\n    // Default duration/bounce-based options\n    duration: 800, // in ms\n    bounce: 0.3,\n    visualDuration: 0.3, // in seconds\n    // Rest thresholds\n    restSpeed: {\n        granular: 0.01,\n        default: 2,\n    },\n    restDelta: {\n        granular: 0.005,\n        default: 0.5,\n    },\n    // Limits\n    minDuration: 0.01, // in seconds\n    maxDuration: 10.0, // in seconds\n    minDamping: 0.05,\n    maxDamping: 1,\n};\n\nexport { springDefaults };\n","import { warning, secondsToMilliseconds, millisecondsToSeconds } from 'motion-utils';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { springDefaults } from './defaults.mjs';\n\nconst safeMin = 0.001;\nfunction findSpring({ duration = springDefaults.duration, bounce = springDefaults.bounce, velocity = springDefaults.velocity, mass = springDefaults.mass, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= secondsToMilliseconds(springDefaults.maxDuration), \"Spring duration must be 10 seconds or less\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(springDefaults.minDamping, springDefaults.maxDamping, dampingRatio);\n    duration = clamp(springDefaults.minDuration, springDefaults.maxDuration, millisecondsToSeconds(duration));\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = secondsToMilliseconds(duration);\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: springDefaults.stiffness,\n            damping: springDefaults.damping,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring };\n","import { calcGeneratorDuration, maxGeneratorDuration, generateLinearEasing } from 'motion-dom';\nimport { millisecondsToSeconds, secondsToMilliseconds } from 'motion-utils';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { calcGeneratorVelocity } from '../utils/velocity.mjs';\nimport { springDefaults } from './defaults.mjs';\nimport { findSpring, calcAngularFreq } from './find.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: springDefaults.velocity,\n        stiffness: springDefaults.stiffness,\n        damping: springDefaults.damping,\n        mass: springDefaults.mass,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        if (options.visualDuration) {\n            const visualDuration = options.visualDuration;\n            const root = (2 * Math.PI) / (visualDuration * 1.2);\n            const stiffness = root * root;\n            const damping = 2 *\n                clamp(0.05, 1, 1 - (options.bounce || 0)) *\n                Math.sqrt(stiffness);\n            springOptions = {\n                ...springOptions,\n                mass: springDefaults.mass,\n                stiffness,\n                damping,\n            };\n        }\n        else {\n            const derived = findSpring(options);\n            springOptions = {\n                ...springOptions,\n                ...derived,\n                mass: springDefaults.mass,\n            };\n            springOptions.isResolvedFromDuration = true;\n        }\n    }\n    return springOptions;\n}\nfunction spring(optionsOrVisualDuration = springDefaults.visualDuration, bounce = springDefaults.bounce) {\n    const options = typeof optionsOrVisualDuration !== \"object\"\n        ? {\n            visualDuration: optionsOrVisualDuration,\n            keyframes: [0, 1],\n            bounce,\n        }\n        : optionsOrVisualDuration;\n    let { restSpeed, restDelta } = options;\n    const origin = options.keyframes[0];\n    const target = options.keyframes[options.keyframes.length - 1];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    const { stiffness, damping, mass, duration, velocity, isResolvedFromDuration, } = getSpringOptions({\n        ...options,\n        velocity: -millisecondsToSeconds(options.velocity || 0),\n    });\n    const initialVelocity = velocity || 0.0;\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    const initialDelta = target - origin;\n    const undampedAngularFreq = millisecondsToSeconds(Math.sqrt(stiffness / mass));\n    /**\n     * If we're working on a granular scale, use smaller defaults for determining\n     * when the spring is finished.\n     *\n     * These defaults have been selected emprically based on what strikes a good\n     * ratio between feeling good and finishing as soon as changes are imperceptible.\n     */\n    const isGranularScale = Math.abs(initialDelta) < 5;\n    restSpeed || (restSpeed = isGranularScale\n        ? springDefaults.restSpeed.granular\n        : springDefaults.restSpeed.default);\n    restDelta || (restDelta = isGranularScale\n        ? springDefaults.restDelta.granular\n        : springDefaults.restDelta.default);\n    let resolveSpring;\n    if (dampingRatio < 1) {\n        const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n        // Underdamped spring\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            return (target -\n                envelope *\n                    (((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) /\n                        angularFreq) *\n                        Math.sin(angularFreq * t) +\n                        initialDelta * Math.cos(angularFreq * t)));\n        };\n    }\n    else if (dampingRatio === 1) {\n        // Critically damped spring\n        resolveSpring = (t) => target -\n            Math.exp(-undampedAngularFreq * t) *\n                (initialDelta +\n                    (initialVelocity + undampedAngularFreq * initialDelta) * t);\n    }\n    else {\n        // Overdamped spring\n        const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            // When performing sinh or cosh values can hit Infinity so we cap them here\n            const freqForT = Math.min(dampedAngularFreq * t, 300);\n            return (target -\n                (envelope *\n                    ((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) *\n                        Math.sinh(freqForT) +\n                        dampedAngularFreq *\n                            initialDelta *\n                            Math.cosh(freqForT))) /\n                    dampedAngularFreq);\n        };\n    }\n    const generator = {\n        calculatedDuration: isResolvedFromDuration ? duration || null : null,\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                let currentVelocity = 0.0;\n                /**\n                 * We only need to calculate velocity for under-damped springs\n                 * as over- and critically-damped springs can't overshoot, so\n                 * checking only for displacement is enough.\n                 */\n                if (dampingRatio < 1) {\n                    currentVelocity =\n                        t === 0\n                            ? secondsToMilliseconds(initialVelocity)\n                            : calcGeneratorVelocity(resolveSpring, t, current);\n                }\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? target : current;\n            return state;\n        },\n        toString: () => {\n            const calculatedDuration = Math.min(calcGeneratorDuration(generator), maxGeneratorDuration);\n            const easing = generateLinearEasing((progress) => generator.next(calculatedDuration * progress).value, calculatedDuration, 30);\n            return calculatedDuration + \"ms \" + easing;\n        },\n    };\n    return generator;\n}\n\nexport { spring };\n","import { spring } from './spring/index.mjs';\nimport { calcGeneratorVelocity } from './utils/velocity.mjs';\n\nfunction inertia({ keyframes, velocity = 0.0, power = 0.8, timeConstant = 325, bounceDamping = 10, bounceStiffness = 500, modifyTarget, min, max, restDelta = 0.5, restSpeed, }) {\n    const origin = keyframes[0];\n    const state = {\n        done: false,\n        value: origin,\n    };\n    const isOutOfBounds = (v) => (min !== undefined && v < min) || (max !== undefined && v > max);\n    const nearestBoundary = (v) => {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    };\n    let amplitude = power * velocity;\n    const ideal = origin + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - origin;\n    const calcDelta = (t) => -amplitude * Math.exp(-t / timeConstant);\n    const calcLatest = (t) => target + calcDelta(t);\n    const applyFriction = (t) => {\n        const delta = calcDelta(t);\n        const latest = calcLatest(t);\n        state.done = Math.abs(delta) <= restDelta;\n        state.value = state.done ? target : latest;\n    };\n    /**\n     * Ideally this would resolve for t in a stateless way, we could\n     * do that by always precalculating the animation but as we know\n     * this will be done anyway we can assume that spring will\n     * be discovered during that.\n     */\n    let timeReachedBoundary;\n    let spring$1;\n    const checkCatchBoundary = (t) => {\n        if (!isOutOfBounds(state.value))\n            return;\n        timeReachedBoundary = t;\n        spring$1 = spring({\n            keyframes: [state.value, nearestBoundary(state.value)],\n            velocity: calcGeneratorVelocity(calcLatest, t, state.value), // TODO: This should be passing * 1000\n            damping: bounceDamping,\n            stiffness: bounceStiffness,\n            restDelta,\n            restSpeed,\n        });\n    };\n    checkCatchBoundary(0);\n    return {\n        calculatedDuration: null,\n        next: (t) => {\n            /**\n             * We need to resolve the friction to figure out if we need a\n             * spring but we don't want to do this twice per frame. So here\n             * we flag if we updated for this frame and later if we did\n             * we can skip doing it again.\n             */\n            let hasUpdatedFrame = false;\n            if (!spring$1 && timeReachedBoundary === undefined) {\n                hasUpdatedFrame = true;\n                applyFriction(t);\n                checkCatchBoundary(t);\n            }\n            /**\n             * If we have a spring and the provided t is beyond the moment the friction\n             * animation crossed the min/max boundary, use the spring.\n             */\n            if (timeReachedBoundary !== undefined && t >= timeReachedBoundary) {\n                return spring$1.next(t - timeReachedBoundary);\n            }\n            else {\n                !hasUpdatedFrame && applyFriction(t);\n                return state;\n            }\n        },\n    };\n}\n\nexport { inertia };\n","import { cubicBezier } from './cubic-bezier.mjs';\n\nconst easeIn = /*@__PURE__*/ cubicBezier(0.42, 0, 1, 1);\nconst easeOut = /*@__PURE__*/ cubicBezier(0, 0, 0.58, 1);\nconst easeInOut = /*@__PURE__*/ cubicBezier(0.42, 0, 0.58, 1);\n\nexport { easeIn, easeInOut, easeOut };\n","import { isBezierDefinition } from 'motion-dom';\nimport { invariant, noop } from 'motion-utils';\nimport { anticipate } from '../anticipate.mjs';\nimport { backIn, backInOut, backOut } from '../back.mjs';\nimport { circIn, circInOut, circOut } from '../circ.mjs';\nimport { cubicBezier } from '../cubic-bezier.mjs';\nimport { easeIn, easeInOut, easeOut } from '../ease.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (isBezierDefinition(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (typeof definition === \"string\") {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\n        return easingLookup[definition];\n    }\n    return definition;\n};\n\nexport { easingDefinitionToFunction };\n","import { invariant, noop, progress } from 'motion-utils';\nimport { clamp } from './clamp.mjs';\nimport { mix } from './mix/index.mjs';\nimport { pipe } from './pipe.mjs';\n\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || mix;\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] || noop : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revist this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\");\n    /**\n     * If we're only provided a single input, we can just make a function\n     * that returns the output.\n     */\n    if (inputLength === 1)\n        return () => output[0];\n    if (inputLength === 2 && output[0] === output[1])\n        return () => output[1];\n    const isZeroDeltaRange = input[0] === input[1];\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        if (isZeroDeltaRange && v < input[0])\n            return output[0];\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","import { fillOffset } from './fill.mjs';\n\nfunction defaultOffset(arr) {\n    const offset = [0];\n    fillOffset(offset, arr.length - 1);\n    return offset;\n}\n\nexport { defaultOffset };\n","import { progress } from 'motion-utils';\nimport { mixNumber } from '../mix/number.mjs';\n\nfunction fillOffset(offset, remaining) {\n    const min = offset[offset.length - 1];\n    for (let i = 1; i <= remaining; i++) {\n        const offsetProgress = progress(0, remaining, i);\n        offset.push(mixNumber(min, 1, offsetProgress));\n    }\n}\n\nexport { fillOffset };\n","import { easeInOut } from '../../easing/ease.mjs';\nimport { isEasingArray } from '../../easing/utils/is-easing-array.mjs';\nimport { easingDefinitionToFunction } from '../../easing/utils/map.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { defaultOffset } from '../../utils/offsets/default.mjs';\nimport { convertOffsetToTimes } from '../../utils/offsets/time.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction keyframes({ duration = 300, keyframes: keyframeValues, times, ease = \"easeInOut\", }) {\n    /**\n     * Easing functions can be externally defined as strings. Here we convert them\n     * into actual functions.\n     */\n    const easingFunctions = isEasingArray(ease)\n        ? ease.map(easingDefinitionToFunction)\n        : easingDefinitionToFunction(ease);\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = {\n        done: false,\n        value: keyframeValues[0],\n    };\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const absoluteTimes = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    times && times.length === keyframeValues.length\n        ? times\n        : defaultOffset(keyframeValues), duration);\n    const mapTimeToKeyframe = interpolate(absoluteTimes, keyframeValues, {\n        ease: Array.isArray(easingFunctions)\n            ? easingFunctions\n            : defaultEasing(keyframeValues, easingFunctions),\n    });\n    return {\n        calculatedDuration: duration,\n        next: (t) => {\n            state.value = mapTimeToKeyframe(t);\n            state.done = t >= duration;\n            return state;\n        },\n    };\n}\n\nexport { defaultEasing, keyframes };\n","const isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { isEasingArray };\n","function convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\n\nexport { convertOffsetToTimes };\n","import { time } from '../../../frameloop/sync-time.mjs';\nimport { frame, cancelFrame, frameData } from '../../../frameloop/frame.mjs';\n\nconst frameloopDriver = (update) => {\n    const passTimestamp = ({ timestamp }) => update(timestamp);\n    return {\n        start: () => frame.update(passTimestamp, true),\n        stop: () => cancelFrame(passTimestamp),\n        /**\n         * If we're processing this frame we can use the\n         * framelocked timestamp to keep things in sync.\n         */\n        now: () => (frameData.isProcessing ? frameData.timestamp : time.now()),\n    };\n};\n\nexport { frameloopDriver };\n","import { isGenerator, calcGeneratorDuration } from 'motion-dom';\nimport { invariant, millisecondsToSeconds, secondsToMilliseconds } from 'motion-utils';\nimport { KeyframeResolver } from '../../render/utils/KeyframesResolver.mjs';\nimport { clamp } from '../../utils/clamp.mjs';\nimport { mix } from '../../utils/mix/index.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { inertia } from '../generators/inertia.mjs';\nimport { keyframes } from '../generators/keyframes.mjs';\nimport { spring } from '../generators/spring/index.mjs';\nimport { BaseAnimation } from './BaseAnimation.mjs';\nimport { frameloopDriver } from './drivers/driver-frameloop.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\n\nconst generators = {\n    decay: inertia,\n    inertia,\n    tween: keyframes,\n    keyframes: keyframes,\n    spring,\n};\nconst percentToProgress = (percent) => percent / 100;\n/**\n * Animation that runs on the main thread. Designed to be WAAPI-spec in the subset of\n * features we expose publically. Mostly the compatibility is to ensure visual identity\n * between both WAAPI and main thread animations.\n */\nclass MainThreadAnimation extends BaseAnimation {\n    constructor(options) {\n        super(options);\n        /**\n         * The time at which the animation was paused.\n         */\n        this.holdTime = null;\n        /**\n         * The time at which the animation was cancelled.\n         */\n        this.cancelTime = null;\n        /**\n         * The current time of the animation.\n         */\n        this.currentTime = 0;\n        /**\n         * Playback speed as a factor. 0 would be stopped, -1 reverse and 2 double speed.\n         */\n        this.playbackSpeed = 1;\n        /**\n         * The state of the animation to apply when the animation is resolved. This\n         * allows calls to the public API to control the animation before it is resolved,\n         * without us having to resolve it first.\n         */\n        this.pendingPlayState = \"running\";\n        /**\n         * The time at which the animation was started.\n         */\n        this.startTime = null;\n        this.state = \"idle\";\n        /**\n         * This method is bound to the instance to fix a pattern where\n         * animation.stop is returned as a reference from a useEffect.\n         */\n        this.stop = () => {\n            this.resolver.cancel();\n            this.isStopped = true;\n            if (this.state === \"idle\")\n                return;\n            this.teardown();\n            const { onStop } = this.options;\n            onStop && onStop();\n        };\n        const { name, motionValue, element, keyframes } = this.options;\n        const KeyframeResolver$1 = (element === null || element === void 0 ? void 0 : element.KeyframeResolver) || KeyframeResolver;\n        const onResolved = (resolvedKeyframes, finalKeyframe) => this.onKeyframesResolved(resolvedKeyframes, finalKeyframe);\n        this.resolver = new KeyframeResolver$1(keyframes, onResolved, name, motionValue, element);\n        this.resolver.scheduleResolve();\n    }\n    flatten() {\n        super.flatten();\n        // If we've already resolved the animation, re-initialise it\n        if (this._resolved) {\n            Object.assign(this._resolved, this.initPlayback(this._resolved.keyframes));\n        }\n    }\n    initPlayback(keyframes$1) {\n        const { type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType, velocity = 0, } = this.options;\n        const generatorFactory = isGenerator(type)\n            ? type\n            : generators[type] || keyframes;\n        /**\n         * If our generator doesn't support mixing numbers, we need to replace keyframes with\n         * [0, 100] and then make a function that maps that to the actual keyframes.\n         *\n         * 100 is chosen instead of 1 as it works nicer with spring animations.\n         */\n        let mapPercentToKeyframes;\n        let mirroredGenerator;\n        if (generatorFactory !== keyframes &&\n            typeof keyframes$1[0] !== \"number\") {\n            if (process.env.NODE_ENV !== \"production\") {\n                invariant(keyframes$1.length === 2, `Only two keyframes currently supported with spring and inertia animations. Trying to animate ${keyframes$1}`);\n            }\n            mapPercentToKeyframes = pipe(percentToProgress, mix(keyframes$1[0], keyframes$1[1]));\n            keyframes$1 = [0, 100];\n        }\n        const generator = generatorFactory({ ...this.options, keyframes: keyframes$1 });\n        /**\n         * If we have a mirror repeat type we need to create a second generator that outputs the\n         * mirrored (not reversed) animation and later ping pong between the two generators.\n         */\n        if (repeatType === \"mirror\") {\n            mirroredGenerator = generatorFactory({\n                ...this.options,\n                keyframes: [...keyframes$1].reverse(),\n                velocity: -velocity,\n            });\n        }\n        /**\n         * If duration is undefined and we have repeat options,\n         * we need to calculate a duration from the generator.\n         *\n         * We set it to the generator itself to cache the duration.\n         * Any timeline resolver will need to have already precalculated\n         * the duration by this step.\n         */\n        if (generator.calculatedDuration === null) {\n            generator.calculatedDuration = calcGeneratorDuration(generator);\n        }\n        const { calculatedDuration } = generator;\n        const resolvedDuration = calculatedDuration + repeatDelay;\n        const totalDuration = resolvedDuration * (repeat + 1) - repeatDelay;\n        return {\n            generator,\n            mirroredGenerator,\n            mapPercentToKeyframes,\n            calculatedDuration,\n            resolvedDuration,\n            totalDuration,\n        };\n    }\n    onPostResolved() {\n        const { autoplay = true } = this.options;\n        this.play();\n        if (this.pendingPlayState === \"paused\" || !autoplay) {\n            this.pause();\n        }\n        else {\n            this.state = this.pendingPlayState;\n        }\n    }\n    tick(timestamp, sample = false) {\n        const { resolved } = this;\n        // If the animations has failed to resolve, return the final keyframe.\n        if (!resolved) {\n            const { keyframes } = this.options;\n            return { done: true, value: keyframes[keyframes.length - 1] };\n        }\n        const { finalKeyframe, generator, mirroredGenerator, mapPercentToKeyframes, keyframes, calculatedDuration, totalDuration, resolvedDuration, } = resolved;\n        if (this.startTime === null)\n            return generator.next(0);\n        const { delay, repeat, repeatType, repeatDelay, onUpdate } = this.options;\n        /**\n         * requestAnimationFrame timestamps can come through as lower than\n         * the startTime as set by performance.now(). Here we prevent this,\n         * though in the future it could be possible to make setting startTime\n         * a pending operation that gets resolved here.\n         */\n        if (this.speed > 0) {\n            this.startTime = Math.min(this.startTime, timestamp);\n        }\n        else if (this.speed < 0) {\n            this.startTime = Math.min(timestamp - totalDuration / this.speed, this.startTime);\n        }\n        // Update currentTime\n        if (sample) {\n            this.currentTime = timestamp;\n        }\n        else if (this.holdTime !== null) {\n            this.currentTime = this.holdTime;\n        }\n        else {\n            // Rounding the time because floating point arithmetic is not always accurate, e.g. 3000.367 - 1000.367 =\n            // 2000.0000000000002. This is a problem when we are comparing the currentTime with the duration, for\n            // example.\n            this.currentTime =\n                Math.round(timestamp - this.startTime) * this.speed;\n        }\n        // Rebase on delay\n        const timeWithoutDelay = this.currentTime - delay * (this.speed >= 0 ? 1 : -1);\n        const isInDelayPhase = this.speed >= 0\n            ? timeWithoutDelay < 0\n            : timeWithoutDelay > totalDuration;\n        this.currentTime = Math.max(timeWithoutDelay, 0);\n        // If this animation has finished, set the current time  to the total duration.\n        if (this.state === \"finished\" && this.holdTime === null) {\n            this.currentTime = totalDuration;\n        }\n        let elapsed = this.currentTime;\n        let frameGenerator = generator;\n        if (repeat) {\n            /**\n             * Get the current progress (0-1) of the animation. If t is >\n             * than duration we'll get values like 2.5 (midway through the\n             * third iteration)\n             */\n            const progress = Math.min(this.currentTime, totalDuration) / resolvedDuration;\n            /**\n             * Get the current iteration (0 indexed). For instance the floor of\n             * 2.5 is 2.\n             */\n            let currentIteration = Math.floor(progress);\n            /**\n             * Get the current progress of the iteration by taking the remainder\n             * so 2.5 is 0.5 through iteration 2\n             */\n            let iterationProgress = progress % 1.0;\n            /**\n             * If iteration progress is 1 we count that as the end\n             * of the previous iteration.\n             */\n            if (!iterationProgress && progress >= 1) {\n                iterationProgress = 1;\n            }\n            iterationProgress === 1 && currentIteration--;\n            currentIteration = Math.min(currentIteration, repeat + 1);\n            /**\n             * Reverse progress if we're not running in \"normal\" direction\n             */\n            const isOddIteration = Boolean(currentIteration % 2);\n            if (isOddIteration) {\n                if (repeatType === \"reverse\") {\n                    iterationProgress = 1 - iterationProgress;\n                    if (repeatDelay) {\n                        iterationProgress -= repeatDelay / resolvedDuration;\n                    }\n                }\n                else if (repeatType === \"mirror\") {\n                    frameGenerator = mirroredGenerator;\n                }\n            }\n            elapsed = clamp(0, 1, iterationProgress) * resolvedDuration;\n        }\n        /**\n         * If we're in negative time, set state as the initial keyframe.\n         * This prevents delay: x, duration: 0 animations from finishing\n         * instantly.\n         */\n        const state = isInDelayPhase\n            ? { done: false, value: keyframes[0] }\n            : frameGenerator.next(elapsed);\n        if (mapPercentToKeyframes) {\n            state.value = mapPercentToKeyframes(state.value);\n        }\n        let { done } = state;\n        if (!isInDelayPhase && calculatedDuration !== null) {\n            done =\n                this.speed >= 0\n                    ? this.currentTime >= totalDuration\n                    : this.currentTime <= 0;\n        }\n        const isAnimationFinished = this.holdTime === null &&\n            (this.state === \"finished\" || (this.state === \"running\" && done));\n        if (isAnimationFinished && finalKeyframe !== undefined) {\n            state.value = getFinalKeyframe(keyframes, this.options, finalKeyframe);\n        }\n        if (onUpdate) {\n            onUpdate(state.value);\n        }\n        if (isAnimationFinished) {\n            this.finish();\n        }\n        return state;\n    }\n    get duration() {\n        const { resolved } = this;\n        return resolved ? millisecondsToSeconds(resolved.calculatedDuration) : 0;\n    }\n    get time() {\n        return millisecondsToSeconds(this.currentTime);\n    }\n    set time(newTime) {\n        newTime = secondsToMilliseconds(newTime);\n        this.currentTime = newTime;\n        if (this.holdTime !== null || this.speed === 0) {\n            this.holdTime = newTime;\n        }\n        else if (this.driver) {\n            this.startTime = this.driver.now() - newTime / this.speed;\n        }\n    }\n    get speed() {\n        return this.playbackSpeed;\n    }\n    set speed(newSpeed) {\n        const hasChanged = this.playbackSpeed !== newSpeed;\n        this.playbackSpeed = newSpeed;\n        if (hasChanged) {\n            this.time = millisecondsToSeconds(this.currentTime);\n        }\n    }\n    play() {\n        if (!this.resolver.isScheduled) {\n            this.resolver.resume();\n        }\n        if (!this._resolved) {\n            this.pendingPlayState = \"running\";\n            return;\n        }\n        if (this.isStopped)\n            return;\n        const { driver = frameloopDriver, onPlay, startTime } = this.options;\n        if (!this.driver) {\n            this.driver = driver((timestamp) => this.tick(timestamp));\n        }\n        onPlay && onPlay();\n        const now = this.driver.now();\n        if (this.holdTime !== null) {\n            this.startTime = now - this.holdTime;\n        }\n        else if (!this.startTime) {\n            this.startTime = startTime !== null && startTime !== void 0 ? startTime : this.calcStartTime();\n        }\n        else if (this.state === \"finished\") {\n            this.startTime = now;\n        }\n        if (this.state === \"finished\") {\n            this.updateFinishedPromise();\n        }\n        this.cancelTime = this.startTime;\n        this.holdTime = null;\n        /**\n         * Set playState to running only after we've used it in\n         * the previous logic.\n         */\n        this.state = \"running\";\n        this.driver.start();\n    }\n    pause() {\n        var _a;\n        if (!this._resolved) {\n            this.pendingPlayState = \"paused\";\n            return;\n        }\n        this.state = \"paused\";\n        this.holdTime = (_a = this.currentTime) !== null && _a !== void 0 ? _a : 0;\n    }\n    complete() {\n        if (this.state !== \"running\") {\n            this.play();\n        }\n        this.pendingPlayState = this.state = \"finished\";\n        this.holdTime = null;\n    }\n    finish() {\n        this.teardown();\n        this.state = \"finished\";\n        const { onComplete } = this.options;\n        onComplete && onComplete();\n    }\n    cancel() {\n        if (this.cancelTime !== null) {\n            this.tick(this.cancelTime);\n        }\n        this.teardown();\n        this.updateFinishedPromise();\n    }\n    teardown() {\n        this.state = \"idle\";\n        this.stopDriver();\n        this.resolveFinishedPromise();\n        this.updateFinishedPromise();\n        this.startTime = this.cancelTime = null;\n        this.resolver.cancel();\n    }\n    stopDriver() {\n        if (!this.driver)\n            return;\n        this.driver.stop();\n        this.driver = undefined;\n    }\n    sample(time) {\n        this.startTime = 0;\n        return this.tick(time, true);\n    }\n}\n// Legacy interface\nfunction animateValue(options) {\n    return new MainThreadAnimation(options);\n}\n\nexport { MainThreadAnimation, animateValue };\n","/**\n * A list of values that can be hardware-accelerated.\n */\nconst acceleratedValues = new Set([\n    \"opacity\",\n    \"clipPath\",\n    \"filter\",\n    \"transform\",\n    // TODO: Can be accelerated but currently disabled until https://issues.chromium.org/issues/41491098 is resolved\n    // or until we implement support for linear() easing.\n    // \"background-color\"\n]);\n\nexport { acceleratedValues };\n","import { mapEasingToNativeEasing } from 'motion-dom';\n\nfunction startWaapiAnimation(element, valueName, keyframes, { delay = 0, duration = 300, repeat = 0, repeatType = \"loop\", ease = \"easeInOut\", times, } = {}) {\n    const keyframeOptions = { [valueName]: keyframes };\n    if (times)\n        keyframeOptions.offset = times;\n    const easing = mapEasingToNativeEasing(ease, duration);\n    /**\n     * If this is an easing array, apply to keyframes, not animation as a whole\n     */\n    if (Array.isArray(easing))\n        keyframeOptions.easing = easing;\n    return element.animate(keyframeOptions, {\n        delay,\n        duration,\n        easing: !Array.isArray(easing) ? easing : \"linear\",\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n    });\n}\n\nexport { startWaapiAnimation };\n","import { memo } from 'motion-utils';\n\nconst supportsWaapi = /*@__PURE__*/ memo(() => Object.hasOwnProperty.call(Element.prototype, \"animate\"));\n\nexport { supportsWaapi };\n","import { supportsLinearEasing, attachTimeline, isGenerator, isWaapiSupportedEasing } from 'motion-dom';\nimport { millisecondsToSeconds, secondsToMilliseconds, noop } from 'motion-utils';\nimport { anticipate } from '../../easing/anticipate.mjs';\nimport { backInOut } from '../../easing/back.mjs';\nimport { circInOut } from '../../easing/circ.mjs';\nimport { DOMKeyframesResolver } from '../../render/dom/DOMKeyframesResolver.mjs';\nimport { BaseAnimation } from './BaseAnimation.mjs';\nimport { MainThreadAnimation } from './MainThreadAnimation.mjs';\nimport { acceleratedValues } from './utils/accelerated-values.mjs';\nimport { startWaapiAnimation } from './waapi/index.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\nimport { supportsWaapi } from './waapi/utils/supports-waapi.mjs';\n\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nconst sampleDelta = 10; //ms\n/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxDuration = 20000;\n/**\n * Check if an animation can run natively via WAAPI or requires pregenerated keyframes.\n * WAAPI doesn't support spring or function easings so we run these as JS animation before\n * handing off.\n */\nfunction requiresPregeneratedKeyframes(options) {\n    return (isGenerator(options.type) ||\n        options.type === \"spring\" ||\n        !isWaapiSupportedEasing(options.ease));\n}\nfunction pregenerateKeyframes(keyframes, options) {\n    /**\n     * Create a main-thread animation to pregenerate keyframes.\n     * We sample this at regular intervals to generate keyframes that we then\n     * linearly interpolate between.\n     */\n    const sampleAnimation = new MainThreadAnimation({\n        ...options,\n        keyframes,\n        repeat: 0,\n        delay: 0,\n        isGenerator: true,\n    });\n    let state = { done: false, value: keyframes[0] };\n    const pregeneratedKeyframes = [];\n    /**\n     * Bail after 20 seconds of pre-generated keyframes as it's likely\n     * we're heading for an infinite loop.\n     */\n    let t = 0;\n    while (!state.done && t < maxDuration) {\n        state = sampleAnimation.sample(t);\n        pregeneratedKeyframes.push(state.value);\n        t += sampleDelta;\n    }\n    return {\n        times: undefined,\n        keyframes: pregeneratedKeyframes,\n        duration: t - sampleDelta,\n        ease: \"linear\",\n    };\n}\nconst unsupportedEasingFunctions = {\n    anticipate,\n    backInOut,\n    circInOut,\n};\nfunction isUnsupportedEase(key) {\n    return key in unsupportedEasingFunctions;\n}\nclass AcceleratedAnimation extends BaseAnimation {\n    constructor(options) {\n        super(options);\n        const { name, motionValue, element, keyframes } = this.options;\n        this.resolver = new DOMKeyframesResolver(keyframes, (resolvedKeyframes, finalKeyframe) => this.onKeyframesResolved(resolvedKeyframes, finalKeyframe), name, motionValue, element);\n        this.resolver.scheduleResolve();\n    }\n    initPlayback(keyframes, finalKeyframe) {\n        let { duration = 300, times, ease, type, motionValue, name, startTime, } = this.options;\n        /**\n         * If element has since been unmounted, return false to indicate\n         * the animation failed to initialised.\n         */\n        if (!motionValue.owner || !motionValue.owner.current) {\n            return false;\n        }\n        /**\n         * If the user has provided an easing function name that isn't supported\n         * by WAAPI (like \"anticipate\"), we need to provide the corressponding\n         * function. This will later get converted to a linear() easing function.\n         */\n        if (typeof ease === \"string\" &&\n            supportsLinearEasing() &&\n            isUnsupportedEase(ease)) {\n            ease = unsupportedEasingFunctions[ease];\n        }\n        /**\n         * If this animation needs pre-generated keyframes then generate.\n         */\n        if (requiresPregeneratedKeyframes(this.options)) {\n            const { onComplete, onUpdate, motionValue, element, ...options } = this.options;\n            const pregeneratedAnimation = pregenerateKeyframes(keyframes, options);\n            keyframes = pregeneratedAnimation.keyframes;\n            // If this is a very short animation, ensure we have\n            // at least two keyframes to animate between as older browsers\n            // can't animate between a single keyframe.\n            if (keyframes.length === 1) {\n                keyframes[1] = keyframes[0];\n            }\n            duration = pregeneratedAnimation.duration;\n            times = pregeneratedAnimation.times;\n            ease = pregeneratedAnimation.ease;\n            type = \"keyframes\";\n        }\n        const animation = startWaapiAnimation(motionValue.owner.current, name, keyframes, { ...this.options, duration, times, ease });\n        // Override the browser calculated startTime with one synchronised to other JS\n        // and WAAPI animations starting this event loop.\n        animation.startTime = startTime !== null && startTime !== void 0 ? startTime : this.calcStartTime();\n        if (this.pendingTimeline) {\n            attachTimeline(animation, this.pendingTimeline);\n            this.pendingTimeline = undefined;\n        }\n        else {\n            /**\n             * Prefer the `onfinish` prop as it's more widely supported than\n             * the `finished` promise.\n             *\n             * Here, we synchronously set the provided MotionValue to the end\n             * keyframe. If we didn't, when the WAAPI animation is finished it would\n             * be removed from the element which would then revert to its old styles.\n             */\n            animation.onfinish = () => {\n                const { onComplete } = this.options;\n                motionValue.set(getFinalKeyframe(keyframes, this.options, finalKeyframe));\n                onComplete && onComplete();\n                this.cancel();\n                this.resolveFinishedPromise();\n            };\n        }\n        return {\n            animation,\n            duration,\n            times,\n            type,\n            ease,\n            keyframes: keyframes,\n        };\n    }\n    get duration() {\n        const { resolved } = this;\n        if (!resolved)\n            return 0;\n        const { duration } = resolved;\n        return millisecondsToSeconds(duration);\n    }\n    get time() {\n        const { resolved } = this;\n        if (!resolved)\n            return 0;\n        const { animation } = resolved;\n        return millisecondsToSeconds(animation.currentTime || 0);\n    }\n    set time(newTime) {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.currentTime = secondsToMilliseconds(newTime);\n    }\n    get speed() {\n        const { resolved } = this;\n        if (!resolved)\n            return 1;\n        const { animation } = resolved;\n        return animation.playbackRate;\n    }\n    set speed(newSpeed) {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.playbackRate = newSpeed;\n    }\n    get state() {\n        const { resolved } = this;\n        if (!resolved)\n            return \"idle\";\n        const { animation } = resolved;\n        return animation.playState;\n    }\n    get startTime() {\n        const { resolved } = this;\n        if (!resolved)\n            return null;\n        const { animation } = resolved;\n        // Coerce to number as TypeScript incorrectly types this\n        // as CSSNumberish\n        return animation.startTime;\n    }\n    /**\n     * Replace the default DocumentTimeline with another AnimationTimeline.\n     * Currently used for scroll animations.\n     */\n    attachTimeline(timeline) {\n        if (!this._resolved) {\n            this.pendingTimeline = timeline;\n        }\n        else {\n            const { resolved } = this;\n            if (!resolved)\n                return noop;\n            const { animation } = resolved;\n            attachTimeline(animation, timeline);\n        }\n        return noop;\n    }\n    play() {\n        if (this.isStopped)\n            return;\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        if (animation.playState === \"finished\") {\n            this.updateFinishedPromise();\n        }\n        animation.play();\n    }\n    pause() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.pause();\n    }\n    stop() {\n        this.resolver.cancel();\n        this.isStopped = true;\n        if (this.state === \"idle\")\n            return;\n        this.resolveFinishedPromise();\n        this.updateFinishedPromise();\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation, keyframes, duration, type, ease, times } = resolved;\n        if (animation.playState === \"idle\" ||\n            animation.playState === \"finished\") {\n            return;\n        }\n        /**\n         * WAAPI doesn't natively have any interruption capabilities.\n         *\n         * Rather than read commited styles back out of the DOM, we can\n         * create a renderless JS animation and sample it twice to calculate\n         * its current value, \"previous\" value, and therefore allow\n         * Motion to calculate velocity for any subsequent animation.\n         */\n        if (this.time) {\n            const { motionValue, onUpdate, onComplete, element, ...options } = this.options;\n            const sampleAnimation = new MainThreadAnimation({\n                ...options,\n                keyframes,\n                duration,\n                type,\n                ease,\n                times,\n                isGenerator: true,\n            });\n            const sampleTime = secondsToMilliseconds(this.time);\n            motionValue.setWithVelocity(sampleAnimation.sample(sampleTime - sampleDelta).value, sampleAnimation.sample(sampleTime).value, sampleDelta);\n        }\n        const { onStop } = this.options;\n        onStop && onStop();\n        this.cancel();\n    }\n    complete() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        resolved.animation.finish();\n    }\n    cancel() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        resolved.animation.cancel();\n    }\n    static supports(options) {\n        const { motionValue, name, repeatDelay, repeatType, damping, type } = options;\n        if (!motionValue ||\n            !motionValue.owner ||\n            !(motionValue.owner.current instanceof HTMLElement)) {\n            return false;\n        }\n        const { onUpdate, transformTemplate } = motionValue.owner.getProps();\n        return (supportsWaapi() &&\n            name &&\n            acceleratedValues.has(name) &&\n            /**\n             * If we're outputting values to onUpdate then we can't use WAAPI as there's\n             * no way to read the value from WAAPI every frame.\n             */\n            !onUpdate &&\n            !transformTemplate &&\n            !repeatDelay &&\n            repeatType !== \"mirror\" &&\n            damping !== 0 &&\n            type !== \"inertia\");\n    }\n}\n\nexport { AcceleratedAnimation };\n","import { transformProps } from '../../render/html/utils/keys-transform.mjs';\n\nconst underDampedSpring = {\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n};\nconst criticallyDampedSpring = (target) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8,\n};\n/**\n * Default easing curve is a slightly shallower version of\n * the default browser easing curve.\n */\nconst ease = {\n    type: \"keyframes\",\n    ease: [0.25, 0.1, 0.35, 1],\n    duration: 0.3,\n};\nconst getDefaultTransition = (valueKey, { keyframes }) => {\n    if (keyframes.length > 2) {\n        return keyframesTransition;\n    }\n    else if (transformProps.has(valueKey)) {\n        return valueKey.startsWith(\"scale\")\n            ? criticallyDampedSpring(keyframes[1])\n            : underDampedSpring;\n    }\n    return ease;\n};\n\nexport { getDefaultTransition };\n","import { getValueTransition, GroupPlaybackControls } from 'motion-dom';\nimport { secondsToMilliseconds } from 'motion-utils';\nimport { frame } from '../../frameloop/frame.mjs';\nimport { MotionGlobalConfig } from '../../utils/GlobalConfig.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { AcceleratedAnimation } from '../animators/AcceleratedAnimation.mjs';\nimport { MainThreadAnimation } from '../animators/MainThreadAnimation.mjs';\nimport { getFinalKeyframe } from '../animators/waapi/utils/get-final-keyframe.mjs';\nimport { getDefaultTransition } from '../utils/default-transitions.mjs';\nimport { isTransitionDefined } from '../utils/is-transition-defined.mjs';\n\nconst animateMotionValue = (name, value, target, transition = {}, element, isHandoff) => (onComplete) => {\n    const valueTransition = getValueTransition(transition, name) || {};\n    /**\n     * Most transition values are currently completely overwritten by value-specific\n     * transitions. In the future it'd be nicer to blend these transitions. But for now\n     * delay actually does inherit from the root transition if not value-specific.\n     */\n    const delay = valueTransition.delay || transition.delay || 0;\n    /**\n     * Elapsed isn't a public transition option but can be passed through from\n     * optimized appear effects in milliseconds.\n     */\n    let { elapsed = 0 } = transition;\n    elapsed = elapsed - secondsToMilliseconds(delay);\n    let options = {\n        keyframes: Array.isArray(target) ? target : [null, target],\n        ease: \"easeOut\",\n        velocity: value.getVelocity(),\n        ...valueTransition,\n        delay: -elapsed,\n        onUpdate: (v) => {\n            value.set(v);\n            valueTransition.onUpdate && valueTransition.onUpdate(v);\n        },\n        onComplete: () => {\n            onComplete();\n            valueTransition.onComplete && valueTransition.onComplete();\n        },\n        name,\n        motionValue: value,\n        element: isHandoff ? undefined : element,\n    };\n    /**\n     * If there's no transition defined for this value, we can generate\n     * unqiue transition settings for this value.\n     */\n    if (!isTransitionDefined(valueTransition)) {\n        options = {\n            ...options,\n            ...getDefaultTransition(name, options),\n        };\n    }\n    /**\n     * Both WAAPI and our internal animation functions use durations\n     * as defined by milliseconds, while our external API defines them\n     * as seconds.\n     */\n    if (options.duration) {\n        options.duration = secondsToMilliseconds(options.duration);\n    }\n    if (options.repeatDelay) {\n        options.repeatDelay = secondsToMilliseconds(options.repeatDelay);\n    }\n    if (options.from !== undefined) {\n        options.keyframes[0] = options.from;\n    }\n    let shouldSkip = false;\n    if (options.type === false ||\n        (options.duration === 0 && !options.repeatDelay)) {\n        options.duration = 0;\n        if (options.delay === 0) {\n            shouldSkip = true;\n        }\n    }\n    if (instantAnimationState.current ||\n        MotionGlobalConfig.skipAnimations) {\n        shouldSkip = true;\n        options.duration = 0;\n        options.delay = 0;\n    }\n    /**\n     * If we can or must skip creating the animation, and apply only\n     * the final keyframe, do so. We also check once keyframes are resolved but\n     * this early check prevents the need to create an animation at all.\n     */\n    if (shouldSkip && !isHandoff && value.get() !== undefined) {\n        const finalKeyframe = getFinalKeyframe(options.keyframes, valueTransition);\n        if (finalKeyframe !== undefined) {\n            frame.update(() => {\n                options.onUpdate(finalKeyframe);\n                options.onComplete();\n            });\n            // We still want to return some animation controls here rather\n            // than returning undefined\n            return new GroupPlaybackControls([]);\n        }\n    }\n    /**\n     * Animate via WAAPI if possible. If this is a handoff animation, the optimised animation will be running via\n     * WAAPI. Therefore, this animation must be JS to ensure it runs \"under\" the\n     * optimised animation.\n     */\n    if (!isHandoff && AcceleratedAnimation.supports(options)) {\n        return new AcceleratedAnimation(options);\n    }\n    else {\n        return new MainThreadAnimation(options);\n    }\n};\n\nexport { animateMotionValue };\n","/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, elapsed, ...transition }) {\n    return !!Object.keys(transition).length;\n}\n\nexport { isTransitionDefined };\n","import { getValueTransition } from 'motion-dom';\nimport { positionalKeys } from '../../render/html/utils/keys-position.mjs';\nimport { setTarget } from '../../render/utils/setters.mjs';\nimport { addValueToWillChange } from '../../value/use-will-change/add-will-change.mjs';\nimport { getOptimisedAppearId } from '../optimized-appear/get-appear-id.mjs';\nimport { animateMotionValue } from './motion-value.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\nfunction animateTarget(visualElement, targetAndTransition, { delay = 0, transitionOverride, type } = {}) {\n    var _a;\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = targetAndTransition;\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type &&\n        visualElement.animationState &&\n        visualElement.animationState.getState()[type];\n    for (const key in target) {\n        const value = visualElement.getValue(key, (_a = visualElement.latestValues[key]) !== null && _a !== void 0 ? _a : null);\n        const valueTarget = target[key];\n        if (valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        const valueTransition = {\n            delay,\n            ...getValueTransition(transition || {}, key),\n        };\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        let isHandoff = false;\n        if (window.MotionHandoffAnimation) {\n            const appearId = getOptimisedAppearId(visualElement);\n            if (appearId) {\n                const startTime = window.MotionHandoffAnimation(appearId, key, frame);\n                if (startTime !== null) {\n                    valueTransition.startTime = startTime;\n                    isHandoff = true;\n                }\n            }\n        }\n        addValueToWillChange(visualElement, key);\n        value.start(animateMotionValue(key, value, valueTarget, visualElement.shouldReduceMotion && positionalKeys.has(key)\n            ? { type: false }\n            : valueTransition, visualElement, isHandoff));\n        const animation = value.animation;\n        if (animation) {\n            animations.push(animation);\n        }\n    }\n    if (transitionEnd) {\n        Promise.all(animations).then(() => {\n            frame.update(() => {\n                transitionEnd && setTarget(visualElement, transitionEnd);\n            });\n        });\n    }\n    return animations;\n}\n\nexport { animateTarget };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\n\nfunction animateVariant(visualElement, variant, options = {}) {\n    var _a;\n    const resolved = resolveVariant(visualElement, variant, options.type === \"exit\"\n        ? (_a = visualElement.presenceContext) === null || _a === void 0 ? void 0 : _a.custom\n        : undefined);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => Promise.all(animateTarget(visualElement, resolved, options))\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = visualElement.variantChildren && visualElement.variantChildren.size\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(() => last());\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\nfunction animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    const generateStaggerDuration = staggerDirection === 1\n        ? (i = 0) => i * staggerChildren\n        : (i = 0) => maxStaggerDuration - i * staggerChildren;\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach((child, i) => {\n        child.notify(\"AnimationStart\", variant);\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delayChildren + generateStaggerDuration(i),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    });\n    return Promise.all(animations);\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n\nexport { animateVariant, sortByTreeOrder };\n","import { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nconst numVariantProps = variantProps.length;\nfunction getVariantContext(visualElement) {\n    if (!visualElement)\n        return undefined;\n    if (!visualElement.isControllingVariants) {\n        const context = visualElement.parent\n            ? getVariantContext(visualElement.parent) || {}\n            : {};\n        if (visualElement.props.initial !== undefined) {\n            context.initial = visualElement.props.initial;\n        }\n        return context;\n    }\n    const context = {};\n    for (let i = 0; i < numVariantProps; i++) {\n        const name = variantProps[i];\n        const prop = visualElement.props[name];\n        if (isVariantLabel(prop) || prop === false) {\n            context[name] = prop;\n        }\n    }\n    return context;\n}\n\nexport { getVariantContext };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { variantPriorityOrder } from './variant-props.mjs';\nimport { animateVisualElement } from '../../animation/interfaces/visual-element.mjs';\nimport { getVariantContext } from './get-variant-context.mjs';\n\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    let state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (type) => (acc, definition) => {\n        var _a;\n        const resolved = resolveVariant(visualElement, definition, type === \"exit\"\n            ? (_a = visualElement.presenceContext) === null || _a === void 0 ? void 0 : _a.custom\n            : undefined);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(changedActiveType) {\n        const { props } = visualElement;\n        const context = getVariantContext(visualElement.parent) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = props[type] !== undefined\n                ? props[type]\n                : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] &&\n                prop !== props[type] &&\n                propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            let handledRemovedValues = false;\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues(type), {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                if (removedKeys.has(key)) {\n                    handledRemovedValues = true;\n                    removedKeys.delete(key);\n                }\n                typeState.needsAnimating[key] = true;\n                const motionValue = visualElement.getValue(key);\n                if (motionValue)\n                    motionValue.liveStyle = false;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                let valueHasChanged = false;\n                if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                    valueHasChanged = !shallowCompare(next, prev);\n                }\n                else {\n                    valueHasChanged = next !== prev;\n                }\n                if (valueHasChanged) {\n                    if (next !== undefined && next !== null) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to skip this animation\n             * unless the inherited variants haven't changed on this render.\n             */\n            const willAnimateViaParent = isInherited && variantDidChange;\n            const needsAnimating = !willAnimateViaParent || handledRemovedValues;\n            if (shouldAnimateType && needsAnimating) {\n                animations.push(...definitionList.map((animation) => ({\n                    animation: animation,\n                    options: { type },\n                })));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                const motionValue = visualElement.getValue(key);\n                if (motionValue)\n                    motionValue.liveStyle = true;\n                // @ts-expect-error - @mattgperry to figure if we should do something here\n                fallbackAnimation[key] = fallbackTarget !== null && fallbackTarget !== void 0 ? fallbackTarget : null;\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            (props.initial === false || props.initial === props.animate) &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive) {\n        var _a;\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => { var _a; return (_a = child.animationState) === null || _a === void 0 ? void 0 : _a.setActive(type, isActive); });\n        state[type].isActive = isActive;\n        const animations = animateChanges(type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n        reset: () => {\n            state = createState();\n            isInitialRender = true;\n        },\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        animate: createTypeState(true),\n        whileInView: createTypeState(),\n        whileHover: createTypeState(),\n        whileTap: createTypeState(),\n        whileDrag: createTypeState(),\n        whileFocus: createTypeState(),\n        exit: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\nimport { animateVariant } from './visual-element-variant.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = Promise.all(animateTarget(visualElement, resolvedDefinition, options));\n    }\n    return animation.then(() => {\n        visualElement.notify(\"AnimationComplete\", definition);\n    });\n}\n\nexport { animateVisualElement };\n","class Feature {\n    constructor(node) {\n        this.isMounted = false;\n        this.node = node;\n    }\n    update() { }\n}\n\nexport { Feature };\n","import { Feature } from '../Feature.mjs';\n\nlet id = 0;\nclass ExitAnimationFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.id = id++;\n    }\n    update() {\n        if (!this.node.presenceContext)\n            return;\n        const { isPresent, onExitComplete } = this.node.presenceContext;\n        const { isPresent: prevIsPresent } = this.node.prevPresenceContext || {};\n        if (!this.node.animationState || isPresent === prevIsPresent) {\n            return;\n        }\n        const exitAnimation = this.node.animationState.setActive(\"exit\", !isPresent);\n        if (onExitComplete && !isPresent) {\n            exitAnimation.then(() => onExitComplete(this.id));\n        }\n    }\n    mount() {\n        const { register } = this.node.presenceContext || {};\n        if (register) {\n            this.unmount = register(this.id);\n        }\n    }\n    unmount() { }\n}\n\nexport { ExitAnimationFeature };\n","import { AnimationFeature } from './animation/index.mjs';\nimport { ExitAnimationFeature } from './animation/exit.mjs';\n\nconst animations = {\n    animation: {\n        Feature: AnimationFeature,\n    },\n    exit: {\n        Feature: ExitAnimationFeature,\n    },\n};\n\nexport { animations };\n","import { isAnimationControls } from '../../../animation/utils/is-animation-controls.mjs';\nimport { createAnimationState } from '../../../render/utils/animation-state.mjs';\nimport { Feature } from '../Feature.mjs';\n\nclass AnimationFeature extends Feature {\n    /**\n     * We dynamically generate the AnimationState manager as it contains a reference\n     * to the underlying animation library. We only want to load that if we load this,\n     * so people can optionally code split it out using the `m` component.\n     */\n    constructor(node) {\n        super(node);\n        node.animationState || (node.animationState = createAnimationState(node));\n    }\n    updateAnimationControlsSubscription() {\n        const { animate } = this.node.getProps();\n        if (isAnimationControls(animate)) {\n            this.unmountControls = animate.subscribe(this.node);\n        }\n    }\n    /**\n     * Subscribe any provided AnimationControls to the component's VisualElement\n     */\n    mount() {\n        this.updateAnimationControlsSubscription();\n    }\n    update() {\n        const { animate } = this.node.getProps();\n        const { animate: prevAnimate } = this.node.prevProps || {};\n        if (animate !== prevAnimate) {\n            this.updateAnimationControlsSubscription();\n        }\n    }\n    unmount() {\n        var _a;\n        this.node.animationState.reset();\n        (_a = this.unmountControls) === null || _a === void 0 ? void 0 : _a.call(this);\n    }\n}\n\nexport { AnimationFeature };\n","function addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n\nexport { addDomEvent };\n","import { isPrimaryPointer } from 'motion-dom';\n\nfunction extractEventInfo(event) {\n    return {\n        point: {\n            x: event.pageX,\n            y: event.pageY,\n        },\n    };\n}\nconst addPointerInfo = (handler) => {\n    return (event) => isPrimaryPointer(event) && handler(event, extractEventInfo(event));\n};\n\nexport { addPointerInfo, extractEventInfo };\n","import { addDomEvent } from './add-dom-event.mjs';\nimport { addPointerInfo } from './event-info.mjs';\n\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, eventName, addPointerInfo(handler), options);\n}\n\nexport { addPointerEvent };\n","const distance = (a, b) => Math.abs(a - b);\nfunction distance2D(a, b) {\n    // Multi-dimensional\n    const xDelta = distance(a.x, b.x);\n    const yDelta = distance(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n}\n\nexport { distance, distance2D };\n","import { isPrimaryPointer } from 'motion-dom';\nimport { secondsToMilliseconds, millisecondsToSeconds } from 'motion-utils';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { distance2D } from '../../utils/distance.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { frame, cancelFrame, frameData } from '../../frameloop/frame.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint, contextWindow, dragSnapToOrigin = false, } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        /**\n         * @internal\n         */\n        this.contextWindow = window;\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursoe.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= 3;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = frameData;\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Throttle mouse move event to once per frame\n            frame.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            this.end();\n            const { onEnd, onSessionEnd, resumeAnimation } = this.handlers;\n            if (this.dragSnapToOrigin)\n                resumeAnimation && resumeAnimation();\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const panInfo = getPanInfo(event.type === \"pointercancel\"\n                ? this.lastMoveEventInfo\n                : transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (!isPrimaryPointer(event))\n            return;\n        this.dragSnapToOrigin = dragSnapToOrigin;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        this.contextWindow = contextWindow || window;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = frameData;\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = pipe(addPointerEvent(this.contextWindow, \"pointermove\", this.handlePointerMove), addPointerEvent(this.contextWindow, \"pointerup\", this.handlePointerUp), addPointerEvent(this.contextWindow, \"pointercancel\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelFrame(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = millisecondsToSeconds(lastPoint.timestamp - timestampedPoint.timestamp);\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n","import { mixNumber } from '../../utils/mix/number.mjs';\n\nconst SCALE_PRECISION = 0.0001;\nconst SCALE_MIN = 1 - SCALE_PRECISION;\nconst SCALE_MAX = 1 + SCALE_PRECISION;\nconst TRANSLATE_PRECISION = 0.01;\nconst TRANSLATE_MIN = 0 - TRANSLATE_PRECISION;\nconst TRANSLATE_MAX = 0 + TRANSLATE_PRECISION;\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target, maxDistance) {\n    return Math.abs(value - target) <= maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mixNumber(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    delta.translate =\n        mixNumber(target.min, target.max, delta.origin) - delta.originPoint;\n    if ((delta.scale >= SCALE_MIN && delta.scale <= SCALE_MAX) ||\n        isNaN(delta.scale)) {\n        delta.scale = 1.0;\n    }\n    if ((delta.translate >= TRANSLATE_MIN &&\n        delta.translate <= TRANSLATE_MAX) ||\n        isNaN(delta.translate)) {\n        delta.translate = 0.0;\n    }\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin ? origin.originX : undefined);\n    calcAxisDelta(delta.y, source.y, target.y, origin ? origin.originY : undefined);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n","import { progress } from 'motion-utils';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { mixNumber } from '../../../utils/mix/number.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic\n            ? mixNumber(min, point, elastic.min)\n            : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic\n            ? mixNumber(max, point, elastic.max)\n            : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : dragElastic[label] || 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY ||\n        values.skewX ||\n        values.skewY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { has2DTranslate, hasScale, hasTransform };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\nconst TREE_SCALE_SNAP_MIN = 0.999999999999;\nconst TREE_SCALE_SNAP_MAX = 1.0000000000001;\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        /**\n         * TODO: Prefer to remove this, but currently we have motion components with\n         * display: contents in Framer.\n         */\n        const { visualElement } = node.options;\n        if (visualElement &&\n            visualElement.props.style &&\n            visualElement.props.style.display === \"contents\") {\n            continue;\n        }\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */\n    if (treeScale.x < TREE_SCALE_SNAP_MAX &&\n        treeScale.x > TREE_SCALE_SNAP_MIN) {\n        treeScale.x = 1.0;\n    }\n    if (treeScale.y < TREE_SCALE_SNAP_MAX &&\n        treeScale.y > TREE_SCALE_SNAP_MIN) {\n        treeScale.y = 1.0;\n    }\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, axisTranslate, axisScale, boxScale, axisOrigin = 0.5) {\n    const originPoint = mixNumber(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, axisTranslate, axisScale, originPoint, boxScale);\n}\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform.x, transform.scaleX, transform.scale, transform.originX);\n    transformAxis(box.y, transform.y, transform.scaleY, transform.scale, transform.originY);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","// Fixes https://github.com/motiondivision/motion/issues/2270\nconst getContextWindow = ({ current }) => {\n    return current ? current.ownerDocument.defaultView : null;\n};\n\nexport { getContextWindow };\n","import { invariant } from 'motion-utils';\nimport { setDragLock } from 'motion-dom';\nimport { PanSession } from '../pan/PanSession.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, rebaseAxisConstraints, calcViewportConstraints, calcOrigin, defaultElastic } from './utils/constraints.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { animateMotionValue } from '../../animation/interfaces/motion-value.mjs';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\nimport { addValueToWillChange } from '../../value/use-will-change/add-will-change.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst elementDragControls = new WeakMap();\n/**\n *\n */\n// let latestPointerEvent: PointerEvent\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        this.openDragLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        const { presenceContext } = this.visualElement;\n        if (presenceContext && presenceContext.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            const { dragSnapToOrigin } = this.getProps();\n            // Stop or pause any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            dragSnapToOrigin ? this.pauseAnimation() : this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event).point);\n            }\n        };\n        const onStart = (event, info) => {\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openDragLock)\n                    this.openDragLock();\n                this.openDragLock = setDragLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openDragLock)\n                    return;\n            }\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const { projection } = this.visualElement;\n                    if (projection && projection.layout) {\n                        const measuredAxis = projection.layout.layoutBox[axis];\n                        if (measuredAxis) {\n                            const length = calcLength(measuredAxis);\n                            current = length * (parseFloat(current) / 100);\n                        }\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            if (onDragStart) {\n                frame.postRender(() => onDragStart(event, info));\n            }\n            addValueToWillChange(this.visualElement, \"transform\");\n            const { animationState } = this.visualElement;\n            animationState && animationState.setActive(\"whileDrag\", true);\n        };\n        const onMove = (event, info) => {\n            // latestPointerEvent = event\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openDragLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock && onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.render();\n            /**\n             * This must fire after the render call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag && onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => this.stop(event, info);\n        const resumeAnimation = () => eachAxis((axis) => {\n            var _a;\n            return this.getAnimationState(axis) === \"paused\" &&\n                ((_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.play());\n        });\n        const { dragSnapToOrigin } = this.getProps();\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n            resumeAnimation,\n        }, {\n            transformPagePoint: this.visualElement.getTransformPagePoint(),\n            dragSnapToOrigin,\n            contextWindow: getContextWindow(this.visualElement),\n        });\n    }\n    stop(event, info) {\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging)\n            return;\n        const { velocity } = info;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        if (onDragEnd) {\n            frame.postRender(() => onDragEnd(event, info));\n        }\n    }\n    cancel() {\n        this.isDragging = false;\n        const { projection, animationState } = this.visualElement;\n        if (projection) {\n            projection.isAnimationBlocked = false;\n        }\n        this.panSession && this.panSession.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openDragLock) {\n            this.openDragLock();\n            this.openDragLock = null;\n        }\n        animationState && animationState.setActive(\"whileDrag\", false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        var _a;\n        const { dragConstraints, dragElastic } = this.getProps();\n        const layout = this.visualElement.projection &&\n            !this.visualElement.projection.layout\n            ? this.visualElement.projection.measure(false)\n            : (_a = this.visualElement.projection) === null || _a === void 0 ? void 0 : _a.layout;\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.constraints !== false &&\n                    this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (constraints && constraints[axis]) || {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        addValueToWillChange(this.visualElement, axis);\n        return axisValue.start(animateMotionValue(axis, axisValue, 0, transition, this.visualElement, false));\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    pauseAnimation() {\n        eachAxis((axis) => { var _a; return (_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.pause(); });\n    }\n    getAnimationState(axis) {\n        var _a;\n        return (_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.state;\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        const dragKey = `_drag${axis.toUpperCase()}`;\n        const props = this.visualElement.getProps();\n        const externalMotionValue = props[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, (props.initial\n                ? props.initial[axis]\n                : undefined) || 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.layoutBox[axis];\n                axisValue.set(point[axis] - mixNumber(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        if (!this.visualElement.current)\n            return;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue && this.constraints !== false) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.current.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        projection.root && projection.root.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mixNumber(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        if (!this.visualElement.current)\n            return;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.current;\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints) && dragConstraints.current) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            projection.root && projection.root.updateScroll();\n            projection.updateLayout();\n        }\n        frame.read(measureDragConstraints);\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.render();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener && stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","import { isDragging } from './is-active.mjs';\n\nfunction setDragLock(axis) {\n    if (axis === \"x\" || axis === \"y\") {\n        if (isDragging[axis]) {\n            return null;\n        }\n        else {\n            isDragging[axis] = true;\n            return () => {\n                isDragging[axis] = false;\n            };\n        }\n    }\n    else {\n        if (isDragging.x || isDragging.y) {\n            return null;\n        }\n        else {\n            isDragging.x = isDragging.y = true;\n            return () => {\n                isDragging.x = isDragging.y = false;\n            };\n        }\n    }\n}\n\nexport { setDragLock };\n","import { PanSession } from './PanSession.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from 'motion-utils';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst asyncHandler = (handler) => (event, info) => {\n    if (handler) {\n        frame.postRender(() => handler(event, info));\n    }\n};\nclass PanGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removePointerDownListener = noop;\n    }\n    onPointerDown(pointerDownEvent) {\n        this.session = new PanSession(pointerDownEvent, this.createPanHandlers(), {\n            transformPagePoint: this.node.getTransformPagePoint(),\n            contextWindow: getContextWindow(this.node),\n        });\n    }\n    createPanHandlers() {\n        const { onPanSessionStart, onPanStart, onPan, onPanEnd } = this.node.getProps();\n        return {\n            onSessionStart: asyncHandler(onPanSessionStart),\n            onStart: asyncHandler(onPanStart),\n            onMove: onPan,\n            onEnd: (event, info) => {\n                delete this.session;\n                if (onPanEnd) {\n                    frame.postRender(() => onPanEnd(event, info));\n                }\n            },\n        };\n    }\n    mount() {\n        this.removePointerDownListener = addPointerEvent(this.node.current, \"pointerdown\", (event) => this.onPointerDown(event));\n    }\n    update() {\n        this.session && this.session.updateHandlers(this.createPanHandlers());\n    }\n    unmount() {\n        this.removePointerDownListener();\n        this.session && this.session.end();\n    }\n}\n\nexport { PanGesture };\n","/**\n * This should only ever be modified on the client otherwise it'll\n * persist through server requests. If we need instanced states we\n * could lazy-init via root.\n */\nconst globalProjectionState = {\n    /**\n     * Global flag as to whether the tree has animated since the last time\n     * we resized the window\n     */\n    hasAnimatedSinceResize: true,\n    /**\n     * We set this to true once, on the first update. Any nodes added to the tree beyond that\n     * update will be given a `data-projection-id` attribute.\n     */\n    hasEverUpdated: false,\n};\n\nexport { globalProjectionState };\n","import { px } from '../../value/types/numbers/units.mjs';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\n\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mixNumber(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        return template(shadow);\n    },\n};\n\nexport { correctBoxShadow };\n","\"use client\";\nimport { jsx } from 'react/jsx-runtime';\nimport { useContext, Component } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\nimport { microtask } from '../../../frameloop/microtask.mjs';\nimport { frame } from '../../../frameloop/frame.mjs';\n\nclass MeasureLayoutWithContext extends Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            projection.root.didUpdate();\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const projection = visualElement.projection;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                frame.postRender(() => {\n                    const stack = projection.getStack();\n                    if (!stack || !stack.members.length) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            microtask.postRender(() => {\n                if (!projection.currentAnimation && projection.isLead()) {\n                    this.safeToRemove();\n                }\n            });\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup && layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext && promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove && safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (jsx(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n","import { progress, noop } from 'motion-utils';\nimport { circOut } from '../../easing/circ.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { percent, px } from '../../value/types/numbers/units.mjs';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mixNumber(0, \n        // TODO Reinstate this if only child\n        lead.opacity !== undefined ? lead.opacity : 1, easeCrossfadeIn(progress));\n        target.opacityExit = mixNumber(follow.opacity !== undefined ? follow.opacity : 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mixNumber(follow.opacity !== undefined ? follow.opacity : 1, lead.opacity !== undefined ? lead.opacity : 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mixNumber(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mixNumber(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    return values[radiusName] !== undefined\n        ? values[radiusName]\n        : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = /*@__PURE__*/ compress(0, 0.5, circOut);\nconst easeCrossfadeOut = /*@__PURE__*/ compress(0.5, 0.95, noop);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n/**\n * Reset a delta to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisDeltaInto(delta, originDelta) {\n    delta.translate = originDelta.translate;\n    delta.scale = originDelta.scale;\n    delta.originPoint = originDelta.originPoint;\n    delta.origin = originDelta.origin;\n}\n\nexport { copyAxisDeltaInto, copyAxisInto, copyBoxInto };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mixNumber(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mixNumber(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox ? originBox.x : undefined, sourceBox ? sourceBox.x : undefined);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox ? originBox.y : undefined, sourceBox ? sourceBox.y : undefined);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","import { calcLength } from './delta-calc.mjs';\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction axisEquals(a, b) {\n    return a.min === b.min && a.max === b.max;\n}\nfunction boxEquals(a, b) {\n    return axisEquals(a.x, b.x) && axisEquals(a.y, b.y);\n}\nfunction axisEqualsRounded(a, b) {\n    return (Math.round(a.min) === Math.round(b.min) &&\n        Math.round(a.max) === Math.round(b.max));\n}\nfunction boxEqualsRounded(a, b) {\n    return axisEqualsRounded(a.x, b.x) && axisEqualsRounded(a.y, b.y);\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\nfunction axisDeltaEquals(a, b) {\n    return (a.translate === b.translate &&\n        a.scale === b.scale &&\n        a.originPoint === b.originPoint);\n}\n\nexport { aspectRatio, axisDeltaEquals, axisEquals, axisEqualsRounded, boxEquals, boxEqualsRounded, isDeltaZero };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n            }\n            if (node.root && node.root.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            const { options, resumingFrom } = node;\n            options.onExitComplete && options.onExitComplete();\n            if (resumingFrom) {\n                resumingFrom.options.onExitComplete &&\n                    resumingFrom.options.onExitComplete();\n            }\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n","import { getValueTransition } from 'motion-dom';\nimport { noop } from 'motion-utils';\nimport { animateSingleValue } from '../../animation/animate/single-value.mjs';\nimport { getOptimisedAppearId } from '../../animation/optimized-appear/get-appear-id.mjs';\nimport { cancelFrame, frameData, frameSteps, frame } from '../../frameloop/frame.mjs';\nimport { microtask } from '../../frameloop/microtask.mjs';\nimport { time } from '../../frameloop/sync-time.mjs';\nimport { isSVGElement } from '../../render/dom/utils/is-svg-element.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { clamp } from '../../utils/clamp.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { SubscriptionManager } from '../../utils/subscription-manager.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto, copyAxisDeltaInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcRelativePosition, calcRelativeBox, calcBoxDelta, calcLength, isNear } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\nimport { boxEqualsRounded, isDeltaZero, axisDeltaEquals, aspectRatio, boxEquals } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\nimport { globalProjectionState } from './state.mjs';\n\nconst metrics = {\n    type: \"projectionFrame\",\n    totalNodes: 0,\n    resolvedTargetDeltas: 0,\n    recalculatedProjection: 0,\n};\nconst isDebug = typeof window !== \"undefined\" && window.MotionDebug !== undefined;\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\nconst hiddenVisibility = { visibility: \"hidden\" };\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nlet id = 0;\nfunction resetDistortingTransform(key, visualElement, values, sharedAnimationValues) {\n    const { latestValues } = visualElement;\n    // Record the distorting transform and then temporarily set it to 0\n    if (latestValues[key]) {\n        values[key] = latestValues[key];\n        visualElement.setStaticValue(key, 0);\n        if (sharedAnimationValues) {\n            sharedAnimationValues[key] = 0;\n        }\n    }\n}\nfunction cancelTreeOptimisedTransformAnimations(projectionNode) {\n    projectionNode.hasCheckedOptimisedAppear = true;\n    if (projectionNode.root === projectionNode)\n        return;\n    const { visualElement } = projectionNode.options;\n    if (!visualElement)\n        return;\n    const appearId = getOptimisedAppearId(visualElement);\n    if (window.MotionHasOptimisedAnimation(appearId, \"transform\")) {\n        const { layout, layoutId } = projectionNode.options;\n        window.MotionCancelOptimisedAnimation(appearId, \"transform\", frame, !(layout || layoutId));\n    }\n    const { parent } = projectionNode;\n    if (parent && !parent.hasCheckedOptimisedAppear) {\n        cancelTreeOptimisedTransformAnimations(parent);\n    }\n}\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(latestValues = {}, parent = defaultParent === null || defaultParent === void 0 ? void 0 : defaultParent()) {\n            /**\n             * A unique ID generated for every projection node.\n             */\n            this.id = id++;\n            /**\n             * An id that represents a unique session instigated by startUpdate.\n             */\n            this.animationId = 0;\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            /**\n             * Flag to true if we think the projection calculations for this node needs\n             * recalculating as a result of an updated transform or layout animation.\n             */\n            this.isProjectionDirty = false;\n            /**\n             * Flag to true if the layout *or* transform has changed. This then gets propagated\n             * throughout the projection tree, forcing any element below to recalculate on the next frame.\n             */\n            this.isSharedProjectionDirty = false;\n            /**\n             * Flag transform dirty. This gets propagated throughout the whole tree but is only\n             * respected by shared nodes.\n             */\n            this.isTransformDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * Store whether this node has been checked for optimised appear animations. As\n             * effects fire bottom-up, and we want to look up the tree for appear animations,\n             * this makes sure we only check each path once, stopping at nodes that\n             * have already been checked.\n             */\n            this.hasCheckedOptimisedAppear = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to layoutly\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            this.hasTreeAnimated = false;\n            // Note: Currently only running on root node\n            this.updateScheduled = false;\n            this.scheduleUpdate = () => this.update();\n            this.projectionUpdateScheduled = false;\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            /**\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\n             * the next step.\n             */\n            this.updateProjection = () => {\n                this.projectionUpdateScheduled = false;\n                /**\n                 * Reset debug counts. Manually resetting rather than creating a new\n                 * object each frame.\n                 */\n                if (isDebug) {\n                    metrics.totalNodes =\n                        metrics.resolvedTargetDeltas =\n                            metrics.recalculatedProjection =\n                                0;\n                }\n                this.nodes.forEach(propagateDirtyNodes);\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n                this.nodes.forEach(cleanDirtyNodes);\n                if (isDebug) {\n                    window.MotionDebug.record(metrics);\n                }\n            };\n            /**\n             * Frame calculations\n             */\n            this.resolvedRelativeTargetAt = 0.0;\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager && subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance, isLayoutDirty = this.root.hasTreeAnimated) {\n            if (this.instance)\n                return;\n            this.isSVG = isSVGElement(instance);\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.current) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            this.parent && this.parent.children.add(this);\n            if (isLayoutDirty && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let cancelDelay;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                attachResizeListener(instance, () => {\n                    this.root.updateBlockedByResize = true;\n                    cancelDelay && cancelDelay();\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeTargetChanged, layout: newLayout, }) => {\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = this.options.transition ||\n                        visualElement.getDefaultTransition() ||\n                        defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const targetChanged = !this.targetLayout ||\n                        !boxEqualsRounded(this.targetLayout, newLayout) ||\n                        hasRelativeTargetChanged;\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeTargetChanged;\n                    if (this.options.layoutRoot ||\n                        (this.resumeFrom && this.resumeFrom.instance) ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (targetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion ||\n                            this.options.layoutRoot) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged) {\n                            finishAnimation(this);\n                        }\n                        if (this.isLead() && this.options.onExitComplete) {\n                            this.options.onExitComplete();\n                        }\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            const stack = this.getStack();\n            stack && stack.remove(this);\n            this.parent && this.parent.children.delete(this);\n            this.instance = undefined;\n            cancelFrame(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            return (this.isAnimationBlocked ||\n                (this.parent && this.parent.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            this.nodes && this.nodes.forEach(resetSkewAndRotation);\n            this.animationId++;\n        }\n        getTransformTemplate() {\n            const { visualElement } = this.options;\n            return visualElement && visualElement.getProps().transformTemplate;\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            this.root.hasTreeAnimated = true;\n            if (this.root.isUpdateBlocked()) {\n                this.options.onExitComplete && this.options.onExitComplete();\n                return;\n            }\n            /**\n             * If we're running optimised appear animations then these must be\n             * cancelled before measuring the DOM. This is so we can measure\n             * the true layout of the element rather than the WAAPI animation\n             * which will be unaffected by the resetSkewAndRotate step.\n             *\n             * Note: This is a DOM write. Worst case scenario is this is sandwiched\n             * between other snapshot reads which will cause unnecessary style recalculations.\n             * This has to happen here though, as we don't yet know which nodes will need\n             * snapshots in startUpdate(), but we only want to cancel optimised animations\n             * if a layout animation measurement is actually going to be affected by them.\n             */\n            if (window.MotionCancelOptimisedAnimation &&\n                !this.hasCheckedOptimisedAppear) {\n                cancelTreeOptimisedTransformAnimations(this);\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                node.updateScroll(\"snapshot\");\n                if (node.options.layoutRoot) {\n                    node.willUpdate(false);\n                }\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            const transformTemplate = this.getTransformTemplate();\n            this.prevTransformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        update() {\n            this.updateScheduled = false;\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            if (!this.isUpdating) {\n                this.nodes.forEach(clearIsLayoutDirty);\n            }\n            this.isUpdating = false;\n            /**\n             * Write\n             */\n            this.nodes.forEach(resetTransformStyle);\n            /**\n             * Read ==================\n             */\n            // Update layout measurements of updated children\n            this.nodes.forEach(updateLayout);\n            /**\n             * Write\n             */\n            // Notify listeners that the layout is updated\n            this.nodes.forEach(notifyLayoutUpdate);\n            this.clearAllSnapshots();\n            /**\n             * Manually flush any pending updates. Ideally\n             * we could leave this to the following requestAnimationFrame but this seems\n             * to leave a flash of incorrectly styled content.\n             */\n            const now = time.now();\n            frameData.delta = clamp(0, 1000 / 60, now - frameData.timestamp);\n            frameData.timestamp = now;\n            frameData.isProcessing = true;\n            frameSteps.update.process(frameData);\n            frameSteps.preRender.process(frameData);\n            frameSteps.render.process(frameData);\n            frameData.isProcessing = false;\n        }\n        didUpdate() {\n            if (!this.updateScheduled) {\n                this.updateScheduled = true;\n                microtask.read(this.scheduleUpdate);\n            }\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            if (!this.projectionUpdateScheduled) {\n                this.projectionUpdateScheduled = true;\n                frame.preRender(this.updateProjection, false, true);\n            }\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            frame.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            this.snapshot = this.measure();\n        }\n        updateLayout() {\n            if (!this.instance)\n                return;\n            // TODO: Incorporate into a forwarded scroll offset\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const prevLayout = this.layout;\n            this.layout = this.measure(false);\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\n            const { visualElement } = this.options;\n            visualElement &&\n                visualElement.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout ? prevLayout.layoutBox : undefined);\n        }\n        updateScroll(phase = \"measure\") {\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\n            if (this.scroll &&\n                this.scroll.animationId === this.root.animationId &&\n                this.scroll.phase === phase) {\n                needsMeasurement = false;\n            }\n            if (needsMeasurement) {\n                const isRoot = checkIsScrollRoot(this.instance);\n                this.scroll = {\n                    animationId: this.root.animationId,\n                    phase,\n                    isRoot,\n                    offset: measureScroll(this.instance),\n                    wasRoot: this.scroll ? this.scroll.isRoot : isRoot,\n                };\n            }\n        }\n        resetTransform() {\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty ||\n                this.shouldResetTransform ||\n                this.options.alwaysMeasureLayout;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplate = this.getTransformTemplate();\n            const transformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure(removeTransform = true) {\n            const pageBox = this.measurePageBox();\n            let layoutBox = this.removeElementScroll(pageBox);\n            /**\n             * Measurements taken during the pre-render stage\n             * still have transforms applied so we remove them\n             * via calculation.\n             */\n            if (removeTransform) {\n                layoutBox = this.removeTransform(layoutBox);\n            }\n            roundBox(layoutBox);\n            return {\n                animationId: this.root.animationId,\n                measuredBox: pageBox,\n                layoutBox,\n                latestValues: {},\n                source: this.id,\n            };\n        }\n        measurePageBox() {\n            var _a;\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            const wasInScrollRoot = ((_a = this.scroll) === null || _a === void 0 ? void 0 : _a.wasRoot) || this.path.some(checkNodeWasScrollRoot);\n            if (!wasInScrollRoot) {\n                // Remove viewport scroll to give page-relative coordinates\n                const { scroll } = this.root;\n                if (scroll) {\n                    translateAxis(box.x, scroll.offset.x);\n                    translateAxis(box.y, scroll.offset.y);\n                }\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            var _a;\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            if ((_a = this.scroll) === null || _a === void 0 ? void 0 : _a.wasRoot) {\n                return boxWithoutScroll;\n            }\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (scroll.wasRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.offset.x,\n                        y: -node.scroll.offset.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measurePageBox();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, node.snapshot ? node.snapshot.layoutBox : undefined, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.root.scheduleUpdateProjection();\n            this.isProjectionDirty = true;\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        forceRelativeParentToResolveTarget() {\n            if (!this.relativeParent)\n                return;\n            /**\n             * If the parent target isn't up-to-date, force it to update.\n             * This is an unfortunate de-optimisation as it means any updating relative\n             * projection will cause all the relative parents to recalculate back\n             * up the tree.\n             */\n            if (this.relativeParent.resolvedRelativeTargetAt !==\n                frameData.timestamp) {\n                this.relativeParent.resolveTargetDelta(true);\n            }\n        }\n        resolveTargetDelta(forceRecalculation = false) {\n            var _a;\n            /**\n             * Once the dirty status of nodes has been spread through the tree, we also\n             * need to check if we have a shared node of a different depth that has itself\n             * been dirtied.\n             */\n            const lead = this.getLead();\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\n            this.isSharedProjectionDirty || (this.isSharedProjectionDirty = lead.isSharedProjectionDirty);\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            /**\n             * We don't use transform for this step of processing so we don't\n             * need to check whether any nodes have changed transform.\n             */\n            const canSkip = !(forceRecalculation ||\n                (isShared && this.isSharedProjectionDirty) ||\n                this.isProjectionDirty ||\n                ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty) ||\n                this.attemptToResolveRelativeTarget ||\n                this.root.updateBlockedByResize);\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            this.resolvedRelativeTargetAt = frameData.timestamp;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            if (!this.targetDelta && !this.relativeTarget) {\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    relativeParent.layout &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                this.relativeParent &&\n                this.relativeParent.target) {\n                this.forceRelativeParentToResolveTarget();\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.layoutBox);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.layoutBox);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.layoutBox);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    Boolean(relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !relativeParent.options.layoutScroll &&\n                    relativeParent.target &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * Increase debug counter for resolved target deltas\n             */\n            if (isDebug) {\n                metrics.resolvedTargetDeltas++;\n            }\n        }\n        getClosestProjectingParent() {\n            if (!this.parent ||\n                hasScale(this.parent.latestValues) ||\n                has2DTranslate(this.parent.latestValues)) {\n                return undefined;\n            }\n            if (this.parent.isProjecting()) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        isProjecting() {\n            return Boolean((this.relativeTarget ||\n                this.targetDelta ||\n                this.options.layoutRoot) &&\n                this.layout);\n        }\n        calcProjection() {\n            var _a;\n            const lead = this.getLead();\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            let canSkip = true;\n            /**\n             * If this is a normal layout animation and neither this node nor its nearest projecting\n             * is dirty then we can't skip.\n             */\n            if (this.isProjectionDirty || ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If this is a shared layout animation and this node's shared projection is dirty then\n             * we can't skip.\n             */\n            if (isShared &&\n                (this.isSharedProjectionDirty || this.isTransformDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If we have resolved the target this frame we must recalculate the\n             * projection to ensure it visually represents the internal calculations.\n             */\n            if (this.resolvedRelativeTargetAt === frameData.timestamp) {\n                canSkip = false;\n            }\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean((this.parent && this.parent.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\n            /**\n             * Record previous tree scales before updating.\n             */\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\n            /**\n             * If this layer needs to perform scale correction but doesn't have a target,\n             * use the layout as the target.\n             */\n            if (lead.layout &&\n                !lead.target &&\n                (this.treeScale.x !== 1 || this.treeScale.y !== 1)) {\n                lead.target = lead.layout.layoutBox;\n                lead.targetWithTransforms = createBox();\n            }\n            const { target } = lead;\n            if (!target) {\n                /**\n                 * If we don't have a target to project into, but we were previously\n                 * projecting, we want to remove the stored transform and schedule\n                 * a render to ensure the elements reflect the removed transform.\n                 */\n                if (this.prevProjectionDelta) {\n                    this.createProjectionDeltas();\n                    this.scheduleRender();\n                }\n                return;\n            }\n            if (!this.projectionDelta || !this.prevProjectionDelta) {\n                this.createProjectionDeltas();\n            }\n            else {\n                copyAxisDeltaInto(this.prevProjectionDelta.x, this.projectionDelta.x);\n                copyAxisDeltaInto(this.prevProjectionDelta.y, this.projectionDelta.y);\n            }\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            if (this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY ||\n                !axisDeltaEquals(this.projectionDelta.x, this.prevProjectionDelta.x) ||\n                !axisDeltaEquals(this.projectionDelta.y, this.prevProjectionDelta.y)) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n            /**\n             * Increase debug counter for recalculated projections\n             */\n            if (isDebug) {\n                metrics.recalculatedProjection++;\n            }\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            var _a;\n            (_a = this.options.visualElement) === null || _a === void 0 ? void 0 : _a.scheduleRender();\n            if (notifyAll) {\n                const stack = this.getStack();\n                stack && stack.scheduleRender();\n            }\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        createProjectionDeltas() {\n            this.prevProjectionDelta = createDelta();\n            this.projectionDelta = createDelta();\n            this.projectionDeltaWithTransform = createDelta();\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = snapshot\n                ? snapshot.latestValues\n                : {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            if (!this.relativeParent ||\n                !this.relativeParent.options.layoutRoot) {\n                this.relativeTarget = this.relativeTargetOrigin = undefined;\n            }\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const snapshotSource = snapshot ? snapshot.source : undefined;\n            const layoutSource = this.layout ? this.layout.source : undefined;\n            const isSharedLayoutAnimation = snapshotSource !== layoutSource;\n            const stack = this.getStack();\n            const isOnlyMember = !stack || stack.members.length <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            let prevRelativeTarget;\n            this.mixTargetDelta = (latest) => {\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    this.relativeParent &&\n                    this.relativeParent.layout) {\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                    /**\n                     * If this is an unchanged relative target we can consider the\n                     * projection not dirty.\n                     */\n                    if (prevRelativeTarget &&\n                        boxEquals(this.relativeTarget, prevRelativeTarget)) {\n                        this.isProjectionDirty = false;\n                    }\n                    if (!prevRelativeTarget)\n                        prevRelativeTarget = createBox();\n                    copyBoxInto(prevRelativeTarget, this.relativeTarget);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(this.options.layoutRoot ? 1000 : 0);\n        }\n        startAnimation(options) {\n            this.notifyListeners(\"animationStart\");\n            this.currentAnimation && this.currentAnimation.stop();\n            if (this.resumingFrom && this.resumingFrom.currentAnimation) {\n                this.resumingFrom.currentAnimation.stop();\n            }\n            if (this.pendingAnimation) {\n                cancelFrame(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = frame.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                this.currentAnimation = animateSingleValue(0, animationTarget, {\n                    ...options,\n                    onUpdate: (latest) => {\n                        this.mixTargetDelta(latest);\n                        options.onUpdate && options.onUpdate(latest);\n                    },\n                    onComplete: () => {\n                        options.onComplete && options.onComplete();\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            const stack = this.getStack();\n            stack && stack.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            if (this.currentAnimation) {\n                this.mixTargetDelta && this.mixTargetDelta(animationTarget);\n                this.currentAnimation.stop();\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.layoutBox.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.layoutBox.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its layout layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            const config = node.options.initialPromotionConfig;\n            node.promote({\n                transition: config ? config.transition : undefined,\n                preserveFollowOpacity: config && config.shouldPreserveFollowOpacity\n                    ? config.shouldPreserveFollowOpacity(node)\n                    : undefined,\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? ((_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.lead) || this : this;\n        }\n        getPrevLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetSkewAndRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected skew or rotation values, we can early return without a forced render.\n            let hasDistortingTransform = false;\n            /**\n             * An unrolled check for rotation values. Most elements don't have any rotation and\n             * skipping the nested loop and new object creation is 50% faster.\n             */\n            const { latestValues } = visualElement;\n            if (latestValues.z ||\n                latestValues.rotate ||\n                latestValues.rotateX ||\n                latestValues.rotateY ||\n                latestValues.rotateZ ||\n                latestValues.skewX ||\n                latestValues.skewY) {\n                hasDistortingTransform = true;\n            }\n            // If there's no distorting values, we don't need to do any more.\n            if (!hasDistortingTransform)\n                return;\n            const resetValues = {};\n            if (latestValues.z) {\n                resetDistortingTransform(\"z\", visualElement, resetValues, this.animationValues);\n            }\n            // Check the skew and rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                resetDistortingTransform(`rotate${transformAxes[i]}`, visualElement, resetValues, this.animationValues);\n                resetDistortingTransform(`skew${transformAxes[i]}`, visualElement, resetValues, this.animationValues);\n            }\n            // Force a render of this element to apply the transform with all skews and rotations\n            // set to 0.\n            visualElement.render();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n                if (this.animationValues) {\n                    this.animationValues[key] = resetValues[key];\n                }\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        getProjectionStyles(styleProp) {\n            var _a, _b;\n            if (!this.instance || this.isSVG)\n                return undefined;\n            if (!this.isVisible) {\n                return hiddenVisibility;\n            }\n            const styles = {\n                visibility: \"\",\n            };\n            const transformTemplate = this.getTransformTemplate();\n            if (this.needsReset) {\n                this.needsReset = false;\n                styles.opacity = \"\";\n                styles.pointerEvents =\n                    resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\";\n                styles.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return styles;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                const emptyStyles = {};\n                if (this.options.layoutId) {\n                    emptyStyles.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    emptyStyles.pointerEvents =\n                        resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    emptyStyles.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return emptyStyles;\n            }\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                styles.transform = transformTemplate(valuesToRender, styles.transform);\n            }\n            const { x, y } = this.projectionDelta;\n            styles.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                styles.opacity =\n                    lead === this\n                        ? (_b = (_a = valuesToRender.opacity) !== null && _a !== void 0 ? _a : this.latestValues.opacity) !== null && _b !== void 0 ? _b : 1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its layout\n                 * opacity and other components to hidden.\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo } = scaleCorrectors[key];\n                /**\n                 * Only apply scale correction to the value if we have an\n                 * active projection transform. Otherwise these values become\n                 * vulnerable to distortion if the element changes size without\n                 * a corresponding layout animation.\n                 */\n                const corrected = styles.transform === \"none\"\n                    ? valuesToRender[key]\n                    : correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        styles[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    styles[key] = corrected;\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                styles.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\"\n                        : \"none\";\n            }\n            return styles;\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => { var _a; return (_a = node.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop(); });\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    var _a;\n    const snapshot = ((_a = node.resumeFrom) === null || _a === void 0 ? void 0 : _a.snapshot) || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        const isShared = snapshot.source !== node.layout.source;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n                /**\n                 * Ensure relative target gets resized and rerendererd\n                 */\n                if (node.relativeTarget && !node.currentAnimation) {\n                    node.isProjectionDirty = true;\n                    node.relativeTarget[axis].max =\n                        node.relativeTarget[axis].min + length;\n                }\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\n        const visualDelta = createDelta();\n        if (isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeTargetChanged = false;\n        if (!node.resumeFrom) {\n            const relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (relativeParent && !relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\n                    if (!boxEqualsRounded(relativeSnapshot, relativeLayout)) {\n                        hasRelativeTargetChanged = true;\n                    }\n                    if (relativeParent.options.layoutRoot) {\n                        node.relativeTarget = relativeLayout;\n                        node.relativeTargetOrigin = relativeSnapshot;\n                        node.relativeParent = relativeParent;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeTargetChanged,\n        });\n    }\n    else if (node.isLead()) {\n        const { onExitComplete } = node.options;\n        onExitComplete && onExitComplete();\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction propagateDirtyNodes(node) {\n    /**\n     * Increase debug counter for nodes encountered this frame\n     */\n    if (isDebug) {\n        metrics.totalNodes++;\n    }\n    if (!node.parent)\n        return;\n    /**\n     * If this node isn't projecting, propagate isProjectionDirty. It will have\n     * no performance impact but it will allow the next child that *is* projecting\n     * but *isn't* dirty to just check its parent to see if *any* ancestor needs\n     * correcting.\n     */\n    if (!node.isProjecting()) {\n        node.isProjectionDirty = node.parent.isProjectionDirty;\n    }\n    /**\n     * Propagate isSharedProjectionDirty and isTransformDirty\n     * throughout the whole tree. A future revision can take another look at\n     * this but for safety we still recalcualte shared nodes.\n     */\n    node.isSharedProjectionDirty || (node.isSharedProjectionDirty = Boolean(node.isProjectionDirty ||\n        node.parent.isProjectionDirty ||\n        node.parent.isSharedProjectionDirty));\n    node.isTransformDirty || (node.isTransformDirty = node.parent.isTransformDirty);\n}\nfunction cleanDirtyNodes(node) {\n    node.isProjectionDirty =\n        node.isSharedProjectionDirty =\n            node.isTransformDirty =\n                false;\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction clearIsLayoutDirty(node) {\n    node.isLayoutDirty = false;\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement && visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notify(\"BeforeLayoutMeasure\");\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n    node.isProjectionDirty = true;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetSkewAndRotation(node) {\n    node.resetSkewAndRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mixNumber(delta.translate, 0, p);\n    output.scale = mixNumber(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mixNumber(from.min, to.min, p);\n    output.max = mixNumber(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nconst userAgentContains = (string) => typeof navigator !== \"undefined\" &&\n    navigator.userAgent &&\n    navigator.userAgent.toLowerCase().includes(string);\n/**\n * Measured bounding boxes must be rounded in Safari and\n * left untouched in Chrome, otherwise non-integer layouts within scaled-up elements\n * can appear to jump.\n */\nconst roundPoint = userAgentContains(\"applewebkit/\") && !userAgentContains(\"chrome/\")\n    ? Math.round\n    : noop;\nfunction roundAxis(axis) {\n    // Round to the nearest .5 pixels to support subpixel layouts\n    axis.min = roundPoint(axis.min);\n    axis.max = roundPoint(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\nfunction checkNodeWasScrollRoot(node) {\n    var _a;\n    return node !== node.root && ((_a = node.scroll) === null || _a === void 0 ? void 0 : _a.wasRoot);\n}\n\nexport { cleanDirtyNodes, createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\n","function isSVGElement(element) {\n    return element instanceof SVGElement && element.tagName !== \"svg\";\n}\n\nexport { isSVGElement };\n","import { secondsToMilliseconds } from 'motion-utils';\nimport { time } from '../frameloop/sync-time.mjs';\nimport { frame, cancelFrame } from '../frameloop/frame.mjs';\n\n/**\n * Timeout defined in ms\n */\nfunction delay(callback, timeout) {\n    const start = time.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelFrame(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    frame.read(checkElapsed, true);\n    return () => cancelFrame(checkElapsed);\n}\nfunction delayInSeconds(callback, timeout) {\n    return delay(callback, secondsToMilliseconds(timeout));\n}\n\nexport { delay, delayInSeconds };\n","import { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { animateMotionValue } from '../interfaces/motion-value.mjs';\n\nfunction animateSingleValue(value, keyframes, options) {\n    const motionValue$1 = isMotionValue(value) ? value : motionValue(value);\n    motionValue$1.start(animateMotionValue(\"\", motionValue$1, keyframes, options));\n    return motionValue$1.animation;\n}\n\nexport { animateSingleValue };\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\n    let transform = \"\";\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    const zTranslate = (latestTransform === null || latestTransform === void 0 ? void 0 : latestTransform.z) || 0;\n    if (xTranslate || yTranslate || zTranslate) {\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, ${zTranslate}px) `;\n    }\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    }\n    if (latestTransform) {\n        const { transformPerspective, rotate, rotateX, rotateY, skewX, skewY } = latestTransform;\n        if (transformPerspective)\n            transform = `perspective(${transformPerspective}px) ${transform}`;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n        if (skewX)\n            transform += `skewX(${skewX}deg) `;\n        if (skewY)\n            transform += `skewY(${skewY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    }\n    return transform || \"none\";\n}\n\nexport { buildProjectionTransform };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode({});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","import { DragGesture } from '../../gestures/drag/index.mjs';\nimport { PanGesture } from '../../gestures/pan/index.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\nconst drag = {\n    pan: {\n        Feature: PanGesture,\n    },\n    drag: {\n        Feature: DragGesture,\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { drag };\n","import { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from 'motion-utils';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\n\nclass DragGesture extends Feature {\n    constructor(node) {\n        super(node);\n        this.removeGroupControls = noop;\n        this.removeListeners = noop;\n        this.controls = new VisualElementDragControls(node);\n    }\n    mount() {\n        // If we've been provided a DragControls for manual control over the drag gesture,\n        // subscribe this component to it on mount.\n        const { dragControls } = this.node.getProps();\n        if (dragControls) {\n            this.removeGroupControls = dragControls.subscribe(this.controls);\n        }\n        this.removeListeners = this.controls.addListeners() || noop;\n    }\n    unmount() {\n        this.removeGroupControls();\n        this.removeListeners();\n    }\n}\n\nexport { DragGesture };\n","import { Feature } from '../motion/features/Feature.mjs';\nimport { hover } from 'motion-dom';\nimport { extractEventInfo } from '../events/event-info.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction handleHoverEvent(node, event, lifecycle) {\n    const { props } = node;\n    if (node.animationState && props.whileHover) {\n        node.animationState.setActive(\"whileHover\", lifecycle === \"Start\");\n    }\n    const eventName = (\"onHover\" + lifecycle);\n    const callback = props[eventName];\n    if (callback) {\n        frame.postRender(() => callback(event, extractEventInfo(event)));\n    }\n}\nclass HoverGesture extends Feature {\n    mount() {\n        const { current } = this.node;\n        if (!current)\n            return;\n        this.unmount = hover(current, (startEvent) => {\n            handleHoverEvent(this.node, startEvent, \"Start\");\n            return (endEvent) => handleHoverEvent(this.node, endEvent, \"End\");\n        });\n    }\n    unmount() { }\n}\n\nexport { HoverGesture };\n","import { Feature } from '../motion/features/Feature.mjs';\nimport { press } from 'motion-dom';\nimport { extractEventInfo } from '../events/event-info.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction handlePressEvent(node, event, lifecycle) {\n    const { props } = node;\n    if (node.animationState && props.whileTap) {\n        node.animationState.setActive(\"whileTap\", lifecycle === \"Start\");\n    }\n    const eventName = (\"onTap\" + (lifecycle === \"End\" ? \"\" : lifecycle));\n    const callback = props[eventName];\n    if (callback) {\n        frame.postRender(() => callback(event, extractEventInfo(event)));\n    }\n}\nclass PressGesture extends Feature {\n    mount() {\n        const { current } = this.node;\n        if (!current)\n            return;\n        this.unmount = press(current, (startEvent) => {\n            handlePressEvent(this.node, startEvent, \"Start\");\n            return (endEvent, { success }) => handlePressEvent(this.node, endEvent, success ? \"End\" : \"Cancel\");\n        }, { useGlobalTarget: this.node.props.globalTapTarget });\n    }\n    unmount() { }\n}\n\nexport { PressGesture };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { Feature } from '../Feature.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nclass InViewFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.hasEnteredView = false;\n        this.isInView = false;\n    }\n    startObserver() {\n        this.unmount();\n        const { viewport = {} } = this.node.getProps();\n        const { root, margin: rootMargin, amount = \"some\", once } = viewport;\n        const options = {\n            root: root ? root.current : undefined,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const onIntersectionUpdate = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (this.isInView === isIntersecting)\n                return;\n            this.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && this.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                this.hasEnteredView = true;\n            }\n            if (this.node.animationState) {\n                this.node.animationState.setActive(\"whileInView\", isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const { onViewportEnter, onViewportLeave } = this.node.getProps();\n            const callback = isIntersecting ? onViewportEnter : onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(this.node.current, options, onIntersectionUpdate);\n    }\n    mount() {\n        this.startObserver();\n    }\n    update() {\n        if (typeof IntersectionObserver === \"undefined\")\n            return;\n        const { props, prevProps } = this.node;\n        const hasOptionsChanged = [\"amount\", \"margin\", \"root\"].some(hasViewportOptionChanged(props, prevProps));\n        if (hasOptionsChanged) {\n            this.startObserver();\n        }\n    }\n    unmount() { }\n}\nfunction hasViewportOptionChanged({ viewport = {} }, { viewport: prevViewport = {} } = {}) {\n    return (name) => viewport[name] !== prevViewport[name];\n}\n\nexport { InViewFeature };\n","import { HoverGesture } from '../../gestures/hover.mjs';\nimport { FocusGesture } from '../../gestures/focus.mjs';\nimport { PressGesture } from '../../gestures/press.mjs';\nimport { InViewFeature } from './viewport/index.mjs';\n\nconst gestureAnimations = {\n    inView: {\n        Feature: InViewFeature,\n    },\n    tap: {\n        Feature: PressGesture,\n    },\n    focus: {\n        Feature: FocusGesture,\n    },\n    hover: {\n        Feature: HoverGesture,\n    },\n};\n\nexport { gestureAnimations };\n","import { addDomEvent } from '../events/add-dom-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\n\nclass FocusGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.isActive = false;\n    }\n    onFocus() {\n        let isFocusVisible = false;\n        /**\n         * If this element doesn't match focus-visible then don't\n         * apply whileHover. But, if matches throws that focus-visible\n         * is not a valid selector then in that browser outline styles will be applied\n         * to the element by default and we want to match that behaviour with whileFocus.\n         */\n        try {\n            isFocusVisible = this.node.current.matches(\":focus-visible\");\n        }\n        catch (e) {\n            isFocusVisible = true;\n        }\n        if (!isFocusVisible || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", true);\n        this.isActive = true;\n    }\n    onBlur() {\n        if (!this.isActive || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", false);\n        this.isActive = false;\n    }\n    mount() {\n        this.unmount = pipe(addDomEvent(this.node.current, \"focus\", () => this.onFocus()), addDomEvent(this.node.current, \"blur\", () => this.onBlur()));\n    }\n    unmount() { }\n}\n\nexport { FocusGesture };\n","import { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\n\nconst layout = {\n    layout: {\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { layout };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { complex } from '../../../value/types/complex/index.mjs';\nimport { dimensionValueTypes } from './dimensions.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","const visualElementStore = new WeakMap();\n\nexport { visualElementStore };\n","import { time } from '../frameloop/sync-time.mjs';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { isNumericalString } from '../utils/is-numerical-string.mjs';\nimport { isZeroValueString } from '../utils/is-zero-value-string.mjs';\nimport { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { complex } from '../value/types/complex/index.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { getAnimatableNone } from './dom/value-types/animatable-none.mjs';\nimport { findValueType } from './dom/value-types/find.mjs';\nimport { transformProps } from './html/utils/keys-transform.mjs';\nimport { visualElementStore } from './store.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { KeyframeResolver } from './utils/KeyframesResolver.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\nimport { frame, cancelFrame } from '../frameloop/frame.mjs';\n\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props, _prevProps, _visualElement) {\n        return {};\n    }\n    constructor({ parent, props, presenceContext, reducedMotionConfig, blockInitialAnimation, visualState, }, options = {}) {\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        this.KeyframeResolver = KeyframeResolver;\n        /**\n         * Cleanup functions for active features (hover/tap/exit etc)\n         */\n        this.features = {};\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.renderScheduledAt = 0.0;\n        this.scheduleRender = () => {\n            const now = time.now();\n            if (this.renderScheduledAt < now) {\n                this.renderScheduledAt = now;\n                frame.render(this.render, false, true);\n            }\n        };\n        const { latestValues, renderState, onUpdate } = visualState;\n        this.onUpdate = onUpdate;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.presenceContext = presenceContext;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.blockInitialAnimation = Boolean(blockInitialAnimation);\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't necessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {}, this);\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n            }\n        }\n    }\n    mount(instance) {\n        this.current = instance;\n        visualElementStore.set(instance, this);\n        if (this.projection && !this.projection.instance) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = this.parent.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(this.shouldReduceMotion !== true, \"You have Reduced Motion enabled on your device. Animations may not appear as expected.\");\n        }\n        if (this.parent)\n            this.parent.children.add(this);\n        this.update(this.props, this.presenceContext);\n    }\n    unmount() {\n        visualElementStore.delete(this.current);\n        this.projection && this.projection.unmount();\n        cancelFrame(this.notifyUpdate);\n        cancelFrame(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        this.valueSubscriptions.clear();\n        this.removeFromVariantTree && this.removeFromVariantTree();\n        this.parent && this.parent.children.delete(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        for (const key in this.features) {\n            const feature = this.features[key];\n            if (feature) {\n                feature.unmount();\n                feature.isMounted = false;\n            }\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        if (this.valueSubscriptions.has(key)) {\n            this.valueSubscriptions.get(key)();\n        }\n        const valueIsTransform = transformProps.has(key);\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate && frame.preRender(this.notifyUpdate);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n        });\n        const removeOnRenderRequest = value.on(\"renderRequest\", this.scheduleRender);\n        let removeSyncCheck;\n        if (window.MotionCheckAppearSync) {\n            removeSyncCheck = window.MotionCheckAppearSync(this, key, value);\n        }\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n            if (removeSyncCheck)\n                removeSyncCheck();\n            if (value.owner)\n                value.stop();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type) {\n            return 0;\n        }\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    updateFeatures() {\n        let key = \"animation\";\n        for (key in featureDefinitions) {\n            const featureDefinition = featureDefinitions[key];\n            if (!featureDefinition)\n                continue;\n            const { isEnabled, Feature: FeatureConstructor } = featureDefinition;\n            /**\n             * If this feature is enabled but not active, make a new instance.\n             */\n            if (!this.features[key] &&\n                FeatureConstructor &&\n                isEnabled(this.props)) {\n                this.features[key] = new FeatureConstructor(this);\n            }\n            /**\n             * If we have a feature, mount or update it.\n             */\n            if (this.features[key]) {\n                const feature = this.features[key];\n                if (feature.isMounted) {\n                    feature.update();\n                }\n                else {\n                    feature.mount();\n                    feature.isMounted = true;\n                }\n            }\n        }\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    update(props, presenceContext) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        this.prevProps = this.props;\n        this.props = props;\n        this.prevPresenceContext = this.presenceContext;\n        this.presenceContext = presenceContext;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listenerName = (\"on\" + key);\n            const listener = props[listenerName];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, this.prevProps, this), this.prevMotionValues);\n        if (this.handleChildMotionValue) {\n            this.handleChildMotionValue();\n        }\n        this.onUpdate && this.onUpdate(this);\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        return this.props.variants ? this.props.variants[name] : undefined;\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        return this.isVariantNode\n            ? this\n            : this.parent\n                ? this.parent.getClosestVariantNode()\n                : undefined;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            closestVariantNode.variantChildren &&\n                closestVariantNode.variantChildren.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        const existingValue = this.values.get(key);\n        if (value !== existingValue) {\n            if (existingValue)\n                this.removeValue(key);\n            this.bindToMotionValue(key, value);\n            this.values.set(key, value);\n            this.latestValues[key] = value.get();\n        }\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        this.values.delete(key);\n        const unsubscribe = this.valueSubscriptions.get(key);\n        if (unsubscribe) {\n            unsubscribe();\n            this.valueSubscriptions.delete(key);\n        }\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue === null ? undefined : defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key, target) {\n        var _a;\n        let value = this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : (_a = this.getBaseTargetFromProps(this.props, key)) !== null && _a !== void 0 ? _a : this.readValueFromInstance(this.current, key, this.options);\n        if (value !== undefined && value !== null) {\n            if (typeof value === \"string\" &&\n                (isNumericalString(value) || isZeroValueString(value))) {\n                // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n                value = parseFloat(value);\n            }\n            else if (!findValueType(value) && complex.test(target)) {\n                value = getAnimatableNone(key, target);\n            }\n            this.setBaseTarget(key, isMotionValue(value) ? value.get() : value);\n        }\n        return isMotionValue(value) ? value.get() : value;\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        var _a;\n        const { initial } = this.props;\n        let valueFromInitial;\n        if (typeof initial === \"string\" || typeof initial === \"object\") {\n            const variant = resolveVariantFromProps(this.props, initial, (_a = this.presenceContext) === null || _a === void 0 ? void 0 : _a.custom);\n            if (variant) {\n                valueFromInitial = variant[key];\n            }\n        }\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        if (this.events[eventName]) {\n            this.events[eventName].notify(...args);\n        }\n    }\n}\n\nexport { VisualElement };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","import { warnOnce } from '../../utils/warn-once.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n            /**\n             * Check the version of the incoming motion value with this version\n             * and warn against mismatches.\n             */\n            if (process.env.NODE_ENV === \"development\") {\n                warnOnce(nextValue.version === \"11.18.2\", `Attempting to mix Motion versions ${nextValue.version} with 11.18.2 may not work as expected.`);\n            }\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                if (existingValue.liveStyle === true) {\n                    existingValue.jump(nextValue);\n                }\n                else if (!existingValue.hasAnimated) {\n                    existingValue.set(nextValue);\n                }\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue, { owner: element }));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import { VisualElement } from '../VisualElement.mjs';\nimport { DOMKeyframesResolver } from './DOMKeyframesResolver.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    constructor() {\n        super(...arguments);\n        this.KeyframeResolver = DOMKeyframesResolver;\n    }\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props.style\n            ? props.style[key]\n            : undefined;\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n    handleChildMotionValue() {\n        if (this.childSubscription) {\n            this.childSubscription();\n            delete this.childSubscription;\n        }\n        const { children } = this.props;\n        if (isMotionValue(children)) {\n            this.childSubscription = children.on(\"change\", (latest) => {\n                if (this.current) {\n                    this.current.textContent = `${latest}`;\n                }\n            });\n        }\n    }\n}\n\nexport { DOMVisualElement };\n","import { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { isCSSVariableName } from '../dom/utils/is-css-variable.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { transformProps } from './utils/keys-transform.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"html\";\n        this.renderInstance = renderHTML;\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariableName(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, props) {\n        buildHTMLStyles(renderState, latestValues, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n        return scrapeMotionValuesFromProps(props, prevProps, visualElement);\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","import { createBox } from '../../projection/geometry/models.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { transformProps } from '../html/utils/keys-transform.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"svg\";\n        this.isSVGTag = false;\n        this.measureInstanceViewportBox = createBox;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n        return scrapeMotionValuesFromProps(props, prevProps, visualElement);\n    }\n    build(renderState, latestValues, props) {\n        buildSVGAttrs(renderState, latestValues, this.isSVGTag, props.transformTemplate);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","import { Fragment } from 'react';\nimport { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options)\n        : new HTMLVisualElement(options, {\n            allowProjection: Component !== Fragment,\n        });\n};\n\nexport { createDomVisualElement };\n","import { createDOMMotionComponentProxy } from '../create-proxy.mjs';\nimport { createMotionComponent } from './create.mjs';\n\nconst motion = /*@__PURE__*/ createDOMMotionComponentProxy(createMotionComponent);\n\nexport { motion };\n","import { animations } from '../../../motion/features/animations.mjs';\nimport { drag } from '../../../motion/features/drag.mjs';\nimport { gestureAnimations } from '../../../motion/features/gestures.mjs';\nimport { layout } from '../../../motion/features/layout.mjs';\nimport { createMotionComponentFactory } from '../create-factory.mjs';\nimport { createDomVisualElement } from '../../dom/create-visual-element.mjs';\n\nconst createMotionComponent = /*@__PURE__*/ createMotionComponentFactory({\n    ...animations,\n    ...gestureAnimations,\n    ...drag,\n    ...layout,\n}, createDomVisualElement);\n\nexport { createMotionComponent };\n"],"names":["f","require$$0","k","Symbol","for","l","m","Object","prototype","hasOwnProperty","n","__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED","ReactCurrentOwner","p","key","ref","__self","__source","q","c","a","g","b","d","e","h","call","defaultProps","$$typeof","type","props","_owner","current","reactJsxRuntime_production_min","jsx","jsxs","jsxRuntimeModule","exports","LayoutGroupContext","createContext","useConstant","init","useRef","PresenceContext","MotionConfigContext","transformPagePoint","isStatic","reducedMotion","PopChildMeasure","React.Component","getSnapshotBeforeUpdate","prevProps","element","this","childRef","isPresent","size","sizeRef","height","offsetHeight","width","offsetWidth","top","offsetTop","left","offsetLeft","componentDidUpdate","render","children","PopChild","id","useId","nonce","useContext","useInsertionEffect","dataset","motionPopId","style","document","createElement","head","appendChild","sheet","insertRule","removeChild","React.cloneElement","PresenceChild","initial","onExitComplete","custom","presenceAffectsLayout","mode","presenceChildren","newChildrenMap","memoizedOnExitComplete","useCallback","childId","set","isComplete","values","context","useMemo","register","delete","Math","random","forEach","_","React.useEffect","Provider","value","Map","usePresence","subscribe","useEffect","safeToRemove","getChildKey","child","onlyElements","filtered","Children","isValidElement","push","isBrowser","window","useIsomorphicLayoutEffect","useLayoutEffect","AnimatePresence","propagate","isParentPresent","presentChildren","presentKeys","map","isInitialRender","pendingPresentChildren","exitComplete","diffedChildren","setDiffedChildren","useState","renderedChildren","setRenderedChildren","i","length","includes","get","join","exitingChildren","nextChildren","splice","forceRender","Fragment","has","isEveryExitComplete","isExitComplete","noop","any","invariant","memo","callback","result","progress","from","to","toFromDifference","secondsToMilliseconds","seconds","millisecondsToSeconds","milliseconds","MotionGlobalConfig","stepsOrder","createRenderBatcher","scheduleNextBatch","allowKeepAlive","runNextFrame","useDefaultElapsed","state","delta","timestamp","isProcessing","flagRunNextFrame","steps","reduce","acc","thisFrame","Set","nextFrame","flushNextFrame","toKeepAlive","WeakSet","latestFrameData","triggerCallback","step","schedule","keepAlive","immediate","queue","add","cancel","process","frameData","clear","createRenderStep","read","resolveKeyframes","update","preRender","postRender","processBatch","performance","now","max","min","frame","cancelFrame","frameSteps","requestAnimationFrame","LazyContext","strict","featureProps","animation","exit","drag","focus","hover","tap","pan","inView","layout","featureDefinitions","isEnabled","some","name","validMotionProps","isValidMotionProp","startsWith","shouldForward","isValidProp","require","default","_a","createDOMMotionComponentProxy","componentFactory","Proxy","componentCache","args","_target","MotionContext","isVariantLabel","v","Array","isArray","isAnimationControls","start","variantPriorityOrder","variantProps","isControllingVariants","animate","isVariantNode","Boolean","variants","useCreateMotionContext","inherit","getCurrentTreeVariants","variantLabelsAsDependency","prop","motionComponentSymbol","isRefObject","useMotionRef","visualState","visualElement","externalRef","instance","onMount","mount","unmount","camelToDash","str","replace","toLowerCase","optimizedAppearDataAttribute","microtask","queueMicrotask","SwitchLayoutGroupContext","useVisualElement","Component","createVisualElement","ProjectionNodeConstructor","_b","parent","lazyContext","presenceContext","reducedMotionConfig","visualElementRef","renderer","blockInitialAnimation","initialLayoutGroupConfig","projection","initialPromotionConfig","layoutId","dragConstraints","layoutScroll","layoutRoot","latestValues","getClosestProjectingNode","setOptions","alwaysMeasureLayout","animationType","createProjectionNode","isMounted","optimisedAppearId","wantsHandoff","MotionHandoffIsComplete","MotionHasOptimisedAnimation","MotionIsMounted","updateFeatures","animationState","animateChanges","MotionHandoffMarkAsComplete","options","allowProjection","createRendererMotionComponent","preloadedFeatures","useRender","useVisualState","MotionComponent","MeasureLayout","configAndProps","useLayoutId","layoutProjection","combined","ProjectionNode","getProjectionFunctionality","features","loadFeatures","displayName","ForwardRefMotionComponent","forwardRef","layoutGroupId","lowercaseSVGElements","isSVGComponent","indexOf","test","getValueState","getVelocity","resolveVariantFromProps","definition","velocity","isKeyframesTarget","resolveFinalValueInKeyframes","isMotionValue","resolveMotionValue","unwrappedValue","mix","toValue","makeUseVisualState","config","make","scrapeMotionValuesFromProps","createRenderState","onUpdate","makeLatestValues","renderState","makeState","scrapeMotionValues","motionValues","isControllingVariants$1","isVariantNode$1","isInitialAnimationBlocked","variantToSet","list","resolved","transitionEnd","transition","target","valueTarget","transformPropOrder","transformProps","checkStringStartsWith","token","isCSSVariableName","startsAsVariableToken","isCSSVariableToken","singleCssVariableRegex","split","trim","getValueAsType","transform","clamp","number","parse","parseFloat","alpha","scale","createUnitType","unit","endsWith","degrees","percent","px","vh","vw","progressPercentage","browserNumberValueTypes","borderWidth","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","borderRadius","radius","borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","maxWidth","maxHeight","right","bottom","padding","paddingTop","paddingRight","paddingBottom","paddingLeft","margin","marginTop","marginRight","marginBottom","marginLeft","backgroundPositionX","backgroundPositionY","transformValueTypes","rotate","rotateX","rotateY","rotateZ","scaleX","scaleY","scaleZ","skew","skewX","skewY","distance","translateX","translateY","translateZ","x","y","z","perspective","transformPerspective","opacity","originX","originY","originZ","int","round","numberValueTypes","zIndex","fillOpacity","strokeOpacity","numOctaves","translateAlias","numTransforms","buildHTMLStyles","transformTemplate","vars","transformOrigin","hasTransform","hasTransformOrigin","valueAsType","transformString","transformIsDefault","valueIsDefault","buildTransform","dashKeys","offset","array","camelKeys","calcOrigin","origin","buildSVGAttrs","attrX","attrY","attrScale","pathLength","pathSpacing","pathOffset","latest","isSVGTag","viewBox","attrs","dimensions","calcSVGTransformOrigin","spacing","useDashCase","keys","buildSVGPath","createHtmlRenderState","createSvgRenderState","tag","renderHTML","styleProp","assign","getProjectionStyles","setProperty","camelCaseAttributes","renderSVG","_styleProp","setAttribute","scaleCorrectors","isForcedMotionValue","newValues","getValue","liveStyle","scrapeMotionValuesFromProps$1","charAt","toUpperCase","substring","layoutProps","svgMotionConfig","needsMeasure","getBBox","getBoundingClientRect","updateSVGDimensions","tagName","htmlMotionConfig","copyRawValuesOnly","source","useStyle","useInitialMotionValues","useHTMLProps","htmlProps","dragListener","draggable","userSelect","WebkitUserSelect","WebkitTouchCallout","touchAction","tabIndex","onTap","onTapStart","whileTap","useSVGProps","_isStatic","visualProps","rawStyles","createUseRender","forwardMotionProps","filteredProps","isDom","filterProps","elementProps","createMotionComponentFactory","shallowCompare","next","prev","prevLength","resolveVariant","getProps","supportsScrollTimeline","ScrollTimeline","BaseGroupPlaybackControls","constructor","animations","stop","runAll","filter","finished","Promise","all","getAll","propName","setAll","newValue","attachTimeline","timeline","fallback","subscriptions","time","speed","startTime","duration","methodName","controls","flatten","play","pause","complete","GroupPlaybackControls","then","onResolve","onReject","catch","getValueTransition","maxGeneratorDuration","calcGeneratorDuration","generator","done","Infinity","isGenerator","onfinish","isBezierDefinition","easing","supportsFlags","linearEasing","memoSupports","supportsFlag","memoized","supportsLinearEasing","generateLinearEasing","resolution","points","numPoints","isWaapiSupportedEasing","supportedWaapiEasing","every","cubicBezierAsString","linear","ease","easeIn","easeOut","easeInOut","circIn","circOut","backIn","backOut","mapEasingToNativeEasing","segmentEasing","isDragging","isDragActive","setupGesture","elementOrSelector","elements","Element","querySelectorAll","resolveElements","gestureAbortController","AbortController","passive","signal","abort","filterEvents","event","pointerType","isNodeOrChild","parentElement","isPrimaryPointer","button","isPrimary","focusableElements","isPressing","firePointerEvent","dispatchEvent","PointerEvent","bubbles","isValidPressEvent","press","onPressStart","eventOptions","cancelEvents","startPress","startEvent","currentTarget","onPressEnd","onPointerEnd","endEvent","success","removeEventListener","onPointerUp","onPointerCancel","upEvent","useGlobalTarget","cancelEvent","addEventListener","isElementKeyboardAccessible","getAttribute","focusEvent","handleKeydown","handleKeyup","enableKeyboardPress","positionalKeys","clearTime","newTime","addUniqueItem","arr","item","removeItem","index","SubscriptionManager","handler","notify","numSubscriptions","getSize","velocityPerSecond","frameDuration","MotionValue","version","canTrackVelocity","events","updateAndNotify","currentTime","updatedAt","setPrevFrameValue","setCurrent","change","renderRequest","hasAnimated","owner","isNaN","prevFrameValue","prevUpdatedAt","onChange","subscription","on","eventName","unsubscribe","clearListeners","eventManagers","attach","passiveEffect","stopPassiveEffect","setWithVelocity","jump","endAnimation","getPrevious","startAnimation","resolve","animationStart","animationComplete","clearAnimation","animationCancel","isAnimating","destroy","motionValue","setMotionValue","hasValue","addValue","addValueToWillChange","willChange","getOptimisedAppearId","calcBezier","t","a1","a2","cubicBezier","mX1","mY1","mX2","mY2","getTForX","aX","lowerBound","upperBound","currentX","currentT","abs","binarySubdivide","mirrorEasing","reverseEasing","backInOut","anticipate","pow","sin","acos","circInOut","isZeroValueString","isNone","sanitize","floatRegex","singleColorRegex","isColorString","testProp","isNullish","splitColor","aName","bName","cName","match","rgbUnit","clampRgbUnit","rgba","red","green","blue","alpha$1","hex","r","parseInt","hsla","hue","saturation","lightness","color","colorRegex","NUMBER_TOKEN","COLOR_TOKEN","complexRegex","analyseComplexValue","originalValue","toString","indexes","var","types","parsedValue","parseComplexValue","createTransformer","numSections","output","convertNumbersToZero","complex","getAnimatableNone","parsed","transformer","maxDefaults","applyDefaultFilter","slice","defaultValue","functionRegex","functions","defaultValueTypes","backgroundColor","outlineColor","fill","stroke","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","WebkitFilter","getDefaultValueType","defaultValueType","invalidTemplates","isNumOrPxType","getPosFromMatrix","matrix","pos","getTranslateFromMatrix","pos2","pos3","_bbox","matrix3d","transformKeys","nonTranslationalTransformKeys","positionalValues","toResolve","isScheduled","anyNeedsMeasurement","measureAllKeyframes","resolversToMeasure","resolver","needsMeasurement","elementsToMeasure","transformsToRestore","removedTransforms","removeNonTranslationalTransform","measureInitialState","restore","measureEndState","suspendedScrollY","scrollTo","readAllKeyframes","readKeyframes","KeyframeResolver","unresolvedKeyframes","onComplete","isAsync","scheduleResolve","currentValue","finalKeyframe","valueAsRead","readValue","setFinalKeyframe","renderEndStyles","resume","isNumericalString","splitCSSVariableRegex","getVariableValue","depth","exec","token1","token2","parseCSSVariable","getComputedStyle","getPropertyValue","trimmed","testValueType","dimensionValueTypes","findDimensionValueType","find","DOMKeyframesResolver","super","keyframe","resolveNoneKeyframes","originType","targetType","noneKeyframeIndexes","animatableTemplate","noneIndex","makeNoneKeyframesAnimatable","pageYOffset","measuredOrigin","measureViewportBox","measureKeyframe","finalKeyframeIndex","unsetTransformName","unsetTransformValue","isAnimatable","isNotNull","getFinalKeyframe","keyframes","repeat","repeatType","resolvedKeyframes","BaseAnimation","autoplay","delay","repeatDelay","isStopped","hasAttemptedResolve","createdAt","updateFinishedPromise","calcStartTime","resolvedAt","_resolved","onKeyframesResolved","originKeyframe","targetKeyframe","isOriginAnimatable","isTargetAnimatable","hasKeyframesChanged","canAnimate","resolveFinishedPromise","resolvedAnimation","initPlayback","onPostResolved","reject","currentFinishedPromise","mixNumber","hueToRgb","mixImmediate","mixLinearColor","fromExpo","expo","sqrt","colorTypes","asRGBA","model","hslaToRgba","mixColor","fromRGBA","toRGBA","blended","combineFunctions","pipe","transformers","invisibleValues","mixNumber$1","getMixer","mixComplex","mixArray","mixObject","numValues","blendValue","template","originStats","targetStats","mixVisibility","orderedOrigin","pointers","originIndex","originValue","matchOrder","mixer","calcGeneratorVelocity","resolveValue","prevT","springDefaults","granular","safeMin","findSpring","bounce","mass","envelope","derivative","dampingRatio","undampedFreq","exponentialDecay","calcAngularFreq","exp","initialGuess","rootIterations","approximateRoot","stiffness","damping","durationKeys","physicsKeys","isSpringType","spring","optionsOrVisualDuration","visualDuration","restSpeed","restDelta","isResolvedFromDuration","springOptions","root","PI","derived","getSpringOptions","initialVelocity","initialDelta","undampedAngularFreq","isGranularScale","resolveSpring","angularFreq","cos","dampedAngularFreq","freqForT","sinh","cosh","calculatedDuration","currentVelocity","isBelowVelocityThreshold","isBelowDisplacementThreshold","inertia","power","timeConstant","bounceDamping","bounceStiffness","modifyTarget","nearestBoundary","amplitude","ideal","calcDelta","calcLatest","applyFriction","timeReachedBoundary","spring$1","checkCatchBoundary","hasUpdatedFrame","easingLookup","easingDefinitionToFunction","x1","y1","x2","y2","interpolate","input","isClamp","inputLength","isZeroDeltaRange","reverse","mixers","customMixer","mixerFactory","numMixers","easingFunction","createMixers","interpolator","progressInRange","defaultOffset","remaining","offsetProgress","fillOffset","keyframeValues","times","easingFunctions","isEasingArray","absoluteTimes","o","convertOffsetToTimes","mapTimeToKeyframe","frameloopDriver","passTimestamp","generators","decay","tween","percentToProgress","MainThreadAnimation","holdTime","cancelTime","playbackSpeed","pendingPlayState","teardown","onStop","KeyframeResolver$1","keyframes$1","generatorFactory","mapPercentToKeyframes","mirroredGenerator","resolvedDuration","totalDuration","tick","sample","timeWithoutDelay","isInDelayPhase","elapsed","frameGenerator","currentIteration","floor","iterationProgress","isAnimationFinished","finish","driver","newSpeed","hasChanged","onPlay","stopDriver","acceleratedValues","startWaapiAnimation","valueName","keyframeOptions","iterations","direction","supportsWaapi","unsupportedEasingFunctions","AcceleratedAnimation","pregeneratedAnimation","sampleAnimation","pregeneratedKeyframes","pregenerateKeyframes","pendingTimeline","playbackRate","playState","sampleTime","supports","HTMLElement","underDampedSpring","keyframesTransition","getDefaultTransition","valueKey","animateMotionValue","isHandoff","valueTransition","when","_delay","delayChildren","staggerChildren","staggerDirection","isTransitionDefined","shouldSkip","shouldBlockAnimation","protectedKeys","needsAnimating","shouldBlock","animateTarget","targetAndTransition","transitionOverride","animationTypeState","getState","MotionHandoffAnimation","appearId","shouldReduceMotion","setTarget","animateVariant","variant","getAnimation","getChildAnimations","variantChildren","forwardDelay","maxStaggerDuration","generateStaggerDuration","sort","sortByTreeOrder","animateChildren","first","last","sortNodePosition","numVariantProps","getVariantContext","reversePriorityOrder","numAnimationTypes","animateList","resolvedDefinition","animateVisualElement","createAnimationState","createState","buildResolvedTypeValues","changedActiveType","removedKeys","encounteredKeys","removedVariantIndex","typeState","propIsVariant","activeDelta","isActive","isInherited","manuallyAnimateOnMount","prevProp","variantDidChange","checkVariantsDidChange","shouldAnimateType","handledRemovedValues","definitionList","resolvedValues","prevResolvedValues","allKeys","markToAnimate","valueHasChanged","fallbackAnimation","fallbackTarget","getBaseTarget","shouldAnimate","setActive","setAnimateFunction","makeAnimator","reset","createTypeState","whileInView","whileHover","whileDrag","whileFocus","Feature","node","updateAnimationControlsSubscription","unmountControls","prevAnimate","arguments","prevIsPresent","prevPresenceContext","exitAnimation","addDomEvent","extractEventInfo","point","pageX","pageY","addPointerEvent","addPointerInfo","PanSession","handlers","contextWindow","dragSnapToOrigin","lastMoveEvent","lastMoveEventInfo","updatePoint","info","getPanInfo","history","isPanStarted","isDistancePastThreshold","xDelta","yDelta","distance2D","onStart","onMove","handlePointerMove","transformPoint","handlePointerUp","end","onEnd","onSessionEnd","resumeAnimation","panInfo","initialInfo","onSessionStart","removeListeners","updateHandlers","subtractPoint","lastDevicePoint","startDevicePoint","timeDelta","timestampedPoint","lastPoint","calcLength","axis","calcAxisDelta","originPoint","translate","calcBoxDelta","calcRelativeAxis","relative","calcRelativeAxisPosition","calcRelativePosition","calcRelativeAxisConstraints","calcViewportAxisConstraints","layoutAxis","constraintsAxis","defaultElastic","resolveAxisElastic","dragElastic","minLabel","maxLabel","resolvePointElastic","label","createBox","eachAxis","convertBoundingBoxToBox","isIdentityScale","hasScale","has2DTranslate","is2DTranslate","scalePoint","applyPointDelta","boxScale","applyAxisDelta","applyBoxDelta","box","TREE_SCALE_SNAP_MIN","TREE_SCALE_SNAP_MAX","translateAxis","transformAxis","axisTranslate","axisScale","axisOrigin","transformBox","topLeft","bottomRight","transformBoxPoints","getContextWindow","ownerDocument","defaultView","elementDragControls","WeakMap","VisualElementDragControls","openDragLock","currentDirection","constraints","hasMutatedConstraints","elastic","originEvent","snapToCursor","panSession","pauseAnimation","stopAnimation","dragPropagation","onDragStart","resolveConstraints","isAnimationBlocked","getAxisMotionValue","measuredAxis","layoutBox","dragDirectionLock","onDirectionLock","onDrag","lockThreshold","getCurrentDirection","updateAxis","getAnimationState","getTransformPagePoint","onDragEnd","_point","shouldDrag","axisValue","applyConstraints","measure","prevConstraints","resolveRefConstraints","calcRelativeConstraints","resolveDragElastic","relativeConstraints","rebaseAxisConstraints","onMeasureDragConstraints","constraintsElement","constraintsBox","rootProjectionNode","viewportBox","scroll","measurePageBox","measuredConstraints","calcViewportConstraints","userConstraints","convertBoxToBoundingBox","dragMomentum","dragTransition","onDragTransitionEnd","momentumAnimations","startAxisValueAnimation","dragKey","externalMotionValue","scalePositionWithinConstraints","boxProgress","sourceLength","targetLength","updateScroll","updateLayout","addListeners","stopPointerListener","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","stopLayoutUpdateListener","hasLayoutChanged","asyncHandler","globalProjectionState","hasAnimatedSinceResize","hasEverUpdated","pixelsToPercent","pixels","correctBorderRadius","correct","correctBoxShadow","treeScale","projectionDelta","original","shadow","xScale","yScale","averageScale","MeasureLayoutWithContext","componentDidMount","layoutGroup","switchLayoutGroup","correctors","defaultScaleCorrectors","group","didUpdate","layoutDependency","willUpdate","promote","relegate","stack","getStack","members","currentAnimation","isLead","componentWillUnmount","promoteContext","scheduleCheckAfterUnmount","remove","deregister","applyTo","boxShadow","compareByDepth","FlatTree","isDirty","borders","numBorders","asNumber","isPx","getRadius","radiusName","easeCrossfadeIn","compress","easeCrossfadeOut","copyAxisInto","originAxis","copyBoxInto","originBox","copyAxisDeltaInto","originDelta","removePointDelta","removeAxisTransforms","transforms","scaleKey","originKey","sourceAxis","removeAxisDelta","xKeys","yKeys","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","axisEquals","axisEqualsRounded","boxEqualsRounded","aspectRatio","axisDeltaEquals","NodeStack","scheduleRender","prevLead","lead","indexOfNode","findIndex","member","preserveFollowOpacity","show","resumeFrom","preserveOpacity","snapshot","animationValues","isUpdating","isLayoutDirty","crossfade","hide","exitAnimationComplete","resumingFrom","removeLeadSnapshot","metrics","totalNodes","resolvedTargetDeltas","recalculatedProjection","isDebug","MotionDebug","transformAxes","hiddenVisibility","visibility","resetDistortingTransform","sharedAnimationValues","setStaticValue","cancelTreeOptimisedTransformAnimations","projectionNode","hasCheckedOptimisedAppear","MotionCancelOptimisedAnimation","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","animationId","isTreeAnimating","isProjectionDirty","isSharedProjectionDirty","isTransformDirty","updateManuallyBlocked","updateBlockedByResize","isSVG","needsReset","shouldResetTransform","eventHandlers","hasTreeAnimated","updateScheduled","scheduleUpdate","projectionUpdateScheduled","checkUpdateFailed","clearAllSnapshots","updateProjection","nodes","propagateDirtyNodes","resolveTargetDelta","calcProjection","cleanDirtyNodes","record","resolvedRelativeTargetAt","hasProjected","isVisible","animationProgress","sharedNodes","path","notifyListeners","subscriptionManager","hasListeners","SVGElement","cancelDelay","resizeUnblockUpdate","timeout","checkElapsed","finishAnimation","registerSharedNode","hasRelativeTargetChanged","newLayout","isTreeAnimationBlocked","relativeTarget","layoutTransition","defaultLayoutTransition","onLayoutAnimationStart","onLayoutAnimationComplete","targetChanged","targetLayout","hasOnlyRelativeTargetChanged","setAnimationOrigin","animationOptions","blockUpdate","unblockUpdate","isUpdateBlocked","startUpdate","resetSkewAndRotation","getTransformTemplate","shouldNotifyListeners","prevTransformTemplateValue","updateSnapshot","clearMeasurements","clearIsLayoutDirty","resetTransformStyle","notifyLayoutUpdate","clearSnapshot","removeLeadSnapshots","scheduleUpdateProjection","prevLayout","layoutCorrected","phase","isRoot","wasRoot","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","removeTransform","pageBox","removeElementScroll","roundAxis","measuredBox","checkNodeWasScrollRoot","boxWithoutScroll","applyTransform","transformOnly","withTransforms","boxWithoutTransform","setTargetDelta","targetDelta","forceRelativeParentToResolveTarget","relativeParent","forceRecalculation","getLead","isShared","attemptToResolveRelativeTarget","getClosestProjectingParent","relativeTargetOrigin","targetWithTransforms","isProjecting","canSkip","pendingAnimation","prevTreeScaleX","prevTreeScaleY","treePath","isSharedTransition","treeLength","display","applyTreeDeltas","prevProjectionDelta","createProjectionDeltas","notifyAll","projectionDeltaWithTransform","snapshotLatestValues","mixedValues","relativeLayout","isSharedLayoutAnimation","isOnlyMember","shouldCrossfadeOpacity","hasOpacityCrossfade","prevRelativeTarget","mixTargetDelta","mixAxisDelta","mixAxis","follow","opacityExit","borderLabel","followRadius","leadRadius","mixValues","motionValue$1","animateSingleValue","completeAnimation","applyTransformsToTarget","shouldAnimatePositionOnly","xLength","yLength","shouldPreserveFollowOpacity","getPrevLead","hasDistortingTransform","resetValues","styles","pointerEvents","emptyStyles","valuesToRender","latestTransform","xTranslate","yTranslate","zTranslate","elementScaleX","elementScaleY","buildProjectionTransform","corrected","num","resetTree","measuredLayout","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","onBeforeLayoutMeasure","userAgentContains","string","navigator","userAgent","roundPoint","maxDistance","DocumentProjectionNode","documentElement","scrollLeft","body","scrollTop","HTMLProjectionNode","documentNode","position","removePointerDownListener","onPointerDown","pointerDownEvent","session","createPanHandlers","onPanSessionStart","onPanStart","onPan","onPanEnd","removeGroupControls","dragControls","handleHoverEvent","lifecycle","handlePressEvent","observerCallbacks","observers","fireObserverCallback","entry","fireAllObserverCallbacks","entries","observeIntersection","rootInteresectionObserver","lookupRoot","rootObservers","JSON","stringify","IntersectionObserver","initIntersectionObserver","observe","unobserve","thresholdNames","gestureAnimations","hasEnteredView","isInView","startObserver","viewport","rootMargin","amount","once","threshold","isIntersecting","onViewportEnter","onViewportLeave","prevViewport","hasViewportOptionChanged","globalTapTarget","onFocus","isFocusVisible","matches","onBlur","onHoverStart","onPointerEnter","enterEvent","onHoverEnd","onPointerLeave","leaveEvent","prefersReducedMotion","hasReducedMotionListener","valueTypes","visualElementStore","propEventHandlers","VisualElement","_props","_prevProps","_visualElement","valueSubscriptions","prevMotionValues","propEventSubscriptions","notifyUpdate","triggerBuild","renderInstance","renderScheduledAt","baseTarget","initialValues","initialMotionValues","removeFromVariantTree","addVariantChild","bindToMotionValue","matchMedia","motionMediaQuery","setReducedMotionPreferences","addListener","initPrefersReducedMotion","feature","valueIsTransform","removeOnChange","latestValue","removeOnRenderRequest","removeSyncCheck","MotionCheckAppearSync","other","sortInstanceNodePosition","featureDefinition","FeatureConstructor","build","measureInstanceViewportBox","getStaticValue","listener","nextValue","prevValue","existingValue","removeValue","updateMotionValuesFromProps","handleChildMotionValue","getVariant","getClosestVariantNode","closestVariantNode","removeValueFromRenderState","getBaseTargetFromProps","readValueFromInstance","setBaseTarget","valueFromInitial","DOMVisualElement","compareDocumentPosition","childSubscription","textContent","HTMLVisualElement","defaultType","computedStyle","SVGVisualElement","motion"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247]}