{"version":3,"file":"About-CM_T098r.js","sources":["../../src/pages/About.tsx"],"sourcesContent":["import { memo, useCallback, useState } from \"react\";\nimport { motion } from \"framer-motion\";\nimport { usePortfolioStore } from \"@/utils/config\";\nimport Button from \"@/components/atoms/Button\";\nimport Icon from \"@/components/atoms/Icon\";\nimport Typography from \"@/components/atoms/Typography\";\nimport {\n  containerVariants,\n  heroCardVariants,\n  cardVariants,\n  overlayVariants,\n} from \"@/utils/animations\";\nimport { aboutPageStyles } from \"@/utils/styles\";\nimport { isValidUrl } from \"@/utils/helpers\";\nimport { Helmet } from \"react-helmet-async\";\nimport {\n  TypographyVariant,\n  Variant,\n  Size,\n  type AboutCard,\n} from \"@/utils/types\";\nimport clsx from \"clsx\";\n\n/**\n * The About page displaying a dynamic grid of cards with hover effects and a CTA.\n * @returns A responsive page with a grid layout, interactive cards, and SEO meta tags.\n */\nconst AboutPage = () => {\n  const { about } = usePortfolioStore();\n  const [activeCard, setActiveCard] = useState<number | null>(null);\n\n  const getSizeClasses = useCallback((size: Size) => {\n    return clsx({\n      \"md:col-span-2 md:row-span-2 min-h-[300px] xs:min-h-[320px]\":\n        size === Size.Large,\n      \"md:col-span-2 min-h-[200px] xs:min-h-[220px]\": size === Size.Medium,\n      \"min-h-[150px] xs:min-h-[170px]\": size === Size.Small,\n    });\n  }, []);\n\n  const getTypographyClasses = (size: Size) => {\n    return {\n      title: clsx({\n        \"text-2xl xs:text-3xl sm:text-4xl\": size === Size.Large,\n        \"text-lg xs:text-xl sm:text-2xl\": size === Size.Medium,\n        \"text-base xs:text-lg sm:text-xl\": size === Size.Small,\n      }),\n      content: clsx({\n        \"text-sm xs:text-base sm:text-lg\": size === Size.Large,\n        \"text-xs xs:text-sm sm:text-base\":\n          size === Size.Medium || size === Size.Small,\n      }),\n    };\n  };\n\n  return (\n    <>\n      <Helmet>\n        <title>About | Hemanth Sayimpu</title>\n        <meta\n          name=\"description\"\n          content=\"Learn more about Hemanth Sayimpu, a full-stack developer passionate about creating user-centric web applications.\"\n        />\n        <meta\n          name=\"keywords\"\n          content=\"about, developer, full-stack, react, typescript\"\n        />\n        <meta property=\"og:title\" content=\"About | Hemanth Sayimpu\" />\n        <meta\n          property=\"og:description\"\n          content=\"Discover the journey and skills of Hemanth Sayimpu in web development.\"\n        />\n        <meta property=\"og:type\" content=\"website\" />\n        <meta\n          property=\"og:url\"\n          content=\"https://hemanthscode.github.io/about\"\n        />\n        <meta\n          property=\"og:image\"\n          content=\"https://images.unsplash.com/photo-1516321310762-479437144403\"\n        />\n      </Helmet>\n      <motion.div\n        className={clsx(aboutPageStyles.base, \"bg-background\")}\n        variants={containerVariants}\n        initial=\"hidden\"\n        animate=\"visible\"\n        role=\"main\"\n        aria-labelledby=\"about-page-title\"\n      >\n        <motion.div\n          className={aboutPageStyles.header}\n          variants={containerVariants}\n        >\n          <Typography\n            variant={TypographyVariant.H1}\n            id=\"about-page-title\"\n            className={aboutPageStyles.title}\n            role=\"heading\"\n            aria-level={1}\n          >\n            {about.title}\n          </Typography>\n          <Typography\n            variant={TypographyVariant.P}\n            className={aboutPageStyles.description}\n          >\n            {about.description}\n          </Typography>\n        </motion.div>\n\n        <div className={aboutPageStyles.container}>\n          {about.cards?.length ? (\n            <motion.div\n              className={aboutPageStyles.cardGrid}\n              variants={containerVariants}\n              role=\"list\"\n            >\n              {about.cards.map((card: AboutCard, index: number) => {\n                const typographyClasses = getTypographyClasses(card.size);\n                return (\n                  <motion.button\n                    key={card.id}\n                    variants={\n                      card.type === \"hero\" ? heroCardVariants : cardVariants\n                    }\n                    initial=\"hidden\"\n                    animate=\"visible\"\n                    transition={{ delay: index * 0.1 }}\n                    className={clsx(\n                      aboutPageStyles.card,\n                      getSizeClasses(card.size),\n                      card.bgColor,\n                      \"relative overflow-hidden group\",\n                    )}\n                    onMouseEnter={() => setActiveCard(card.id)}\n                    onMouseLeave={() => setActiveCard(null)}\n                    whileHover=\"hover\"\n                    whileTap=\"tap\"\n                    role=\"listitem\"\n                    aria-labelledby={`card-${card.id}`}\n                    onClick={() => {}}\n                  >\n                    <div className=\"h-full flex flex-col justify-between relative z-10\">\n                      {card.icon && (\n                        <div className=\"mb-3 xs:mb-4\">\n                          <Icon\n                            icon={card.icon}\n                            className={clsx(\n                              card.textColor || \"text-white\",\n                              card.size === Size.Large\n                                ? \"w-8 h-8 xs:w-9 xs:h-9\"\n                                : \"w-6 h-6 xs:w-7 xs:h-7\",\n                            )}\n                            aria-hidden=\"true\"\n                          />\n                        </div>\n                      )}\n                      <Typography\n                        variant={\n                          card.size === Size.Large\n                            ? TypographyVariant.H2\n                            : TypographyVariant.H3\n                        }\n                        className={clsx(\n                          typographyClasses.title,\n                          card.textColor || \"text-white\",\n                          \"mb-2 xs:mb-3\",\n                        )}\n                        id={`card-${card.id}`}\n                        role=\"heading\"\n                        aria-level={card.size === Size.Large ? 2 : 3}\n                      >\n                        {card.title}\n                      </Typography>\n                      {card.subtitle && (\n                        <Typography\n                          variant={TypographyVariant.P}\n                          className={clsx(\n                            \"text-sm xs:text-base sm:text-lg opacity-80 mb-3 xs:mb-4\",\n                            card.textColor || \"text-white\",\n                          )}\n                        >\n                          {card.subtitle}\n                        </Typography>\n                      )}\n                      <Typography\n                        variant={TypographyVariant.P}\n                        className={clsx(\n                          typographyClasses.content,\n                          card.textColor || \"text-white\",\n                        )}\n                      >\n                        {card.content}\n                      </Typography>\n                    </div>\n                    <motion.div\n                      className={aboutPageStyles.cardOverlay}\n                      variants={overlayVariants}\n                      initial=\"hidden\"\n                      animate={activeCard === card.id ? \"visible\" : \"hidden\"}\n                    />\n                    {card.type === \"hero\" && (\n                      <div\n                        className={aboutPageStyles.heroDecoration}\n                        aria-hidden=\"true\"\n                      />\n                    )}\n                    {card.type === \"stat\" && (\n                      <div\n                        className={aboutPageStyles.statDecoration}\n                        aria-hidden=\"true\"\n                      />\n                    )}\n                  </motion.button>\n                );\n              })}\n            </motion.div>\n          ) : (\n            <Typography\n              variant={TypographyVariant.P}\n              className=\"text-center text-accent text-sm xs:text-base\"\n              role=\"alert\"\n            >\n              No cards available.\n            </Typography>\n          )}\n        </div>\n\n        {about.cta && (\n          <motion.div\n            initial=\"hidden\"\n            whileInView=\"visible\"\n            viewport={{ once: true }}\n            variants={containerVariants}\n            className={aboutPageStyles.cta}\n          >\n            <Typography\n              variant={TypographyVariant.H2}\n              className={aboutPageStyles.ctaTitle}\n              role=\"heading\"\n              aria-level={2}\n            >\n              {about.cta.title}\n            </Typography>\n            <Typography\n              variant={TypographyVariant.P}\n              className={aboutPageStyles.ctaDescription}\n            >\n              {about.cta.description}\n            </Typography>\n            <Button\n              to={about.cta.buttonLink}\n              variant={Variant.Primary}\n              size={Size.Large}\n              ariaLabel={about.cta.buttonText}\n              className={aboutPageStyles.ctaButton}\n              disabled={!isValidUrl(about.cta.buttonLink)}\n            >\n              {about.cta.buttonText}\n            </Button>\n          </motion.div>\n        )}\n      </motion.div>\n    </>\n  );\n};\n\nexport default memo(AboutPage);\n"],"names":["About","memo","about","usePortfolioStore","activeCard","setActiveCard","useState","getSizeClasses","useCallback","size","clsx","Size","Large","Medium","Small","jsxs","Fragment","children","Helmet","jsx","name","content","property","motion","div","className","aboutPageStyles","base","variants","containerVariants","initial","animate","role","header","Typography","variant","TypographyVariant","H1","id","title","P","description","container","cards","length","cardGrid","map","card","index","typographyClasses","button","type","heroCardVariants","cardVariants","transition","delay","bgColor","onMouseEnter","onMouseLeave","whileHover","whileTap","onClick","icon","Icon","textColor","H2","H3","subtitle","cardOverlay","overlayVariants","heroDecoration","statDecoration","cta","whileInView","viewport","once","ctaTitle","ctaDescription","Button","to","buttonLink","Variant","Primary","ariaLabel","buttonText","ctaButton","disabled","isValidUrl"],"mappings":"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"}